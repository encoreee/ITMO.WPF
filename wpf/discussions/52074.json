[
  {
    "Id": "174797",
    "ThreadId": "52074",
    "Html": "I have a DataGridTemplateColumn with a CellTemplate and a CellEditingTemplate both binding to the same property of my data object.<br>\r\nAfter changing the property's value in edit mode when I tab into the next column the cell returns to non-editing mode as expected.<br>\r\n<br>\r\nThe problem now is that the values in my cell now jump back to the original values. I suspect the binding of the CellTemplate now binds to the outdated value of the data object until I finish editing the row which commits the changes and updates the binding. So only after leaving the row the binding updates properly.<br>\r\n<br>\r\nI wonder how the built-in columns like TextboxColumn and CheckboxColumn manage to display the correct values all the time?<br>\r\nHow can I achieve this for my TemplateColumn?<br>\r\n",
    "PostedDate": "2009-04-02T06:21:53.093-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "175079",
    "ThreadId": "52074",
    "Html": "Take a look at this post, <a href=\"http://blogs.msdn.com/vinsibal/archive/2008/08/19/wpf-datagrid-stock-and-template-columns.aspx\">http://blogs.msdn.com/vinsibal/archive/2008/08/19/wpf-datagrid-stock-and-template-columns.aspx</a>.  In particular the section on Template Columns.  It shows how to set the bindings to properly work for the editing scenario.\r\n",
    "PostedDate": "2009-04-02T18:24:08.417-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "175158",
    "ThreadId": "52074",
    "Html": "Thanks for the simple solution.<br>\r\nI only had to set <span style=\"font-size:10pt;color:red;line-height:125%;font-family:'courier new'\">UpdateSourceTrigger</span><span style=\"font-size:10pt;color:blue;line-height:125%;font-family:'courier new'\">=PropertyChanged</span> in the editing template binding.<br>\r\n",
    "PostedDate": "2009-04-03T00:54:09.547-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]