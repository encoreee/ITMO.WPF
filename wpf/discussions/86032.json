[
  {
    "Id": "292874",
    "ThreadId": "86032",
    "Html": "<p>Does the WPF DataGrid support accessiblity applications (i.e. screen readers), namely, JAWS?</p>\r\n<p>I am developing a WPF application that will be used in govenment offices. This means we are required to meet section 508 (Accessibility) guidelines. I haven't had any problems with WPF controls supporting accessiblity until the DataGrid. When I use a screen reader&nbsp;(JAWS) to read the contents in the data grid&nbsp;it only reads the underlying type name (i.e. MyCompany.MyApp.MyType)&nbsp;the grid is bound to (twice in a row in fact). I have tried to get it working but have not been successfull. Is this is bug in the WPF DataGrid or was it not designed to be accessible. Given the limited content in help docs and online about WPF DataGrid accessibility any help you can provide would be greatly apprecianted.</p>\r\n<p>Some specifics about how I'm using the DataGrid:<br>ReadOnly, 3 Columns, bound to a collection of search objects.<br>Column1: DataGridTextColumn<br>Column2: DataGridTemplateColumn [Image] (AutomationProperties.Name used to describe image not working either)<br>Column3: DataGridTextColumn (Style set to wrap text)</p>\r\n<p>Thanks!</p>\r\n<p>-Thad</p>",
    "PostedDate": "2010-02-19T15:29:54.447-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "415934",
    "ThreadId": "86032",
    "Html": "<p>I've been playing around with the WPF and Silverlight DataGrids in terms of accessibility and&nbsp;in particularly&nbsp;it's interaction with JAWS 11 (JAWS only began supporting UIA in version 11). &nbsp;The WPF DataGrid seems to be pretty good with JAWS if you do the following:</p>\r\n<p>override the ToString on your objects to give a useful description of the object e.g. return Forename + &quot; &quot; + Surname.</p>\r\n<p>Then override the OnLoadingRow of the DataGrid to set the row header to the bound up object as follows:</p>\r\n<p>&nbsp;</p>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>public class MyDataGrid : DataGrid</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>protected override void OnLoadingRow(DataGridRowEventArgs e)</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>{</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>e.Row.Header = e.Row.DataContext;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>base.OnLoadingRow(e);</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\"><span style=\"white-space:pre\"> </span>}</div>\r\n<p>\r\n<p><span style=\"white-space:pre\"> public class MyDataGrid : DataGrid \t{</span></p>\r\n<p><span style=\"white-space:pre\"> </span>protected override void OnLoadingRow(DataGridRowEventArgs e)</p>\r\n<p><span style=\"white-space:pre\"> </span>{</p>\r\n<p><span style=\"white-space:pre\"> </span>e.Row.Header = e.Row.DataContext;</p>\r\n<p><span style=\"white-space:pre\"> </span>base.OnLoadingRow(e);</p>\r\n<p><span style=\"white-space:pre\"> </span>}</p>\r\n<p><span style=\"white-space:pre\"> </span>}</p>\r\n<p>You also need to have the row headers visible in the DataGrid's HeaderVisibility although I set the RowHeaderStyle's width to be 0px.</p>\r\n<p>Now JAWS 11 should read out row headers (your ToString overrides of the objects) when moving between rows, and the column header and cell value when moving between cells.</p>\r\n<p>What I currently can't work out is how to set the AutomationProperties.Name property on the DataGridCells for DataGridTemplateColumns. &nbsp;I was hoping it would be as simple as setting it on the column but unfortunately not.</p>\r\n<p>The Silverlight DataGrid however is very poor in terms of accessibility support. &nbsp;Microsoft claim that they are setting the necessary UIA properties (that they are) and raising the necessary UIA event. &nbsp;Despite JAWS 11 working very well with the WPF DataGrid, it just won't read out anything of use for the Silverlight DataGrid so something isn't right.</p>\r\n</p>\r\n<p>Hope that helps and let me know if you know how to properly UIA those DataGridTemplateColumns.</p>\r\n<p>Ben</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-03-09T06:56:28.62-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]