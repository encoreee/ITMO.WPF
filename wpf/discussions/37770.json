[
  {
    "Id": "125244",
    "ThreadId": "37770",
    "Html": "Hi!<br>\r\n<br>\r\nI'm iterating over a C#&nbsp;object's property list with C#, and am filling up a Grid column with a Label in the first column, and an editing control appropriate to the property in the second column.&nbsp; The editing control gets a TwoWay data binding to the object's property.&nbsp; <br>\r\n<br>\r\nThe idea have been to use a WPF DataGrid for properties that are List&lt;something&gt;.<br>\r\n<br>\r\nOn my test source object I have an IList<span style=\"font-size:13px\">&lt;SillyClassWithOneField&gt; property (where SillyClassWithOneField is a class with a single string property).<br>\r\n<br>\r\nThe DataGrid is created with a data binding to the list property, and shows up with the list values.&nbsp; This is the code that creates the DataGrid control:<br>\r\n<span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">&nbsp;&nbsp; DataGrid</span></span><span style=\"font-size:13px\"> datagrid = </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">new</span></span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">DataGrid</span></span><span style=\"font-size:13px\">();<br>\r\n&nbsp;&nbsp; datagrid.VerticalAlignment = </span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">VerticalAlignment</span></span><span style=\"font-size:13px\">.Stretch;<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">&nbsp;&nbsp; Binding</span></span><span style=\"font-size:13px\"> binding =&nbsp; </span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">new</span></span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">Binding</span></span><span style=\"font-size:13px\">(propertyName)<br>\r\n&nbsp;&nbsp;&nbsp;{<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Source = sourceObj,<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Mode = </span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">BindingMode</span></span><span style=\"font-size:13px\">.TwoWay,<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; UpdateSourceTrigger = </span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">UpdateSourceTrigger</span></span><span style=\"font-size:13px\">.PropertyChanged<br>\r\n&nbsp;&nbsp; };<br>\r\n</span></span></span><span style=\"font-size:13px\">&nbsp;&nbsp; datagrid.SetBinding(</span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">ItemsControl</span></span><span style=\"font-size:13px\">.ItemsSourceProperty, binding);<br>\r\n&nbsp;&nbsp; control = datagrid;<br>\r\n<br>\r\nAs said, the list values show up, but adding to the DataGrid or modifying existing values in the DataGrid does not cause the list in the source property to be changed.<br>\r\n<br>\r\nDoes anyone know how to fix this?&nbsp; Am I lacking some magic in the binding setup?<br>\r\n<br>\r\nThanx!</span></span>\r\n",
    "PostedDate": "2008-10-15T03:46:27.887-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "125264",
    "ThreadId": "37770",
    "Html": "Could the reason no update takes place, be that I'm binding to the ItemsSource property?&nbsp; Ie. something that's only used as a source, but not updated when the value changes?<br>\r\n",
    "PostedDate": "2008-10-15T05:13:02.51-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "125267",
    "ThreadId": "37770",
    "Html": "What do your DataGridColumn definitions look like?&nbsp; Also, how are you defining your data source?\r\n",
    "PostedDate": "2008-10-15T05:26:42.96-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "125282",
    "ThreadId": "37770",
    "Html": "I have no DataGridColumn definitions, so I guess I'm running with whatever are the defaults.&nbsp; I still haven't figured out how to define DataGridColumns and their templates in C# code.&nbsp; All the examples I can find, in books and on the net, are in XAML.&nbsp; I have tried to create columns programatically, but I can't figure out where to set the binding, and what the bindings should bind to (in the case of a List&lt;string&gt; property, should I bind to the source object and the property?&nbsp; But in the case of a List&lt;SomeClass&gt;, what should the binding for a column be to?)<br>\r\n<br>\r\nThe data source is a C# class with properties.&nbsp; To complicate things, we inject a proxy object between the data source.&nbsp; This proxy object implements the INotifyPropertyChanged interface, wraps the original source, has the same property setters and getters, with the setters calculating whether a property has been changed, and sends an event notifying listeners, if a property has been found to have changed its value.&nbsp; <br>\r\n<br>\r\nThe reason for the proxy is that the owners of the base class don't want to introduce dependencies to the INotifyPropertyChanged interface.<br>\r\n<br>\r\nThe original data source in my test case is defined like this (in a slightly anonymized version, with class and property&nbsp;xml-doc comments removed,&nbsp;and with indentation messed up because of the pasting into this forum (I have hand-reindented after pasting)):<br>\r\n<br>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">public</span></span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">class</span></span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">MockObject : SomeBaseClass<br>\r\n</span></span><span style=\"font-size:13px\">{<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\"><span style=\"color:#000000\">&nbsp;&nbsp; </span>public</span></span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">string</span></span><span style=\"font-size:13px\"> AString { </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">get</span></span><span style=\"font-size:13px\">; </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">set</span></span><span style=\"font-size:13px\">; }<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&nbsp;&nbsp; public</span></span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">char</span></span><span style=\"font-size:13px\">? ANullableChar { </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">get</span></span><span style=\"font-size:13px\">; </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">set</span></span><span style=\"font-size:13px\">; }<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&nbsp;&nbsp; public</span></span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">char</span></span><span style=\"font-size:13px\">? ANullableCharWithSuggestedValues { </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">get</span></span><span style=\"font-size:13px\">; </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">set</span></span><span style=\"font-size:13px\">; }<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&nbsp;&nbsp; public</span></span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">bool</span></span><span style=\"font-size:13px\"> ABool { </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">get</span></span><span style=\"font-size:13px\">; </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">set</span></span><span style=\"font-size:13px\">; }<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&nbsp;&nbsp; public</span></span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">int</span></span><span style=\"font-size:13px\"> AnInt { </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">get</span></span><span style=\"font-size:13px\">; </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">set</span></span><span style=\"font-size:13px\">; }<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&nbsp;&nbsp; public</span></span><span style=\"font-size:13px\"> MockEnum? ANullableEnum { </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">get</span></span><span style=\"font-size:13px\">; </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">set</span></span><span style=\"font-size:13px\">; }<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&nbsp;&nbsp; public</span></span><span style=\"font-size:13px\"> MockEnum AnEnum { </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">get</span></span><span style=\"font-size:13px\">; </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">set</span></span><span style=\"font-size:13px\">; }\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&nbsp;&nbsp; private</span></span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">readonly</span></span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">IList</span></span><span style=\"font-size:13px\">&lt;</span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">string</span></span><span style=\"font-size:13px\">&gt; aListOfStrings = </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">new</span></span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">List</span></span><span style=\"font-size:13px\">&lt;</span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">string</span></span><span style=\"font-size:13px\">&gt;();<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&nbsp;&nbsp; public</span></span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">IList</span></span><span style=\"font-size:13px\">&lt;</span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">string</span></span><span style=\"font-size:13px\">&gt; AListOfStrings<br>\r\n&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">get</span></span><span style=\"font-size:13px\"> { </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">return</span></span><span style=\"font-size:13px\"> aListOfStrings; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">set</span></span><span style=\"font-size:13px\"> <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; aListOfStrings.Clear();<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach</span></span><span style=\"font-size:13px\">(</span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">string</span></span><span style=\"font-size:13px\"> s </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">in</span></span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">value</span></span><span style=\"font-size:13px\">)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; aListOfStrings.Add(s);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp; }<br>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;&nbsp; public class SillyClassWithOneField<br>\r\n&nbsp;&nbsp;&nbsp;{<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public string AStringValueThatBecomesTheColumnHeader { get; set; }<br>\r\n&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;private readonly IList&lt;SillyClassWithOneField&gt; aListOfStructs = new List&lt;SillyClassWithOneField&gt;();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;public IList&lt;SillyClassWithOneField&gt; AListOfStucts<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;{<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get { return aListOfStructs; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; aListOfStrings.Clear();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach (SillyClassWithOneField s in value)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; aListOfStructs.Add(s);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>\r\n}</p>\r\n</span></p>\r\n",
    "PostedDate": "2008-10-15T06:07:31.34-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "125344",
    "ThreadId": "37770",
    "Html": "&gt; I'm iterating over a C#&nbsp;object's property list with C#, and am filling up a Grid column with a Label in the first column, and an editing<br>\r\n&gt; control appropriate to the property in the second column.&nbsp; The editing control gets a TwoWay data binding to the object's property.&nbsp; <br>\r\n<br>\r\nI guess this is similar to what you (vinsibal) does here:<br>\r\n&nbsp;<a href=\"http://blogs.msdn.com/vinsibal/archive/2008/05/27/using-ieditablecollectionview-with-dynamically-generated-gridviewcolumns.aspx\">http://blogs.msdn.com/vinsibal/archive/2008/05/27/using-ieditablecollectionview-with-dynamically-generated-gridviewcolumns.aspx</a><br>\r\n<br>\r\nBut I'd like to go down one step further, and handle the properties that are lists of something.&nbsp; Primarily lists of strings, but also lists of instances of classes consisting of public properties.<br>\r\n<br>\r\nAnd that's where it breaks down for me...<br>\r\n",
    "PostedDate": "2008-10-15T09:06:24.79-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "125357",
    "ThreadId": "37770",
    "Html": "&gt;&gt; I'm iterating over a C#&nbsp;object's property list with C#, and am filling up a Grid column with a Label in the first column, and an editing<br>\r\n&gt;&gt; control appropriate to the property in the second column.&nbsp; The editing control gets a TwoWay data binding to the object's property.&nbsp; <br>\r\n<br>\r\n&gt; I guess this is similar to what you (vinsibal) does here:<br>\r\n&gt; &nbsp;<a href=\"http://blogs.msdn.com/vinsibal/archive/2008/05/27/using-ieditablecollectionview-with-dynamically-generated-gridviewcolumns.aspx\">http://blogs.msdn.com/vinsibal/archive/2008/05/27/using-ieditablecollectionview-with-dynamically-generated-gridviewcolumns.aspx</a><br>\r\n<br>\r\nNo it's not..&nbsp; It's actually very close to what I'm trying to accomplish.<br>\r\n<br>\r\nWhat you do here is build up columns (while I am building rows), and for each column you create a FrameworkElementFactory and a Binding, and set the Binding on the FrameworkElementFactory.&nbsp; You also create a DataTemplate that gets the FrameworkElementFactory, and then the column gets the template.<br>\r\n<br>\r\nThis sounds a lot like what happens when I call DataGrid.SetBinding.(ItemsControl.ItemsSourceProperty, binding);&nbsp;where binding is bound to a source object property that is a list of instances of a class with properties...?<br>\r\n<br>\r\nOne problem here is that the FrameworkElementFactory and friends seems to be deprecated.<br>\r\n<br>\r\nAnother problem here is that I don't understand how the binding on the template factory maps&nbsp;down to binding to the collection members.&nbsp;\r\n",
    "PostedDate": "2008-10-15T09:33:08.933-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]