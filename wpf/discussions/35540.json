[
  {
    "Id": "118120",
    "ThreadId": "35540",
    "Html": "Hey All,<br>\r\n<br>\r\nGood start on the grid. I am trying to figure out how I can tab from one cell to another and have the focus set on the edit control, inside the cell, when I tab into the cell. Right now it seems I have to tab twice to set focus on the control inside the cell. I tab once to get into the cell and another time to set the focus on the child control inside the cell. Am I doing something wrong?<br>\r\n<br>\r\nThanks!\r\n",
    "PostedDate": "2008-09-12T07:07:09.27-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "118258",
    "ThreadId": "35540",
    "Html": "What type of columns have you created?&nbsp; DataGridTextColumn should work on the first tab.&nbsp; CheckboxColumn will be fixed for v1.&nbsp; The template and hyperlink column are by design as they are composed of a set of visuals.&nbsp; You can however customize the focus by attaching to DataGrid.PreparingCellForEdit() and setting the focus on the particular child element that you want.\r\n",
    "PostedDate": "2008-09-12T15:44:13.15-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "118319",
    "ThreadId": "35540",
    "Html": "<div class=Section1>\r\n<p class=MsoNormal>These are DataTemplate cells I am working with. I will try to use the <span style=\"font-size:9pt;font-family:'Verdana','sans-serif'\">DataGrid.PreparingCellForEdit() you mentioned.</span></p>\r\n</div>\r\n",
    "PostedDate": "2008-09-13T05:35:10.223-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "118568",
    "ThreadId": "35540",
    "Html": "<span style=\"font-size:9pt;font-family:'Verdana','sans-serif'\">DataGrid.PreparingCellForEdit()&nbsp;<span style=\"font-size:9pt;font-family:'Verdana','sans-serif'\"> does not seem to help the issue. This event only seems to fire when I double click into the cell. What I am trying to do is tab from one cell to the next. When I tab into the cell I need to set the focus on the control that I am editing data with inside the DataTemplate cell. For example I have a checkbox inside my data template. When I tab I want the Check box to get focus immediately. Make sense? Is there anyway to do this now? If not, it would be nice to have a property on DataTemplateColumns where we can specify the name of a control inside the template that gets focus when the cell gets focus (via a tab or click or whatever..)<br>\r\n<br>\r\nThanks!</span></span>\r\n",
    "PostedDate": "2008-09-15T08:06:50.943-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "118802",
    "ThreadId": "35540",
    "Html": "We finally got this to work. Well kinda..<br>\r\n<br>\r\nWe use the code (see below) to get the tab and shift+tab keys to walk us through&nbsp;the DataGrid cells&nbsp;while setting the focus to the control contained in DataTemplate Columns. Our grid is made up of all DataGridTemplateColumns.&nbsp;We may&nbsp;have not approached this in the correct manner but it is working for us, with two exceptions:<br>\r\n<br>\r\n1)&nbsp;This solution only works if you have only one control set inside the content of the DataGridCell.<br>\r\n2) We have problems reading the DataGridCell.Content if the Content is a 3rd party control. For example, we are using controls from DevComponents (<a href=\"http://www.devcomponents.com\">www.devcomponents.com</a>). For example, we have a grid with three Columns (all DataTemplateColumn). The first column is a simple Wpf textbox. The 2nd column is the DevComponents DoubleInput control. The 3rd column is a simple Wpf textbox. When we&nbsp;tab from the 1st column cell to the 2nd column cell the DoubleInput control gets the focus as expected. However when we tab backwards (shift+tab) from the 3rd column to the 2nd column the focus is not set inside the doubleInput control. Tabbing back and forth from WPF Textbox to WPF Textbox, for example works fine.<br>\r\n<br>\r\nMaybe its something we have not handled properly but when we put this problem to DevComponents their response was.<br>\r\n<br>\r\n&quot;Thank you very much for taking the time to contact us. I suggest reporting this issue to Microsoft since they are the only ones that can fix it really. The DoubleInput is really plain WPF control..&quot;<br>\r\n<br>\r\nIt would be nice to have&nbsp;better solution here from the DataGrid team if possible. Or at least some better guideance on how to make this more robust. What would be really nice is for the DataTemplateColumn to have a property that takes the reference to a control inside the DataGridCell.Content that specifies which control will get fcous when the DataGridCell gets focus/ is selected. Or something of that nature.<br>\r\n<br>\r\n<br>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#808080\">///</span><span style=\"font-size:13px;color:#008000\"> </span><span style=\"font-size:13px;color:#808080\">&lt;summary&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#808080\">///</span><span style=\"font-size:13px;color:#008000\"> Used to handle the tabbing action between DataGrid cells\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#808080\">///</span><span style=\"font-size:13px;color:#008000\"> </span><span style=\"font-size:13px;color:#808080\">&lt;/summary&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#808080\">///</span><span style=\"font-size:13px;color:#008000\"> </span><span style=\"font-size:13px;color:#808080\">&lt;param name=&quot;sender&quot;&gt;&lt;/param&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#808080\">///</span><span style=\"font-size:13px;color:#008000\"> </span><span style=\"font-size:13px;color:#808080\">&lt;param name=&quot;e&quot;&gt;&lt;/param&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">private</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">void</span><span style=\"font-size:13px\"> dgExposure_PreviewKeyDown(</span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> sender, </span><span style=\"font-size:13px;color:#2b91af\">KeyEventArgs</span><span style=\"font-size:13px\"> e)\r\n<p>&nbsp;</p>\r\n<p>{</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (!ComponentData.InputDeckObject.IsEditable) </span><span style=\"font-size:13px;color:#0000ff\">return</span><span style=\"font-size:13px\">;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (e.Key != </span><span style=\"font-size:13px;color:#2b91af\">Key</span><span style=\"font-size:13px\">.Tab) </span><span style=\"font-size:13px;color:#0000ff\">return</span><span style=\"font-size:13px\">;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">var</span><span style=\"font-size:13px\"> currow = dgExposure.Items.IndexOf(dgExposure.CurrentCell.Item);\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">var</span><span style=\"font-size:13px\"> curcol = dgExposure.CurrentCell.Column.DisplayIndex;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">var</span><span style=\"font-size:13px\"> cell = GetCell(currow, curcol);\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (cell == </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">) </span><span style=\"font-size:13px;color:#0000ff\">return</span><span style=\"font-size:13px\">;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (!cell.IsFocused) cell.Focus();\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (!cell.IsSelected) cell.IsSelected = </span><span style=\"font-size:13px;color:#0000ff\">true</span><span style=\"font-size:13px\">;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (!cell.IsEditing) cell.IsEditing = </span><span style=\"font-size:13px;color:#0000ff\">true</span><span style=\"font-size:13px\">;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\">(</span><span style=\"font-size:13px;color:#2b91af\">Keyboard</span><span style=\"font-size:13px\">.Modifiers == </span><span style=\"font-size:13px;color:#2b91af\">ModifierKeys</span><span style=\"font-size:13px\">.Shift)\r\n<p>&nbsp;</p>\r\n<p>{</p>\r\n<p>SetNextEditCell(cell, </p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#2b91af\">FocusNavigationDirection</span><span style=\"font-size:13px\">.Left);\r\n<p>&nbsp;</p>\r\n<p>}</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">else\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>{</p>\r\n<p>SetNextEditCell(cell, </p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#2b91af\">FocusNavigationDirection</span><span style=\"font-size:13px\">.Right);\r\n<p>&nbsp;</p>\r\n<p>}</p>\r\n<p>}</p>\r\n</span></p>\r\n<br>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">private</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">void</span><span style=\"font-size:13px\"> SetNextEditCell(</span><span style=\"font-size:13px;color:#2b91af\">DataGridCell</span><span style=\"font-size:13px\"> cell, </span><span style=\"font-size:13px;color:#2b91af\">FocusNavigationDirection</span><span style=\"font-size:13px\"> focusNavigationDirection)\r\n<p>&nbsp;</p>\r\n<p>{</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">var</span><span style=\"font-size:13px\"> nextFocusedCell = cell.PredictFocus(focusNavigationDirection) </span><span style=\"font-size:13px;color:#0000ff\">as</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">DataGridCell</span><span style=\"font-size:13px\">;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (nextFocusedCell == </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">) </span><span style=\"font-size:13px;color:#0000ff\">return</span><span style=\"font-size:13px\">;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#008000\">/*\r\n<p>&nbsp;</p>\r\n<p>BUG There seems to exist a problem in the interaction between the DevComponents DoubleInput Control</p>\r\n<p>and the MS DataGrid Cell Content control. Further examination is needed. For now Shift+Tab from</p>\r\n<p>Calculation Type back to the Exposure control does not set focus in the DoubleInput control. This is a known bug.</p>\r\n<p>The reason it works when the Tab key it hit is that the focus is never put on the Cell with the DoubleInput Control in that case.</p>\r\n<p>*/</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">var</span><span style=\"font-size:13px\"> nextFocusedControl = nextFocusedCell.Content </span><span style=\"font-size:13px;color:#0000ff\">as</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">Control</span><span style=\"font-size:13px\">;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (nextFocusedControl == </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">) </span><span style=\"font-size:13px;color:#0000ff\">return</span><span style=\"font-size:13px\">;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (nextFocusedControl.IsEnabled) </span><span style=\"font-size:13px;color:#008000\">//Check to see if the control inside the DataGridCell is enabled. If so we set focus. If not we go to next DataGridCell\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>{</p>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (focusNavigationDirection == </span><span style=\"font-size:13px;color:#2b91af\">FocusNavigationDirection</span><span style=\"font-size:13px\">.Right)\r\n<p>&nbsp;</p>\r\n<p>{</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#008000\">//Gets you to next in tab order\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>cell.MoveFocus(</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">TraversalRequest</span><span style=\"font-size:13px\">(</span><span style=\"font-size:13px;color:#2b91af\">FocusNavigationDirection</span><span style=\"font-size:13px\">.Next));\r\n<p>&nbsp;</p>\r\n<p>}</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">else</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (focusNavigationDirection == </span><span style=\"font-size:13px;color:#2b91af\">FocusNavigationDirection</span><span style=\"font-size:13px\">.Left)\r\n<p>&nbsp;</p>\r\n<p>{</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#008000\">//Gets you to previous cell\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>cell.MoveFocus(</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">TraversalRequest</span><span style=\"font-size:13px\">(</span><span style=\"font-size:13px;color:#2b91af\">FocusNavigationDirection</span><span style=\"font-size:13px\">.Previous));\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#008000\">//Gets you to next in tab order which should be the control\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>nextFocusedControl.MoveFocus(</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">TraversalRequest</span><span style=\"font-size:13px\">(</span><span style=\"font-size:13px;color:#2b91af\">FocusNavigationDirection</span><span style=\"font-size:13px\">.Next));\r\n<p>&nbsp;</p>\r\n<p>}</p>\r\n<p>}</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">else</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#008000\">//Control Inside DataGridCell was not enabled so we move to the next cell\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>{</p>\r\n<p>SetNextEditCell(nextFocusedCell, focusNavigationDirection);</p>\r\n<p>}</p>\r\n<p>}</p>\r\n</span><br>\r\n<br>\r\n",
    "PostedDate": "2008-09-16T04:50:35.07-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "119256",
    "ThreadId": "35540",
    "Html": "I've been talking it over with a colleague and&nbsp;here is a solution that we thought about.&nbsp; I haven't actually tested it out yet but from looking at the code I think it should work.&nbsp; Marco Zhou has this custom implementation on how to set focus to a particular UIElement in a DataTemplate of a ListViewItem,&nbsp;<a href=\"http://social.msdn.microsoft.com/forums/en-US/wpf/thread/98d8423c-9719-4291-94e2-c5bf3d80cd46/\">http://social.msdn.microsoft.com/forums/en-US/wpf/thread/98d8423c-9719-4291-94e2-c5bf3d80cd46/</a>.&nbsp; You can do something similar except listen to the DataGrid.CurrentCellChanged event.&nbsp; In that event you can get access to the Cell's Content and set the focus on whatever particular derived UIElement you want in the Cell's Content.&nbsp; By taking this route, you don't have to worry about all the housekeeping that you are doing in the PreviewKeyDown event.&nbsp; Let me know if this helps.\r\n",
    "PostedDate": "2008-09-17T16:35:06.817-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "120147",
    "ThreadId": "35540",
    "Html": "We actually tried this before deciding on the implementation above. The problems are as follows (see code at end):<br>\r\n<br>\r\n1) This code runs anytime the windows gets focus ( i guess due to virtualization ore repainting). At any rate it makes it hard to debug.<br>\r\n2) The UIElement never receives focus. The cell gets the focus and does not seem to honor the code below that specifies going into the cell's content.<br>\r\n<br>\r\n<br>\r\nCode:<br>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">private</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">void</span><span style=\"font-size:13px\"> dgExposure_CurrentCellChanged(</span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> sender, </span><span style=\"font-size:13px;color:#2b91af\">EventArgs</span><span style=\"font-size:13px\"> e)\r\n<p>&nbsp;</p>\r\n<p>{</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#2b91af\">DataGridCell</span><span style=\"font-size:13px\"> dgc = sender </span><span style=\"font-size:13px;color:#0000ff\">as</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">DataGridCell</span><span style=\"font-size:13px\">;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (dgc == </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">) </span><span style=\"font-size:13px;color:#0000ff\">return</span><span style=\"font-size:13px\">;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#2b91af\">UIElement</span><span style=\"font-size:13px\"> uiElem = dgc.Content </span><span style=\"font-size:13px;color:#0000ff\">as</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">UIElement</span><span style=\"font-size:13px\">;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (uiElem == </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">) </span><span style=\"font-size:13px;color:#0000ff\">return</span><span style=\"font-size:13px\">;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (uiElem.IsEnabled) uiElem.Focus();\r\n<p>&nbsp;</p>\r\n<p>}</p>\r\n</span></p>\r\n",
    "PostedDate": "2008-09-22T12:45:35.797-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "120212",
    "ThreadId": "35540",
    "Html": "I just tried something along these lines and it seemed to work fine for me:<br>\r\n<br>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>void</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px\"> DataGrid_Standard_CurrentCellChanged(</span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">object</span></span><span style=\"font-size:13px\"> sender, </span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">EventArgs</span></span><span style=\"font-size:13px\"> e)<br>\r\n{<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">&nbsp;&nbsp;&nbsp;&nbsp;DataGrid</span></span><span style=\"font-size:13px\"> dg = sender </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">as</span></span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">DataGrid</span></span><span style=\"font-size:13px\">;<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&nbsp;&nbsp;&nbsp;&nbsp;if</span></span><span style=\"font-size:13px\"> (dg.CurrentColumn </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">is</span></span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">DataGridTemplateColumn</span></span><span style=\"font-size:13px\">)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;{<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DataGridCell</span></span><span style=\"font-size:13px\"> cell = GetCell(dg.Items.IndexOf(dg.CurrentCell.Item), dg.Columns.IndexOf(dg.CurrentCell.Column));<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Panel</span></span><span style=\"font-size:13px\"> panel = cell.Content </span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">as</span></span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">Panel</span></span><span style=\"font-size:13px\">;<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TextBox</span></span><span style=\"font-size:13px\"> tb = GetVisualChild&lt;</span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">TextBox</span></span><span style=\"font-size:13px\">&gt;(panel);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tb.Focus();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;}<br>\r\n}<br>\r\n<br>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>&nbsp;</p>\r\n<p>&lt;</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">dg</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">:</span></span><span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">DataGridTemplateColumn.CellTemplate</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&gt;<br>\r\n</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span></span><span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">DataTemplate</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&gt;<br>\r\n</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span></span><span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">StackPanel</span></span><span style=\"font-size:13px;color:#ff0000\"><span style=\"font-size:13px;color:#ff0000\"> Orientation</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">=&quot;Horizontal&quot;&gt;<br>\r\n</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span></span><span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">Image</span></span><span style=\"font-size:13px;color:#ff0000\"><span style=\"font-size:13px;color:#ff0000\"> Focusable</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">=&quot;True&quot;</span></span><span style=\"font-size:13px;color:#ff0000\"><span style=\"font-size:13px;color:#ff0000\"> Source</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span></span><span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">Binding</span></span><span style=\"font-size:13px;color:#ff0000\"><span style=\"font-size:13px;color:#ff0000\"> Path</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">=Picture}&quot; /&gt;<br>\r\n</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span></span><span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">CheckBox</span></span><span style=\"font-size:13px;color:#ff0000\"><span style=\"font-size:13px;color:#ff0000\"> Content</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">=&quot;Test&quot;/&gt;<br>\r\n</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span></span><span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">TextBox</span></span><span style=\"font-size:13px;color:#ff0000\"><span style=\"font-size:13px;color:#ff0000\"> Focusable</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">=&quot;True&quot;</span></span><span style=\"font-size:13px;color:#ff0000\"><span style=\"font-size:13px;color:#ff0000\"> Name</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">=&quot;tb_Picture&quot;</span></span><span style=\"font-size:13px;color:#ff0000\"><span style=\"font-size:13px;color:#ff0000\"> Text</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span></span><span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">Binding</span></span><span style=\"font-size:13px;color:#ff0000\"><span style=\"font-size:13px;color:#ff0000\"> Path</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">=Picture}&quot; /&gt;<br>\r\n</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span></span><span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">StackPanel</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&gt;<br>\r\n</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span></span><span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">DataTemplate</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&gt;<br>\r\n</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&lt;/</span></span><span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">dg</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">:</span></span><span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">DataGridTemplateColumn.CellTemplate</span></span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&gt;<br>\r\n<p>&nbsp;</p>\r\n</span></span></p>\r\n</span></p>\r\n",
    "PostedDate": "2008-09-22T16:35:15.44-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "120215",
    "ThreadId": "35540",
    "Html": "<div class=Section1>\r\n<p class=MsoNormal><span style=\"font-size:11pt;color:#1f497d;font-family:'Calibri','sans-serif'\">Thanks! </span></p>\r\n<p class=MsoNormal><span style=\"font-size:11pt;color:#1f497d;font-family:'Calibri','sans-serif'\"></span></p>\r\n<p class=MsoNormal><span style=\"font-size:11pt;color:#1f497d;font-family:'Calibri','sans-serif'\">I’ll give it a shot..</span></p>\r\n<div>\r\n<div style=\"border-right:medium none;padding-right:0in;border-top:#b5c4df 1pt solid;padding-left:0in;padding-bottom:0in;border-left:medium none;padding-top:3pt;border-bottom:medium none\">\r\n<p class=MsoNormal><b><span style=\"font-size:10pt;font-family:'Tahoma','sans-serif'\">From:</span></b><span style=\"font-size:10pt;font-family:'Tahoma','sans-serif'\"> vinsibal [mailto:notifications@codeplex.com] <br>\r\n<b>Sent:</b> Monday, September 22, 2008 7:35 PM<br>\r\n<b>To:</b> Charles Laymon<br>\r\n<b>Subject:</b> Re: Tabbing from cell to cell does not set focus on control [wpf:35540]</span></p>\r\n</div>\r\n</div>\r\n<p class=MsoNormal>&nbsp;</p>\r\n<p><span style=\"font-size:9pt;font-family:'Verdana','sans-serif'\">From: vinsibal</span></p>\r\n<div id=ThreadNotificationPostBody style=\"margin-bottom:24pt\">\r\n<p class=MsoNormal style=\"margin-bottom:12pt\"><span style=\"font-size:9pt;font-family:'Verdana','sans-serif'\">I just tried something along these lines and it seemed to work fine for me:</span><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\"></span></p>\r\n<p><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\">void</span></p>\r\n<p><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\"></span></p>\r\n<p style=\"margin-bottom:12pt\"><span style=\"font-size:10pt;font-family:'Verdana','sans-serif'\">DataGrid_Standard_CurrentCellChanged(<span style=\"color:#0000ff\">object</span> sender, <span style=\"color:#2b91af\">EventArgs</span> e)<br>\r\n{<br>\r\n<span style=\"color:#2b91af\">DataGrid</span> dg = sender <span style=\"color:#0000ff\">as</span> <span style=\"color:#2b91af\">DataGrid</span>;<br>\r\n<span style=\"color:#0000ff\">if</span> (dg.CurrentColumn <span style=\"color:#0000ff\">is</span> <span style=\"color:#2b91af\">DataGridTemplateColumn</span>)<br>\r\n{<br>\r\n<span style=\"color:#2b91af\">DataGridCell</span> cell = GetCell(dg.Items.IndexOf(dg.CurrentCell.Item), dg.Columns.IndexOf(dg.CurrentCell.Column));<br>\r\n<span style=\"color:#2b91af\">Panel</span> panel = cell.Content <span style=\"color:#0000ff\">as</span> <span style=\"color:#2b91af\">Panel</span>;<br>\r\n<span style=\"color:#2b91af\">TextBox</span> tb = GetVisualChild&lt;<span style=\"color:#2b91af\">TextBox</span>&gt;(panel);<br>\r\ntb.Focus();<br>\r\n}<br>\r\n}<span style=\"color:#0000ff\"></span></span></p>\r\n<p><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\"></span></p>\r\n<p><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\"></span></p>\r\n<p><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\"></span></p>\r\n<p><span style=\"font-size:10pt;color:#a31515;font-family:'Verdana','sans-serif'\">dg</span><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\">:</span><span style=\"font-size:10pt;color:#a31515;font-family:'Verdana','sans-serif'\">DataGridTemplateColumn.CellTemplate</span><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\">&gt;<br>\r\n&lt;</span><span style=\"font-size:10pt;color:#a31515;font-family:'Verdana','sans-serif'\">DataTemplate</span><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\">&gt;<br>\r\n&lt;</span><span style=\"font-size:10pt;color:#a31515;font-family:'Verdana','sans-serif'\">StackPanel</span><span style=\"font-size:10pt;color:#ff0000;font-family:'Verdana','sans-serif'\"> Orientation</span><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\">=&quot;Horizontal&quot;&gt;<br>\r\n&lt;</span><span style=\"font-size:10pt;color:#a31515;font-family:'Verdana','sans-serif'\">Image</span><span style=\"font-size:10pt;color:#ff0000;font-family:'Verdana','sans-serif'\"> Focusable</span><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\">=&quot;True&quot;</span><span style=\"font-size:10pt;color:#ff0000;font-family:'Verdana','sans-serif'\"> Source</span><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\">=&quot;{</span><span style=\"font-size:10pt;color:#a31515;font-family:'Verdana','sans-serif'\">Binding</span><span style=\"font-size:10pt;color:#ff0000;font-family:'Verdana','sans-serif'\"> Path</span><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\">=Picture}&quot; /&gt;<br>\r\n&lt;</span><span style=\"font-size:10pt;color:#a31515;font-family:'Verdana','sans-serif'\">CheckBox</span><span style=\"font-size:10pt;color:#ff0000;font-family:'Verdana','sans-serif'\"> Content</span><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\">=&quot;Test&quot;/&gt;<br>\r\n&lt;</span><span style=\"font-size:10pt;color:#a31515;font-family:'Verdana','sans-serif'\">TextBox</span><span style=\"font-size:10pt;color:#ff0000;font-family:'Verdana','sans-serif'\"> Focusable</span><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\">=&quot;True&quot;</span><span style=\"font-size:10pt;color:#ff0000;font-family:'Verdana','sans-serif'\"> Name</span><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\">=&quot;tb_Picture&quot;</span><span style=\"font-size:10pt;color:#ff0000;font-family:'Verdana','sans-serif'\"> Text</span><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\">=&quot;{</span><span style=\"font-size:10pt;color:#a31515;font-family:'Verdana','sans-serif'\">Binding</span><span style=\"font-size:10pt;color:#ff0000;font-family:'Verdana','sans-serif'\"> Path</span><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\">=Picture}&quot; /&gt;<br>\r\n&lt;/</span><span style=\"font-size:10pt;color:#a31515;font-family:'Verdana','sans-serif'\">StackPanel</span><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\">&gt;<br>\r\n&lt;/</span><span style=\"font-size:10pt;color:#a31515;font-family:'Verdana','sans-serif'\">DataTemplate</span><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\">&gt;<br>\r\n&lt;/</span><span style=\"font-size:10pt;color:#a31515;font-family:'Verdana','sans-serif'\">dg</span><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\">:</span><span style=\"font-size:10pt;color:#a31515;font-family:'Verdana','sans-serif'\">DataGridTemplateColumn.CellTemplate</span><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\">&gt;</span></p>\r\n<p><span style=\"font-size:10pt;color:#0000ff;font-family:'Verdana','sans-serif'\"></span></p>\r\n</div>\r\n<div id=ThreadNotificationFooter style=\"border-right:medium none;padding-right:0in;border-top:#cccccc 1pt solid;padding-left:0in;padding-bottom:0in;border-left:medium none;padding-top:0in;border-bottom:medium none\">\r\n<p><span style=\"font-size:9pt;color:#808080;font-family:'Verdana','sans-serif'\">Read the <a href=\"http://www.codeplex.com/wpf/Thread/View.aspx?ThreadId=35540&ANCHOR#Post120212\">full discussion online</a>.</span></p>\r\n<p><span style=\"font-size:9pt;color:#808080;font-family:'Verdana','sans-serif'\">To add a post to this discussion, reply to this email (<a href=\"mailto:wpf@discussions.codeplex.com?subject=[wpf:35540]\">wpf@discussions.codeplex.com</a>)</span></p>\r\n<p><span style=\"font-size:9pt;color:#808080;font-family:'Verdana','sans-serif'\">To start a new discussion for this project, email <a href=\"mailto:wpf@discussions.codeplex.com\">wpf@discussions.codeplex.com</a></span></p>\r\n<p><span style=\"font-size:9pt;color:#808080;font-family:'Verdana','sans-serif'\">You are receiving this email because you subscribed to this discussion on CodePlex. You can <a href=\"http://www.codeplex.com/site/discussions/thread/unsubscribe/35540\">unsubscribe</a> on codePlex.com.</span></p>\r\n<p><span style=\"font-size:9pt;color:#808080;font-family:'Verdana','sans-serif'\">Please note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at codeplex.com</span></p>\r\n</div>\r\n</div>\r\n",
    "PostedDate": "2008-09-22T16:40:03.153-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "120337",
    "ThreadId": "35540",
    "Html": "<p>Ok,&nbsp;the following code seems&nbsp;to work ok&nbsp;while tabbing forward in the grid. It still has issues becuase it depends on where the focus starts. For example if the focus starts on the DataGridCell the TAB key simply sets focus on the next element in the focus chain, which in this case is the control inside the current DataGridCell. The next tab should place the focus on the next DataGridCell and thus kick off the code below. However it is not consistent.&nbsp;Also, it does not seem to handle going backwards (SHIFT + TAB). What happens in&nbsp;SHIFT + TAB is that focus leaves the control inside the DataGridCell and sets focus on the current DataGridCell. So you need a way to jump back to the next cell to get the code below to fire. At least this is the behavior I seem to be getting. The original way we mentioned is not really perfect but it does seem to handle TAB and SHIFT+TAB. Any suggestions?<br>\r\n<br>\r\nIn a future release of the Grid can you make this whole process more intuitive? It seems that what we need&nbsp;is a way to navigate from DataGridCell to DataGridCell, <span style=\"text-decoration:underline\">not</span> using the MoveFocus method. Also, it would be nice to be able to have a property that we can designate which control gets focus when the DataGridCell is selected, no matter how it is selected... Hope this makes some sense.<br>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">private</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">void</span><span style=\"font-size:13px\"> dgExposure_CurrentCellChanged(</span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> sender, </span><span style=\"font-size:13px;color:#2b91af\">EventArgs</span><span style=\"font-size:13px\"> e)\r\n<p>&nbsp;</p>\r\n<p>{</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">var</span><span style=\"font-size:13px\"> dg = sender </span><span style=\"font-size:13px;color:#0000ff\">as</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">DataGrid</span><span style=\"font-size:13px\">;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (dg == </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">) </span><span style=\"font-size:13px;color:#0000ff\">return</span><span style=\"font-size:13px\">;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (!(dg.CurrentColumn </span><span style=\"font-size:13px;color:#0000ff\">is</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">DataGridTemplateColumn</span><span style=\"font-size:13px\">)) </span><span style=\"font-size:13px;color:#0000ff\">return</span><span style=\"font-size:13px\">;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">var</span><span style=\"font-size:13px\"> cell = GetCell(dg.Items.IndexOf(dg.CurrentCell.Item), dg.Columns.IndexOf(dg.CurrentCell.Column));\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">var</span><span style=\"font-size:13px\"> control = cell.Content </span><span style=\"font-size:13px;color:#0000ff\">as</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">Control</span><span style=\"font-size:13px\">;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (control == </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">) </span><span style=\"font-size:13px;color:#0000ff\">return</span><span style=\"font-size:13px\">;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\">(control.IsEnabled &amp;&amp; control.IsTabStop)\r\n<p>&nbsp;</p>\r\n<p>{</p>\r\n<p>control.Focus();</p>\r\n<p>}</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">else\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n<p>{</p>\r\n<p>cell.MoveFocus(</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">TraversalRequest</span><span style=\"font-size:13px\">(</span><span style=\"font-size:13px;color:#2b91af\">FocusNavigationDirection</span><span style=\"font-size:13px\">.Next));\r\n<p>&nbsp;</p>\r\n<p>}</p>\r\n<p>}</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span></p>\r\n",
    "PostedDate": "2008-09-23T04:29:03.28-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "120384",
    "ThreadId": "35540",
    "Html": "Hello MrCharles, Vinsibal,<br>\r\n<br>\r\nI'm having a similar focus problem.&nbsp; In my case I have an overridden textbox, and my problem seems to be that the keyboard does not loose its focus when tabbing to the next cell, nor when exiting the cell editing template.<br>\r\n<br>\r\nHowever, currently I am&nbsp;just trying to follow this article I'm embarrassed to say I can't find the GetCell method.&nbsp; Would you kindly point out where I can find that method?&nbsp; Its rather core to obtaining the visual&nbsp;content.<br>\r\n<br>\r\nBest regards, Adam.\r\n",
    "PostedDate": "2008-09-23T07:58:20.087-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "120724",
    "ThreadId": "35540",
    "Html": "This thread has an example implementation of GetCell,&nbsp;<a href=\"http://www.codeplex.com/wpf/Thread/View.aspx?ThreadId=34065\">http://www.codeplex.com/wpf/Thread/View.aspx?ThreadId=34065</a>.\r\n",
    "PostedDate": "2008-09-24T11:47:22.13-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "121167",
    "ThreadId": "35540",
    "Html": "MrCharles,<br>\r\n<br>\r\nInstead of using the CurrentCellChanged to set focus on a particular element&nbsp;(as I previously proposed),&nbsp;you can use the KeyboardNavigation APIs for each cell.&nbsp; The reason that&nbsp;this will work is b/c DataGrid sets the tab scope to each cell.&nbsp; So you can do something along these lines and tab will move to the inner element then to the next cell:<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;dg:DataGridTemplateColumn.CellTemplate&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;DataTemplate&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Image KeyboardNavigation.IsTabStop=&quot;False&quot; Source=&quot;{Binding Path=Picture}&quot; /&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;CheckBox KeyboardNavigation.IsTabStop=&quot;False&quot; Content=&quot;Test&quot;/&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TextBox TabIndex=&quot;1&quot; Name=&quot;tb_Picture&quot; Text=&quot;{Binding Path=Picture}&quot; /&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;CheckBox KeyboardNavigation.IsTabStop=&quot;False&quot; Content=&quot;Test&quot;/&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/StackPanel&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/DataTemplate&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/dg:DataGridTemplateColumn.CellTemplate&gt;<br>\r\n<br>\r\nCompared to your proposed solution where you only tab once more, here you can set the tab index to any element within the cell as well as change the ordering if you want.&nbsp; This also solves the problem of where focus starts.&nbsp; If you set focus to this particular cell, another tab will take you to the next cell instead of the next element in the cell.&nbsp; <br>\r\n<br>\r\nWhat this doesn't solve is the Shift + Tab problem.&nbsp; If you try it out it still takes two Shift + Tabs to move from the cell to the previous cell.&nbsp; For this case you will have to do something similar to your proposed solution.<br>\r\n<br>\r\nHope this helps.&nbsp; <br>\r\n<br>\r\n",
    "PostedDate": "2008-09-26T07:48:48.03-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "213753",
    "ThreadId": "35540",
    "Html": "<p>I have stumbled on this problem - have any of you created a more generic solution to this ? The double tab happend on columns I add with this code: (NumberTextBox is just a textbox that filters out non numeric characters and &quot;field&quot; is a class describing the column)</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataGridTemplateColumn col = new DataGridTemplateColumn();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; col.Header = field.Caption;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FrameworkElementFactory factory = new FrameworkElementFactory(typeof(NumberTextBox));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.Windows.Data.Binding b = new System.Windows.Data.Binding(field.Name);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.Converter = new DecimalConverter();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; factory.SetValue(NumberTextBox.TextProperty, b);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; factory.SetValue(NumberTextBox.TextAlignmentProperty, TextAlignment.Right);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; factory.SetValue(KeyboardNavigation.IsTabStopProperty, true);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; factory.SetValue(TextBox.TabIndexProperty, 1);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataTemplate cellEditingTemplate = new DataTemplate();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cellEditingTemplate.VisualTree = factory;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; col.CellEditingTemplate = cellEditingTemplate;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FrameworkElementFactory factory2 = new FrameworkElementFactory(typeof(TextBlock));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.Windows.Data.Binding b2 = new System.Windows.Data.Binding(field.Name);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b2.Converter = new DecimalConverter();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; factory2.SetValue(TextBlock.TextProperty, b2);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; factory2.SetValue(TextBlock.TextAlignmentProperty, TextAlignment.Right);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataTemplate cellTemplate = new DataTemplate();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cellTemplate.VisualTree = factory2;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; col.CellTemplate = cellTemplate;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; col.IsReadOnly = field.ReadOnly;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dg.Columns.Add(col);</p>\r\n<p>&nbsp;</p>\r\n<p>Any suggestions ?</p>\r\n<p>&nbsp;</p>\r\n<p>/Erik</p>",
    "PostedDate": "2009-07-20T04:28:14.157-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "226481",
    "ThreadId": "35540",
    "Html": "<p>Erik</p>\r\n<p>I found solution for myself, i hope you will find it useful.</p>\r\n<p><a href=\"http://blog.yalovoi.net/2009/08/21/wpf-datagrid-tabbing-from-cell-to-cell-does-not-set-focus-on-control/\">http://blog.yalovoi.net/2009/08/21/wpf-datagrid-tabbing-from-cell-to-cell-does-not-set-focus-on-control/</a></p>",
    "PostedDate": "2009-08-21T12:24:26.877-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]