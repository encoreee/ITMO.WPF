[
  {
    "Id": "205930",
    "ThreadId": "60783",
    "Html": "<p>Hi, I have been using the WPF toolkit components in my projects for quite some time now but recently downloaded the Visual Studio 2010 Beta 1 and .NET framework 4 which includes DataGrid, DatePicker and Calendar controls. The implementation of the components seems a little different to the toolkit but it seems hard to imagine that they are two totally separate development paths.</p>\r\n<p>I am unsure how I should proceed - there are advantages to using the toolkit, for example having access to the source code, but longer term will it be supported or dropped for the controls integrated in .NET framework 4? Will the two be merged and brough into line with each other (possibly for the release of .NET framework 4)?</p>\r\n<p>Does anybody have any clues or other arguments for which path to follow?</p>\r\n<p>Thanks</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-06-26T08:37:05.25-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "206009",
    "ThreadId": "60783",
    "Html": "<p>Hi ChangedDaily,</p>\r\n<p>This is a really good question - I probably should have posted something to answer it when we released .NET 4.0 Beta 1, but I didn't think of it until you asked. :-)</p>\r\n<p>Our recommendation is to move to .NET 4.0 and use the controls in there, if that is possible for your scenario.&nbsp; They are actually the same exact controls as you find in the Toolkit, and they should be 99% the compatible.&nbsp; However, the advantage to using the controls in 4.0 is that there are certain bug fixes (around things like validation or performance) which we are only able to fix in the framework version of the controls since they are dependent on other parts of WPF (such as data features) which we don't have the ability to change from the Toolkit.&nbsp; So the controls in the .NET 4.0 are actually a little further ahead than the&nbsp;versions&nbsp;you'll find&nbsp;in the Toolkit.</p>\r\n<p>In addition, once .NET 4.0 is officially released, we will begin to start supporting only the versions of the controls in the framework.&nbsp; Our strategy around the Toolkit was to create a vehicle which allowed us to get certain features out to the community sooner than what is possible if we only ship components&nbsp;on the&nbsp;.NET Framework ship cycle.&nbsp; For DataGrid, DatePicker, Calendar, and VSM, this meant that we were able to get to the controls out to developers (in beta form)&nbsp;a good 6 months before we would have if we shipped them first in 4.0 Beta 1.&nbsp; That being said, it is intended that many of the controls in the Toolkit are only there temporarily (until our next Framework release).&nbsp; So for DataGrid, DatePicker, Calendar, and VSM, the plan right now is that after we ship WPF v4, we will stop porting bug fixes back to the Toolkit versions of these controls and just focus on updating the controls in the platform.&nbsp; These controls will still be available in archived versions of the Toolkit which will work with .NET 3.5 SP1 so that any developers who can't move to 4.0 can still use the controls, but the &quot;official&quot; versions wil be the ones in the Framework.&nbsp; And there is a possibility that we will also ship&nbsp;V2 of these controls out of&nbsp;band through the Toolkit, similar to how we did it this time around, but we haven't gotten that far in our planning yet, so I can't make any promises here.&nbsp; However, not all Toolkit controls will be moved to the Framework - some features (for example, the Chart controls) will likely remain in the Toolkit and be officially supported as part of the Toolkit for the foreseeable future.</p>\r\n<p>At the moment, I believe the Toolkit controls are actually a little further ahead (in terms of having more bug&nbsp;fixes)&nbsp;than what you'll find in .NET 4.0 Beta 1.&nbsp; So if you want to use the latest bits, I would stick with the Toolkit for now.&nbsp; However, once .NET 4.0 Beta 2&nbsp;is officially released, those controls will be the latest and greatest.&nbsp; And of course, we want to hear your feedback on .NET 4.0, so we encourage you to try out the betas and send us your feedback through the Connect website.&nbsp;</p>\r\n<p>So the short answer is, move to 4.0 if that works for you.&nbsp; Otherwise, you can feel free to continue to use the Toolkit versions, but keep in mind that we won't be updating them at all after we release 4.0.</p>\r\n<p>Thanks!<br>Samantha</p>",
    "PostedDate": "2009-06-26T11:22:14.517-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "206370",
    "ThreadId": "60783",
    "Html": "<p>Thankyou Samantha for a quick and complete answer to my question.</p>\r\n<p>I personally will be trying to continue with VS2010 and .NET 4.0 since this path should give the most benefit longer term. However, it is good to know that there is little difference between the toolkit and .NET 4.0 implementations; I can still use the toolkit as a reference if I need to delve into the source code. Now that I've told you that I hope that I will still be welcome to post in this forum, it has been most useful! :-)&nbsp;&nbsp; I will send my feedback on VS2010 through the connect website or if anything of any relevance comes up regarding toolikit controls, here as well.</p>\r\n<p>ChangedDaily</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-06-28T12:42:27.753-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]