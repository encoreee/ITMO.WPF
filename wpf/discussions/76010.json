[
  {
    "Id": "259971",
    "ThreadId": "76010",
    "Html": "<p>Hello,</p>\r\n<p>I'm trying to make a UserControl to be used in the CellEditingTemplate. Its kinda like the DatePicker.</p>\r\n<p>I created the UserControl and added a popup with a textbox into it. The problem I run into is when I click on the textbox in the popup the cell loses focus and it thinks that I'm done editing the cell. If I add the popup into the CellEditingTemplate directly the textbox can receive focus with out a problem and I can type like normal.</p>\r\n<p>Does the UserControl do something funky with the focus that causes the DataGridCell to think it lost focus ?</p>\r\n<p>Heres my code</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>&lt;UserControl\r\n   x:Class=<span style=\"color:#A31515\">&quot;HR.Controls.UserPicker&quot;</span>\r\n   xmlns=<span style=\"color:#A31515\">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span>\r\n   xmlns:tk=<span style=\"color:#A31515\">&quot;http://schemas.microsoft.com/wpf/2008/toolkit&quot;</span>\r\n   xmlns:x=<span style=\"color:#A31515\">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span>&gt;\r\n\r\n    &lt;Grid&gt;\r\n        &lt;TextBlock x:Name=<span style=\"color:#A31515\">&quot;PART_TextBox&quot;</span> Text=<span style=\"color:#A31515\">&quot;Hello WOrld&quot;</span> /&gt;\r\n        &lt;Popup Width=<span style=\"color:#A31515\">&quot;234&quot;</span> Height=<span style=\"color:#A31515\">&quot;175&quot;</span> IsOpen=<span style=\"color:#A31515\">&quot;True&quot;</span> StaysOpen=<span style=\"color:#A31515\">&quot;True&quot;</span>\r\n         \r\n             Placement=<span style=\"color:#A31515\">&quot;Bottom&quot;</span>\r\n             PlacementTarget=<span style=\"color:#A31515\">&quot;{Binding ElementName=PART_TextBox}&quot;</span>\r\n         &gt;\r\n             &lt;TextBox\r\n                  x:Name=<span style=\"color:#A31515\">&quot;searchTextBox&quot;</span>\r\n                  Text=<span style=\"color:#A31515\">&quot;&amp;gt;Enter Name&amp;lt;&quot;</span>/&gt;\r\n        &lt;/Popup&gt;\r\n    &lt;/Grid&gt;\r\n&lt;/UserControl&gt;\r\n</pre>\r\n</div>\r\n</p>\r\n<p>Any tips would be greatly appreciated.</p>\r\n<p>Thanks,<br>Raul</p>",
    "PostedDate": "2009-11-23T13:23:05.877-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "262380",
    "ThreadId": "76010",
    "Html": "<p>Bump</p>",
    "PostedDate": "2009-12-01T10:10:57.877-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "286005",
    "ThreadId": "76010",
    "Html": "<p>I'm also experiencing this issue. Anyone have any update?</p>\r\n<p>Interestingly, the DatePicker included in the WPF Toolkit does not have this problem. It's a Control which has a ToggleButton which opens a Popup and appears to work perfectly fine inside the DataGrid. I've looked through the code to see if there's something obvious that it's doing but haven't found anything yet.</p>",
    "PostedDate": "2010-02-04T15:50:00.123-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "286315",
    "ThreadId": "76010",
    "Html": "<p>I was able to make a custom Control show a popup correctly from within the DataGrid. For example, the following UserControl does not allow clicking inside the Popup when displayed from a DataGrid Cell</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">UserControl</span> <span style=\"color:Red\">x:Class</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">DataGridTest.UserControl1</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">xmlns</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">Focusable</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">False</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">KeyboardNavigation.TabNavigation</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Once</span><span style=\"color:Black\">&quot;</span>\r\n    <span style=\"color:Red\">xmlns:x</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">http://schemas.microsoft.com/winfx/2006/xaml</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n  <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Grid</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Button</span> <span style=\"color:Red\">x:Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">_TheButton</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Content</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Name}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Focusable</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">False</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Click</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">_TheButton_Click</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Popup</span> <span style=\"color:Red\">x:Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">_Popup</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n      <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ListBox</span> <span style=\"color:Red\">x:Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">_ListBox</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">CheckBox</span> <span style=\"color:Red\">Content</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Test 1</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">CheckBox</span> <span style=\"color:Red\">Content</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Test 2</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">CheckBox</span> <span style=\"color:Red\">Content</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Test 3</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n      <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">ListBox</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Popup</span><span style=\"color:Blue\">&gt;</span>\r\n  <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Grid</span><span style=\"color:Blue\">&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">UserControl</span><span style=\"color:Blue\">&gt;</span>\r\n\r\n</pre>\r\n</div>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">using</span> System;\r\n<span style=\"color:Blue\">using</span> System.Windows;\r\n<span style=\"color:Blue\">using</span> System.Windows.Controls;\r\n\r\n<span style=\"color:Blue\">namespace</span> DataGridTest\r\n{\r\n  <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">partial</span> <span style=\"color:Blue\">class</span> UserControl1 : UserControl\r\n  {\r\n    <span style=\"color:Blue\">public</span> UserControl1()\r\n    {\r\n      InitializeComponent();\r\n    }\r\n    <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> _TheButton_Click(<span style=\"color:Blue\">object</span> sender, RoutedEventArgs e)\r\n    {\r\n      _Popup.IsOpen = <span style=\"color:Blue\">true</span>;\r\n    }\r\n  }\r\n}\r\n\r\n</pre>\r\n</div>\r\n<p>If I implement similar functionality in a custom Control, the Popup is displayed and I can click on the items inside of it, just as I would like. So the question is, what's the difference between a UserControl and a custom Control when used in this manner? Is there any way to make a UserControl act like the custom Control - it's a lot less overhead to create a UserControl for these purposes.</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">using</span> System;\r\n<span style=\"color:Blue\">using</span> System.Windows;\r\n<span style=\"color:Blue\">using</span> System.Windows.Controls;\r\n<span style=\"color:Blue\">using</span> System.Windows.Controls.Primitives;\r\n<span style=\"color:Blue\">using</span> System.Windows.Input;\r\n\r\n<span style=\"color:Blue\">namespace</span> DataGridTest\r\n{\r\n  [TemplatePart(Name = CustomControl1.ElementButton, Type = <span style=\"color:Blue\">typeof</span>(Button))]\r\n  [TemplatePart(Name = CustomControl1.ElementPopup, Type = <span style=\"color:Blue\">typeof</span>(Popup))]\r\n  <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">class</span> CustomControl1 : Control\r\n  {\r\n    <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">const</span> <span style=\"color:Blue\">string</span> ElementButton = <span style=\"color:#A31515\">&quot;PART_Button&quot;</span>;\r\n    <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">const</span> <span style=\"color:Blue\">string</span> ElementPopup = <span style=\"color:#A31515\">&quot;PART_Popup&quot;</span>;\r\n\r\n    <span style=\"color:Blue\">private</span> Popup _popUp;\r\n    <span style=\"color:Blue\">private</span> ButtonBase _dropDownButton;\r\n    <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">bool</span> _disablePopupReopen;\r\n    <span style=\"color:Blue\">static</span> CustomControl1()\r\n    {\r\n      DefaultStyleKeyProperty.OverrideMetadata(<span style=\"color:Blue\">typeof</span>(CustomControl1), <span style=\"color:Blue\">new</span> FrameworkPropertyMetadata(<span style=\"color:Blue\">typeof</span>(CustomControl1)));\r\n    }\r\n\r\n    <span style=\"color:Blue\">public</span> CustomControl1()\r\n    {\r\n    }\r\n    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">readonly</span> DependencyProperty IsDropDownOpenProperty =\r\n        DependencyProperty.Register(\r\n        <span style=\"color:#A31515\">&quot;IsDropDownOpen&quot;</span>,\r\n        <span style=\"color:Blue\">typeof</span>(<span style=\"color:Blue\">bool</span>),\r\n        <span style=\"color:Blue\">typeof</span>(CustomControl1),\r\n        <span style=\"color:Blue\">new</span> FrameworkPropertyMetadata(<span style=\"color:Blue\">false</span>, FrameworkPropertyMetadataOptions.BindsTwoWayByDefault, OnIsDropDownOpenChanged));\r\n\r\n    <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">void</span> OnIsDropDownOpenChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\r\n    {\r\n      CustomControl1 dp = d <span style=\"color:Blue\">as</span> CustomControl1;\r\n\r\n      <span style=\"color:Blue\">bool</span> newValue = (<span style=\"color:Blue\">bool</span>)e.NewValue;\r\n      <span style=\"color:Blue\">if</span> (dp._popUp != <span style=\"color:Blue\">null</span> &amp;&amp; dp._popUp.IsOpen != newValue)\r\n      {\r\n        dp._popUp.IsOpen = newValue;\r\n      }\r\n    }\r\n\r\n    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">bool</span> IsDropDownOpen\r\n    {\r\n      <span style=\"color:Blue\">get</span> { <span style=\"color:Blue\">return</span> (<span style=\"color:Blue\">bool</span>)GetValue(IsDropDownOpenProperty); }\r\n      <span style=\"color:Blue\">set</span> { SetValue(IsDropDownOpenProperty, value); }\r\n    }\r\n\r\n\r\n    <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> PopUp_Opened(<span style=\"color:Blue\">object</span> sender, EventArgs e)\r\n    {\r\n      <span style=\"color:Blue\">if</span> (!<span style=\"color:Blue\">this</span>.IsDropDownOpen) <span style=\"color:Blue\">this</span>.IsDropDownOpen = <span style=\"color:Blue\">true</span>;\r\n    }\r\n\r\n    <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> PopUp_Closed(<span style=\"color:Blue\">object</span> sender, EventArgs e)\r\n    {\r\n      <span style=\"color:Blue\">if</span> (<span style=\"color:Blue\">this</span>.IsDropDownOpen)\r\n      {\r\n        <span style=\"color:Blue\">this</span>.IsDropDownOpen = <span style=\"color:Blue\">false</span>;\r\n      }\r\n      <span style=\"color:Blue\">this</span>.MoveFocus(<span style=\"color:Blue\">new</span> TraversalRequest(FocusNavigationDirection.First));\r\n    }\r\n\r\n    <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> PopUp_PreviewMouseLeftButtonDown(<span style=\"color:Blue\">object</span> sender, MouseButtonEventArgs e)\r\n    {\r\n      Popup popup = sender <span style=\"color:Blue\">as</span> Popup;\r\n      <span style=\"color:Blue\">if</span> (popup != <span style=\"color:Blue\">null</span> &amp;&amp; !popup.StaysOpen)\r\n      {\r\n        <span style=\"color:Blue\">if</span> (<span style=\"color:Blue\">this</span>._dropDownButton != <span style=\"color:Blue\">null</span>)\r\n        {\r\n          <span style=\"color:Blue\">if</span> (<span style=\"color:Blue\">this</span>._dropDownButton.InputHitTest(e.GetPosition(<span style=\"color:Blue\">this</span>._dropDownButton)) != <span style=\"color:Blue\">null</span>)\r\n          {\r\n            <span style=\"color:Blue\">this</span>._disablePopupReopen = <span style=\"color:Blue\">true</span>;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> DropDownButton_Click(<span style=\"color:Blue\">object</span> sender, RoutedEventArgs e)\r\n    {\r\n      TogglePopUp();\r\n    }\r\n\r\n    <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> TogglePopUp()\r\n    {\r\n      <span style=\"color:Blue\">if</span> (<span style=\"color:Blue\">this</span>.IsDropDownOpen)\r\n      {\r\n        <span style=\"color:Blue\">this</span>.IsDropDownOpen = <span style=\"color:Blue\">false</span>;\r\n      }\r\n      <span style=\"color:Blue\">else</span>\r\n      {\r\n        <span style=\"color:Blue\">if</span> (<span style=\"color:Blue\">this</span>._disablePopupReopen)\r\n        {\r\n          <span style=\"color:Blue\">this</span>._disablePopupReopen = <span style=\"color:Blue\">false</span>;\r\n        }\r\n        <span style=\"color:Blue\">else</span>\r\n        {\r\n          <span style=\"color:Blue\">this</span>.IsDropDownOpen = <span style=\"color:Blue\">true</span>;\r\n        }\r\n      }\r\n    }\r\n\r\n    <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> DropDownButton_MouseLeave(<span style=\"color:Blue\">object</span> sender, MouseEventArgs e)\r\n    {\r\n      <span style=\"color:Blue\">this</span>._disablePopupReopen = <span style=\"color:Blue\">false</span>;\r\n    }\r\n\r\n\r\n    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">override</span> <span style=\"color:Blue\">void</span> OnApplyTemplate()\r\n    {\r\n      <span style=\"color:Blue\">if</span> (_popUp != <span style=\"color:Blue\">null</span>)\r\n      {\r\n        _popUp.RemoveHandler(PreviewMouseLeftButtonDownEvent, <span style=\"color:Blue\">new</span> MouseButtonEventHandler(PopUp_PreviewMouseLeftButtonDown));\r\n        _popUp.Opened -= PopUp_Opened;\r\n        _popUp.Closed -= PopUp_Closed;\r\n        _popUp.Child = <span style=\"color:Blue\">null</span>;\r\n      }\r\n\r\n      <span style=\"color:Blue\">if</span> (_dropDownButton != <span style=\"color:Blue\">null</span>)\r\n      {\r\n        _dropDownButton.Click -= DropDownButton_Click;\r\n        _dropDownButton.RemoveHandler(MouseLeaveEvent, <span style=\"color:Blue\">new</span> MouseEventHandler(DropDownButton_MouseLeave));\r\n      }\r\n      <span style=\"color:Blue\">base</span>.OnApplyTemplate();\r\n\r\n      _popUp = GetTemplateChild(ElementPopup) <span style=\"color:Blue\">as</span> Popup;\r\n\r\n      <span style=\"color:Blue\">if</span> (_popUp != <span style=\"color:Blue\">null</span>)\r\n      {\r\n        _popUp.AddHandler(PreviewMouseLeftButtonDownEvent, <span style=\"color:Blue\">new</span> MouseButtonEventHandler(PopUp_PreviewMouseLeftButtonDown));\r\n        _popUp.Opened += PopUp_Opened;\r\n        _popUp.Closed += PopUp_Closed;\r\n        ListBox list = <span style=\"color:Blue\">new</span> ListBox();\r\n        <span style=\"color:Blue\">for</span> (<span style=\"color:Blue\">int</span> ix = 0; ix &lt; 10; ix++)\r\n        {\r\n          list.Items.Add(<span style=\"color:Blue\">new</span> CheckBox() { Content = <span style=\"color:Blue\">string</span>.Format(<span style=\"color:#A31515\">&quot;test {0}&quot;</span>, ix + 1) });\r\n        }\r\n        _popUp.Child = list;\r\n\r\n        <span style=\"color:Blue\">if</span> (<span style=\"color:Blue\">this</span>.IsDropDownOpen)\r\n        {\r\n          <span style=\"color:Blue\">this</span>._popUp.IsOpen = <span style=\"color:Blue\">true</span>;\r\n        }\r\n      }\r\n\r\n      _dropDownButton = GetTemplateChild(ElementButton) <span style=\"color:Blue\">as</span> Button;\r\n      <span style=\"color:Blue\">if</span> (_dropDownButton != <span style=\"color:Blue\">null</span>)\r\n      {\r\n        _dropDownButton.Click += DropDownButton_Click;\r\n        _dropDownButton.AddHandler(MouseLeaveEvent, <span style=\"color:Blue\">new</span> MouseEventHandler(DropDownButton_MouseLeave), <span style=\"color:Blue\">true</span>);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n</pre>\r\n</div>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>  <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Style</span> <span style=\"color:Red\">TargetType</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{x:Type local:CustomControl1}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Setter</span> <span style=\"color:Red\">Property</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Template</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n      <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Setter.Value</span><span style=\"color:Blue\">&gt;</span>\r\n        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ControlTemplate</span> <span style=\"color:Red\">TargetType</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{x:Type local:CustomControl1}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n          <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Border</span> \r\n            <span style=\"color:Red\">Background</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{TemplateBinding Background}</span><span style=\"color:Black\">&quot;</span>\r\n            <span style=\"color:Red\">BorderBrush</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{TemplateBinding BorderBrush}</span><span style=\"color:Black\">&quot;</span>\r\n            <span style=\"color:Red\">BorderThickness</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{TemplateBinding BorderThickness}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n            <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Grid</span> <span style=\"color:Red\">x:Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">PART_Root</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">HorizontalAlignment</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Stretch</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n              <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Grid.ColumnDefinitions</span><span style=\"color:Blue\">&gt;</span>\r\n                <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ColumnDefinition</span> <span style=\"color:Red\">Width</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">*</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n                <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ColumnDefinition</span> <span style=\"color:Red\">Width</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Auto</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n              <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Grid.ColumnDefinitions</span><span style=\"color:Blue\">&gt;</span>\r\n              <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">TextBlock</span><span style=\"color:Blue\">&gt;</span>Click here<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">TextBlock</span><span style=\"color:Blue\">&gt;</span>\r\n              <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Button</span> \r\n                <span style=\"color:Red\">x:Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">PART_Button</span><span style=\"color:Black\">&quot;</span> \r\n                <span style=\"color:Red\">Grid.Column</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">1</span><span style=\"color:Black\">&quot;</span>\r\n                <span style=\"color:Red\">Width</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">20</span><span style=\"color:Black\">&quot;</span>\r\n                <span style=\"color:Red\">Margin</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">3,0,3,0</span><span style=\"color:Black\">&quot;</span> \r\n                <span style=\"color:Red\">Focusable</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">False</span><span style=\"color:Black\">&quot;</span> \r\n                <span style=\"color:Red\">VerticalAlignment</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Stretch</span><span style=\"color:Black\">&quot;</span>\r\n                <span style=\"color:Red\">HorizontalAlignment</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Left</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n              <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Popup</span> \r\n                <span style=\"color:Red\">x:Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">PART_Popup</span><span style=\"color:Black\">&quot;</span> \r\n               <span style=\"color:Red\">PlacementTarget</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding ElementName=PART_Button}</span><span style=\"color:Black\">&quot;</span>\r\n               <span style=\"color:Red\">Placement</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Bottom</span><span style=\"color:Black\">&quot;</span> \r\n               <span style=\"color:Red\">StaysOpen</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">False</span><span style=\"color:Black\">&quot;</span>\r\n               <span style=\"color:Red\">AllowsTransparency</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">True</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n            <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Grid</span><span style=\"color:Blue\">&gt;</span>\r\n          <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Border</span><span style=\"color:Blue\">&gt;</span>\r\n        <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">ControlTemplate</span><span style=\"color:Blue\">&gt;</span>\r\n      <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Setter.Value</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Setter</span><span style=\"color:Blue\">&gt;</span>\r\n  <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Style</span><span style=\"color:Blue\">&gt;</span>\r\n\r\n</pre>\r\n</div>",
    "PostedDate": "2010-02-05T09:13:34.643-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1078060",
    "ThreadId": "76010",
    "Html": "can someone out there, tell me a way to put a combobox inside a column of a listview or a datagrid, and not make the cell lose focus when clicking on the combobox? (apparently because of the combobox pop up it loses focus) and even without clicking on the combobox the cell loses focus if programmatically the selected value is being set.<br />\n<br />\n(for my purpose actually I want the focus to remain on the ROW and not just on the cell...  I have several columns with comboboxes so this is definitely a problem) .<br />\n",
    "PostedDate": "2013-08-07T21:33:42.307-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]