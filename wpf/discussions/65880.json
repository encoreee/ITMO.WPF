[
  {
    "Id": "224100",
    "ThreadId": "65880",
    "Html": "<p>I am giving the datagrid in the toolkit a try.&nbsp;&nbsp;If I auto generate the columns, I have success in viewing and editing the underlying observable collection.</p>\r\n<p>One of the columns of the collection is an enum and the&nbsp;resulting combobox that appears works perfectly.</p>\r\n<p>When I display the contents of the collection, I show all columns, and they are read-only.&nbsp; This works fine as well, of course.</p>\r\n<p>&nbsp;</p>\r\n<p>In an editing mode for the application, I need to select which columns are viewed in an editing window, and therefore, believe it is not possible for me to 'auto generate' the columns, but must code each in XAML.</p>\r\n<p>So I coded the several columns for the editing window in XAML, and the text fields are fine, but I am unable to determine how to <span style=\"text-decoration:underline\"><em>correctly bind the combobox pull down list to the enum.</em></span>&nbsp; I am fairly new to WPF as well, obviously.</p>\r\n<p>So, essentially, I'm asking:&nbsp; <em><span style=\"text-decoration:underline\">How does one code up a combobox to an enum in a default manner, like the autogenerate function would?</span></em></p>\r\n<p>Secondly, I have a 'description' attribute associated with each element of the enum, from system.componentmodel.&nbsp; How might I use the long description in the combobox?</p>\r\n<p><br>Thanks</p>",
    "PostedDate": "2009-08-16T17:20:30.467-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "224196",
    "ThreadId": "65880",
    "Html": "<p>You can use the AutoGeneratingColumn event to override any properties on the auto-generated columns, or (likely - I don't have first-hand experience with this) prevent them from being included in the columns collection at all.</p>",
    "PostedDate": "2009-08-17T02:31:08.68-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]