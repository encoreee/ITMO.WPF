[
  {
    "Id": "219635",
    "ThreadId": "64524",
    "Html": "<p>Hi,</p>\r\n<p>I am just trying to refresh a datagrid (10 columns) each 500ms. Each 500ms I add 20 items to the datagrid.</p>\r\n<p>Everything works fine when I start the project with a 300x300 window.</p>\r\n<p>However if I try to put the window to a full screen all the element of the datagrid become out of control. I cannot even close the window anymore!!</p>\r\n<p>I think the problem comes from the number of rows as if I put only three columns, everything works fine.</p>\r\n<p>Can anyone help me on this?</p>\r\n<p>What am I doing wrong?</p>\r\n<p>I managed to reproduce the problem, below is the very simple code.</p>\r\n<p>Thanks,</p>\r\n<p>Kamel</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&lt;Window x:Class=&quot;DGRefresh.Window1&quot;<br>&nbsp;&nbsp;&nbsp; xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;<br>&nbsp;&nbsp;&nbsp; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;<br>&nbsp;&nbsp;&nbsp; Title=&quot;Window1&quot; Height=&quot;300&quot; Width=&quot;300&quot; xmlns:my=&quot;http://schemas.microsoft.com/wpf/2008/toolkit&quot;&gt;<br>&nbsp;&nbsp;&nbsp; &lt;Grid&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;my:DataGrid AutoGenerateColumns=&quot;True&quot;&nbsp; Name=&quot;dataGrid1&quot;&nbsp; /&gt;<br>&nbsp;&nbsp;&nbsp; &lt;/Grid&gt;<br>&lt;/Window&gt;</p>\r\n<p>&nbsp;</p>\r\n<p>using System;<br>using System.Collections.Generic;<br>using System.Linq;<br>using System.Text;<br>using System.Windows;<br>using System.Windows.Controls;<br>using System.Windows.Data;<br>using System.Windows.Documents;<br>using System.Windows.Input;<br>using System.Windows.Media;<br>using System.Windows.Media.Imaging;<br>using System.Windows.Navigation;<br>using System.Windows.Shapes;<br>using System.Timers;<br><br>namespace DGRefresh<br>{<br>&nbsp;&nbsp;&nbsp; /// &lt;summary&gt;<br>&nbsp;&nbsp;&nbsp; /// Interaction logic for Window1.xaml<br>&nbsp;&nbsp;&nbsp; /// &lt;/summary&gt;<br>&nbsp;&nbsp;&nbsp; public partial class Window1 : Window<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private List&lt;Trade&gt; _ListOfTrade = new List&lt;Trade&gt;();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Window1()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InitializeComponent();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EditListOfTrade();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dataGrid1.ItemsSource = _ListOfTrade;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // We create a timer which will send an event each 500ms to refresh the dataGrid<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Timer aTimer = new Timer();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; aTimer.Elapsed += new ElapsedEventHandler(aTimer_Elapsed);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; aTimer.Interval = 500;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; aTimer.Enabled = true;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void aTimer_Elapsed(object sender, ElapsedEventArgs e)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dataGrid1.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority.Normal,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (System.Threading.ThreadStart)delegate()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EditListOfTrade();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dataGrid1.Items.Refresh();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void EditListOfTrade()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; 20; i++)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Trade trade = new Trade();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _ListOfTrade.Add(trade);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; }<br><br>&nbsp;&nbsp;&nbsp; class Trade<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private Random random = new Random();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public double Field1 { get { return random.NextDouble(); } }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public double Field2 { get { return random.NextDouble(); } }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public double Field3 { get { return random.NextDouble(); } }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public double Field4 { get { return random.NextDouble(); } }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public double Field5 { get { return random.NextDouble(); } }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public double Field6 { get { return random.NextDouble(); } }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public double Field7 { get { return random.NextDouble(); } }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public double Field8 { get { return random.NextDouble(); } }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public double Field9 { get { return random.NextDouble(); } }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public double Field10 { get { return random.NextDouble(); } }<br>&nbsp;&nbsp;&nbsp; }<br>}</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-08-05T02:49:57.517-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "219723",
    "ThreadId": "64524",
    "Html": "<p>What is the configuration of your computer? Your program works fine on my system (A dual core CPU running at 2.4G with 4G Ram; running on Windows 7). I suggest that you can use the task manager to check if you have sufficient resource to run this program.</p>",
    "PostedDate": "2009-08-05T06:28:43.983-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "220068",
    "ThreadId": "64524",
    "Html": "A dual core CPU running at 2.4G with 3G Ram running on vista. I have no problem with my resources.<br><br>Have you try to put the window on a full screen and wait for 5-10 seconds?<br><br>Thanks,<br>Kamel<br><br><div>\r\n2009/8/5 achau <span dir=ltr>&lt;<a href=\"mailto:notifications@codeplex.com\">notifications@codeplex.com</a>&gt;</span><br><blockquote style=\"margin:0pt 0pt 0pt 0.8ex;padding-left:1ex\">\r\n   <div> <p>From: achau</p> <div><p>What is the configuration of your computer? Your program works fine on my system (A dual core CPU running at 2.4G with 4G Ram; running on Windows 7). I suggest that you can use the task manager to check if you have sufficient resource to run this program.</p>\r\n</div><div> <div> <p>Read the <a href=\"http://wpf.codeplex.com/Thread/View.aspx?ThreadId=64524&ANCHOR#Post219723\">full discussion online</a>.</p> <p>To add a post to this discussion, reply to this email (<a href=\"mailto:wpf@discussions.codeplex.com?subject=[wpf:64524]\">wpf@discussions.codeplex.com</a>)</p>\r\n <p>To start a new discussion for this project, email <a href=\"mailto:wpf@discussions.codeplex.com\">wpf@discussions.codeplex.com</a></p> <p>You are receiving this email because you subscribed to this discussion on CodePlex. You can <a href=\"http://www.codeplex.com/site/discussions/thread/unsubscribe/64524\">unsubscribe</a> on codePlex.com.</p>\r\n <p>Please note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at <a href=\"http://codeplex.com\">codeplex.com</a></p> </div> </div></div> </blockquote>\r\n</div><br>",
    "PostedDate": "2009-08-05T16:55:24.593-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "220159",
    "ThreadId": "64524",
    "Html": "<p>Yes, I had run it at full screen for more than&nbsp;10 minutes without any problem. I ran it on a Fujitsu S6520 notebook with a screen of 1280x768 and a Intel graphic chip. I also ran the program on Quad core 3.2G desktop computer with a screen resolution of 1920x1080 and a Nvidia graphic card for 10 minutes.</p>\r\n<p>Do you have a second computer to test your program? The followings are the possible differences of our environment:</p>\r\n<p>1) I am using Windows 7 on both machines.</p>\r\n<p>2) I am using the June build of WPF toolkit.</p>\r\n<p>3) Besides the standard 3.5 SP1 .Net framework, I had installed KB958484 and silverlight toolkit&nbsp;to fix some issues of the Visual studio designer.</p>",
    "PostedDate": "2009-08-05T23:00:27.407-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "220179",
    "ThreadId": "64524",
    "Html": "<p>Hi,</p>\r\n<p>I just found a problem of your program on my desktop system. The response of the datagrid and the window is very bad under 1920x1080 full screen resolution. &nbsp;For example, it may take around 4 seconds for the DataGrid to response to any mouse click event. It seems that your program make the WPF system very busy and it is slow to response to the hit test event. Let's see whether there are good suggestion to fix this issue.</p>",
    "PostedDate": "2009-08-05T23:48:25.357-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]