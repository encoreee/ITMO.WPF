[
  {
    "Id": "253534",
    "ThreadId": "74122",
    "Html": "<p>I am using a MVVM pattern with the DataGrid.&nbsp; The first time the data grid is loaded the user cannot use key modifiers to modify the selection.&nbsp;</p>\r\n<p>In my ViewModel I set a SelectedItem property as the first or default item in my collection.&nbsp; This item is bound to the SelectedItem dependency property on the DataGrid control and is visibly selected.&nbsp; If, <em><strong>on the very first time the DataGrid is loaded</strong></em>, the user wants to extend the selection to include the first row,&nbsp;the default selected row,&nbsp;through the fifth row they hold the shift key down and click on the fifth row.&nbsp; This is default behavior for list selection.&nbsp; The result is not consistent with default list behavior.&nbsp; <strong>Instead of selecting all five rows the action only selects only the fifth row</strong>.&nbsp;</p>\r\n<p>By stepping through the code it looks like the _selectionAncor in the ShouldExtendSelection property's getter is null in this case, and only in this case.&nbsp;<strong> Is this by design? Is this an issue that is resolved in the .Net 4.0 version of the DataGrid?</strong></p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:Gray\">///</span><span style=\"color:Green\">&nbsp;&nbsp;&nbsp;&nbsp; SHIFT is down or performing a drag selection.</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:Gray\">///</span><span style=\"color:Green\">&nbsp;&nbsp;&nbsp;&nbsp; Multiple items can be selected.</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:Gray\">///</span><span style=\"color:Green\">&nbsp;&nbsp;&nbsp;&nbsp; There is a selection anchor.</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">bool</span> ShouldExtendSelection<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:Blue\">get</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:Blue\">return</span> CanSelectMultipleItems &amp;&amp; (_selectionAnchor != <span style=\"color:Blue\">null</span>) &amp;&amp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (_isDraggingSelection || ((Keyboard.Modifiers &amp; ModifierKeys.Shift) == ModifierKeys.Shift));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>We are working around the problem by not setting the SelectedItem property on our view model to the first or default item in our collection.&nbsp; This forces the user to select an item and avoids the undesired behavior we are currently seeing.</p>\r\n<p>Andy</p>",
    "PostedDate": "2009-11-04T16:47:38.05-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]