[
  {
    "Id": "165822",
    "ThreadId": "49552",
    "Html": "<p>I would like to remove a column from a datagrid on checkbox_unchecked event. Data gets binded to datagrid on checkbox_checked event. The way I do that is discussed in discussion under the following link:  <a href=\"http://wpf.codeplex.com/Thread/View.aspx?ThreadId=49067&ANCHOR#Post165072\">http://wpf.codeplex.com/Thread/View.aspx?ThreadId=49067&amp;ANCHOR#Post165072</a>.  <br>\r\n<br>\r\nJust in short:  I have a list of recipients. I would like to be able to assigne or remove different productcs to these recipients. So when a checkbox represnting certain product is checked a column is created in the datagrid. And when the check box is unchecked the adequate column should be removed.<br>\r\n<br>\r\nSince I use binding I thought I could simply remove the product form the recipeint's list of product and refresh the datagird's Items list. Here is my solution: </p>\r\n<p><span style=\"color:#0000ff;font-size:13px\">void</span><span style=\"font-size:13px\"> cb_Unchecked(</span><span style=\"color:#0000ff;font-size:13px\">object</span><span style=\"font-size:13px\"> sender, </span><span style=\"color:#2b91af;font-size:13px\">RoutedEventArgs</span><span style=\"font-size:13px\"> e)<br>\r\n{<br>\r\n</span><span style=\"color:#0000ff;font-size:13px\">    try<br>\r\n</span><span style=\"font-size:13px\">    {<br>\r\n</span><span style=\"color:#2b91af;font-size:13px\">        CheckBox</span><span style=\"font-size:13px\"> cb = sender </span><span style=\"color:#0000ff;font-size:13px\">as</span><span style=\"font-size:13px\"> </span><span style=\"color:#2b91af;font-size:13px\">CheckBox</span><span style=\"font-size:13px\">;<br>\r\n</span><span style=\"color:#2b91af;font-size:13px\">        dtProdukti</span><span style=\"font-size:13px\"> product = cb.Tag </span><span style=\"color:#0000ff;font-size:13px\">as</span><span style=\"font-size:13px\"> </span><span style=\"color:#2b91af;font-size:13px\">dtProdukti</span><span style=\"font-size:13px\">;<br>\r\n        </span><span style=\"color:#2b91af;font-size:13px\">OrderFinder</span><span style=\"font-size:13px\"> predicate1 = </span><span style=\"color:#0000ff;font-size:13px\">new</span><span style=\"font-size:13px\"> </span><span style=\"color:#2b91af;font-size:13px\">OrderFinder</span><span style=\"font-size:13px\">() { Product = product }; // I created A separate class to create a predicate I can pass a parameter<br>\r\n</span><span style=\"color:#0000ff;font-size:13px\"><br>\r\n       foreach</span><span style=\"font-size:13px\"> (</span><span style=\"color:#2b91af;font-size:13px\">Prejemnik</span><span style=\"font-size:13px\"> recipient1 </span><span style=\"color:#0000ff;font-size:13px\">in</span><span style=\"font-size:13px\"> lstRecipients)<br>\r\n        {<br>\r\n</span><span style=\"font-size:13px\">            recipient1.ListOrders..RemoveAll(predicate1.findOrderByProdukt); // finds and removve all orders in the list of orders for each indivual recipient<br>\r\n        } </span><span style=\"font-size:13px\"> <br>\r\n</span><span style=\"font-size:13px\">         dgvOrdersWPF.Items.Refresh();  // refresh the items contained in the list of datagrid to reflect the changes made to the datasource (lstRecipients)<br>\r\n    }<br>\r\n</span><span style=\"color:#0000ff;font-size:13px\">    catch</span><span style=\"font-size:13px\"> (</span><span style=\"color:#2b91af;font-size:13px\">Exception</span><span style=\"font-size:13px\">)<br>\r\n    {<br>\r\n</span><span style=\"color:#0000ff;font-size:13px\">        throw</span><span style=\"font-size:13px\">;<br>\r\n    }<br>\r\n}<br>\r\n<br>\r\n</span><br>\r\nThe values in individual cells are deleted, but the column stays displayed. Further more when I add another product to the list. A new column is added, but values inserted get inserted into both the added column and the empty one. What am I doing wrong? <br>\r\n<br>\r\nThank you for your help <br>\r\n<br>\r\nBest regards,<br>\r\nJurij<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<span style=\"color:#2b91af;font-size:13px\"> </span></p>\r\n",
    "PostedDate": "2009-03-08T10:29:27.78-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "166173",
    "ThreadId": "49552",
    "Html": "Hi Jurij,<br>\r\n<br>\r\nRemember that the Column collection is not bound to the product list. Instead Cell's content corresponding to the column is bound to the each item in the list. Hence column still exists. You would have to remove column yourself. Also you should update Binding property of other columns, if the index of product they are using changes because of removing this product.\r\n",
    "PostedDate": "2009-03-09T10:51:06.093-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "166214",
    "ThreadId": "49552",
    "Html": "Hello,<br>\r\n<br>\r\nthank you for the advice. Taking this perspective I managed to solve the problem somehow. Eventhough I think, that my solution is to complicated for such a simple task as removing a column from the datagrid.:) The followwing is my solution. Loking forward to any comments.:)<br>\r\n<br>\r\n<span style=\"color:#0000ff;font-size:13px\">void</span><span style=\"font-size:13px\"> cb_Unchecked(</span><span style=\"color:#0000ff;font-size:13px\">object</span><span style=\"font-size:13px\"> sender, </span><span style=\"color:#2b91af;font-size:13px\">RoutedEventArgs</span><span style=\"font-size:13px\"> e)<br>\r\n{<br>\r\n</span><span style=\"color:#0000ff;font-size:13px\">    try<br>\r\n</span><span style=\"font-size:13px\">    {<br>\r\n</span><span style=\"color:#2b91af;font-size:13px\">        CheckBox</span><span style=\"font-size:13px\"> cb = sender </span><span style=\"color:#0000ff;font-size:13px\">as</span><span style=\"font-size:13px\"> </span><span style=\"color:#2b91af;font-size:13px\">CheckBox</span><span style=\"font-size:13px\">;<br>\r\n</span><span style=\"color:#2b91af;font-size:13px\">        dtProdukti</span><span style=\"font-size:13px\"> product = cb.Tag </span><span style=\"color:#0000ff;font-size:13px\">as</span><span style=\"font-size:13px\"> </span><span style=\"color:#2b91af;font-size:13px\">dtProdukti</span><span style=\"font-size:13px\">;<br>\r\n        </span><span style=\"color:#2b91af;font-size:13px\">OrderFinder</span><span style=\"font-size:13px\"> predicate1 = </span><span style=\"color:#0000ff;font-size:13px\">new</span><span style=\"font-size:13px\"> </span><span style=\"color:#2b91af;font-size:13px\">OrderFinder</span><span style=\"font-size:13px\">() { Product = product }; // I created A separate class to create a predicate I can pass a parameter<br>\r\n</span><span style=\"color:#0000ff;font-size:13px\"><br>\r\n       foreach</span><span style=\"font-size:13px\"> (</span><span style=\"color:#2b91af;font-size:13px\">Prejemnik</span><span style=\"font-size:13px\"> recipient1 </span><span style=\"color:#0000ff;font-size:13px\">in</span><span style=\"font-size:13px\"> lstRecipients) //cleans the unchecked product form the list od products for each customer individually<br>\r\n        {<br>\r\n</span><span style=\"font-size:13px\">            recipient1.ListOrders..RemoveAll(predicate1.findOrderByProdukt); // finds and remove all orders in the list of orders for each indivual recipient<br>\r\n        } </span><span style=\"font-size:13px\"> <br>\r\n        <br>\r\n        <span style=\"color:#0000ff;font-size:13px\">while</span><span style=\"font-size:13px\"> (dgvNarocilaWPF.Columns.Count &gt; 3) //removes all the columns but the first three . The fisrt three columns contain properties that can not be unchecked.:)<br>\r\n        {<br>\r\n</span><span style=\"color:#0000ff;font-size:13px\">            int</span><span style=\"font-size:13px\"> i = dgvOrdersWPF.Columns.Count - 1;<br>\r\n            dgvOrdersWPF.Columns.RemoveAt(i);<br>\r\n        }<br>\r\n<span style=\"color:#0000ff;font-size:13px\">        <br>\r\n        foreach</span><span style=\"font-size:13px\"> (<span style=\"color:#2b91af;font-size:13px\">dtProdukti</span><span style=\"font-size:13px\"> </span></span><span style=\"font-size:13px\">product1 </span><span style=\"color:#0000ff;font-size:13px\">in</span><span style=\"font-size:13px\"> lstRecipients[0].ListOrders  //creates back the columns for different products that are still checked<br>\r\n        {                                                                                                        //takes the first reciepient in the list of recipients. Its list of products is then takend to create back the deleted columns that shouldn't have been deleted in the first placeat all<br>\r\n</span><span style=\"color:#0000ff;font-size:13px\">            int</span><span style=\"font-size:13px\"> i = lstRecipients[0].ListOrders.IndexOf(product1);<br>\r\n</span><span style=\"color:#2b91af;font-size:13px\">            Binding</span><span style=\"font-size:13px\"> myBinding = </span><span style=\"color:#0000ff;font-size:13px\">new</span><span style=\"font-size:13px\"> </span><span style=\"color:#2b91af;font-size:13px\">Binding</span><span style=\"font-size:13px\">(</span><span style=\"color:#a31515;font-size:13px\">&quot;ListOrders[&quot;</span><span style=\"font-size:13px\"> + i + </span><span style=\"color:#a31515;font-size:13px\">&quot;].Quantity&quot;</span><span style=\"font-size:13px\">);<br>\r\n            myBinding.Mode = </span><span style=\"color:#2b91af;font-size:13px\">BindingMode</span><span style=\"font-size:13px\">.TwoWay;<br>\r\n</span><span style=\"color:#2b91af;font-size:13px\">            DataGridTextColumn</span><span style=\"font-size:13px\"> clm = </span><span style=\"color:#0000ff;font-size:13px\">new</span><span style=\"font-size:13px\"> </span><span style=\"color:#2b91af;font-size:13px\">DataGridTextColumn</span><span style=\"font-size:13px\">();<br>\r\n            clm.Binding = myBinding;<br>\r\n            </span><span style=\"font-size:13px\">clm.Header = product1.Description<br>\r\n            dgvOrdersWPF.Columns.Add(clm);<br>\r\n        }</span></span><br>\r\n</span><span style=\"font-size:13px\">         dgvOrdersWPF.Items.Refresh();  // refresh the items contained in the list of datagrid to reflect the changes made to the datasource (lstRecipients)<br>\r\n    }<br>\r\n</span><span style=\"color:#0000ff;font-size:13px\">    catch</span><span style=\"font-size:13px\"> (</span><span style=\"color:#2b91af;font-size:13px\">Exception</span><span style=\"font-size:13px\">)<br>\r\n    {<br>\r\n</span><span style=\"color:#0000ff;font-size:13px\">        throw</span><span style=\"font-size:13px\">;<br>\r\n    }<br>\r\n}</span><br>\r\n<br>\r\n<br>\r\nBest regards,<br>\r\nJurij\r\n",
    "PostedDate": "2009-03-09T12:12:20.74-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "166309",
    "ThreadId": "49552",
    "Html": "I think it is not necessary to remove and add all the columns. Instead you can find the index of the product for which column is removed and change the Binding property of all the columns following the removed column. This way you would have almost zero overhead if the column removed was the last.\r\n",
    "PostedDate": "2009-03-09T17:19:23.683-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "166555",
    "ThreadId": "49552",
    "Html": "I have tried to delete just THE columns, but I found it very difficult to identify columns to link them back to products in code, since there is only column's header that descibes the column. What I used to do in nomal windows applications was that I named columns with some unique key - in this case it would have been products primary key form the database. That way I would be able to use any string for column's header and I would still know exactly which column belonged to each product. Even if two columns had the same header. However using this wpf datagrid I found it very difficult to link columns back to products. To be honest I can't even get the columns binding. So that I could update it. Now, when reading one of your previous post I realise this kind of trying is menaning less since the products for each individual customer are binded to each individual cell separately.  Even knowing this I can't find bindig relation for each individual cell.:)<br>\r\n<br>\r\nThat is why I decided for the solution where I din't have to know anything about columns binding. If everything worked fine the product objects in the orders list would get their values updated before the columns and their cells are deleted. This way no data is lost. I also maintain the display order of products that a user has establised by the products checking order.<br>\r\n <br>\r\nI have to say that I was surprised how difficult it was to delete those columns. So much code.<br>\r\n<br>\r\n",
    "PostedDate": "2009-03-10T11:45:17.88-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "166770",
    "ThreadId": "49552",
    "Html": "I don't know exactly where in the inheritance hierarchy it is introduced, but most (all?) UI elements have an (object) &quot;Tag&quot; property that can be used to store arbitrary data. Admittedly it is not type safe, but if you know that each DataGridColumn has an int value there, that might not be a big problem. Then you can simply run a foreach loop over the Columns collection until you find the appropriate one, remove it, and update the remaining ones.<br>\r\n",
    "PostedDate": "2009-03-11T00:37:18.07-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "166846",
    "ThreadId": "49552",
    "Html": "Hi!<br>\r\n<br>\r\nAs far as I know in wpf datagridcolumns do NOT have tag property. <br>\r\n<br>\r\nI am aware of this option and I find it veryuseful, usually.:) \r\n",
    "PostedDate": "2009-03-11T04:25:38.163-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "166861",
    "ThreadId": "49552",
    "Html": "Oops. My apologies - I should have checked beforehand. You are right.<br>\r\n",
    "PostedDate": "2009-03-11T05:12:31.263-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "166874",
    "ThreadId": "49552",
    "Html": "Hey, no problem. Any comments, suggestions are more than welcome.\r\n",
    "PostedDate": "2009-03-11T06:08:19.267-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "166968",
    "ThreadId": "49552",
    "Html": "You can create an attached property somewhere in your app and set it value for the columns you create to your key. And use the same attached property to identify your columns. It is as good as Tag :)\r\n",
    "PostedDate": "2009-03-11T10:16:30.963-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]