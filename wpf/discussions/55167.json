[
  {
    "Id": "186230",
    "ThreadId": "55167",
    "Html": "Hi,<div><br></div><div>     Does the March 2009 release of the WPF toolkit support treeview column type? What I want is the datagrid columns should be able to support hierarchical data. This is a feature which is already available for the Windows forms datagrid (DevExpress, Infragistics etc)</div><div><br></div><div>    If this is not supported in the March 2009 release do you have any plans to include support for such column types? Is it possible to extend the datagrid to support this in case the current release does not support it?</div><div><br></div><div>Thanks,</div><div>Ranjith</div>",
    "PostedDate": "2009-05-02T22:08:33.02-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "186324",
    "ThreadId": "55167",
    "Html": "Hi Ranjith,<br>\r\n<br>\r\nNo, the DataGrid does not currently support a TreeGrid format out of the box.  You should be able to implement this yourself, but it won't be easy to do.  Alternatively, you could nest multiple DataGrids in the RowDetails to create a hierarchical look, but you'll still probably want to retemplate the control to improve the look of it.  <br>\r\n<br>\r\nThis is a common feature request and one which we'd like to implement in the future, but that likely won't be for at least one or two more releases of the WPF framework.  <br>\r\n<br>\r\nThanks,<br>\r\nSamantha\r\n",
    "PostedDate": "2009-05-03T12:51:35.417-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "251076",
    "ThreadId": "55167",
    "Html": "<p>Isn't it a major control in any Financial application? We are using WinForms TreeViewControl (DevExpress) to show Financial Statements (account name, credit, debit, amount). We would like to update it to WPF, but not a single ui component provider has such control. They have only all-in-one-grids that has such useless things like cards and carusel views.</p>\r\n<p>Daniel</p>",
    "PostedDate": "2009-10-29T01:42:34.1-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "435442",
    "ThreadId": "55167",
    "Html": "<p>Hello,</p>\r\n<p>Exactly my question... But now a year later has anything changed?</p>\r\n<p>&nbsp;</p>\r\n<p>thanks</p>\r\n<p>John</p>",
    "PostedDate": "2010-04-26T04:18:46.08-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "481528",
    "ThreadId": "55167",
    "Html": "<p>Same in here</p>\r\n<p>Really want this compelling control in the BCL.</p>\r\n<p>&nbsp;</p>\r\n<p>Actually we can see this control in the VS IDE (it's editable):<br><img src=\"http://img231.imageshack.us/img231/2958/34617343.png\" alt=\"\"></p>",
    "PostedDate": "2010-08-17T11:47:02.83-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "481689",
    "ThreadId": "55167",
    "Html": "<p>I'd really love to see support for this in the DataGrid. - As long as it doesn't make the API too complicated. The datagrid already is pretty complex. Bu then again, the DataGrid is THE control where such a functionality would belong. It doesn't make much sense to introduce a new control or put it to the ListView.</p>",
    "PostedDate": "2010-08-17T22:37:15.757-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "481690",
    "ThreadId": "55167",
    "Html": "<p>deleted (I doubleclicked the Reply-Button, definitely a bug :) )</p>",
    "PostedDate": "2010-08-17T22:37:17.34-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "481738",
    "ThreadId": "55167",
    "Html": "<p>Hi Rajnith,</p>\r\n<p>Even we had this requirement and all we could do to is implement this by using Tree View List View and then apply Datagrid styles to it to make it look like a datagrid.</p>\r\n<p>U can find a good example here ... <a href=\"http://msdn.microsoft.com/en-us/library/ms771523.aspx\">http://msdn.microsoft.com/en-us/library/ms771523.aspx</a></p>\r\n<p>Cheers,</p>\r\n<p>Vinit</p>",
    "PostedDate": "2010-08-18T01:23:55.603-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]