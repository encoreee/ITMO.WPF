[
  {
    "Id": "132800",
    "ThreadId": "40004",
    "Html": "Ok, first off, I'm new to WPF, but I have search alot for an answer to this problem and can't seem to figure out what to do about this.<br>\r\n<br>\r\nHere the case.<br>\r\nI have a DataGrid where I bind the object <strong>TaskItem. </strong>This class is simple and have 3 properties:<br>\r\nclass TaskItem<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public TimeSpan From { get; set; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public TimeSpan To { get; set; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public string Note { get; set; }<br>\r\n&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\nI bind a list of these object to my DataGrid in the Loaded event:<br>\r\nprotected void SimpleWindow_Loaded(object sender, RoutedEventArgs e)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Test databind<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TaskDataGrid.ItemsSource = TaskGenerator.GetTaskItems();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\nThe XAML for my DataGrid looks lige this:<br>\r\n&lt;tk:DataGrid x:Name=&quot;TaskDataGrid&quot; <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Grid.Row=&quot;1&quot; <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CanUserAddRows=&quot;True&quot; <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CanUserDeleteRows=&quot;True&quot;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AutoGenerateColumns=&quot;False&quot;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SelectionUnit=&quot;Cell&quot;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tk:DataGrid.Columns&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tk:DataGridTemplateColumn Header=&quot;To&quot; Width=&quot;50&quot; &gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tk:DataGridTemplateColumn.CellTemplate&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;DataTemplate&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tw:TimePicker Time=&quot;{Binding Path=To }&quot; /&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/DataTemplate&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tk:DataGridTemplateColumn.CellTemplate&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tk:DataGridTemplateColumn&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tk:DataGrid.Columns&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tk:DataGrid&gt;<br>\r\n<br>\r\n<br>\r\n<br>\r\n&nbsp;I have my own UserControl, <strong>TimePicker</strong>, that I would like to bind the &quot;To&quot; property of my TaskItem class to. I would like to bind the &quot;To&quot; property to my &quot;Time&quot; property on my TimePicker class. I have testet the &quot;Time&quot; peroperty on my TimePicker class and this property seems to work when I'm not in a &quot;binding&quot; scenario.<br>\r\n<br>\r\nWhen I run the code above I only see the &quot;default&quot; time set in my TimePicker, so the Time property is not ever set. If I change the code so I have a &lt;Label /&gt; instead of my TimePicker, I see the correct time from the TaskItem object.<br>\r\n<br>\r\nI see these errors in my console:<br>\r\nSystem.Windows.Data Error: 39 : BindingExpression path error: 'To' property not found on 'object' ''Object' (HashCode=58891391)'. BindingExpression:Path=To; DataItem='Object' (HashCode=58891391); target element is 'TimePicker' (Name=''); target property is 'Time' (type 'TimeSpan')<br>\r\n<br>\r\nI have googled this error message, but can't seem to find an solution for it that fits case.<br>\r\n<br>\r\nWhat am I doing wrong?<br>\r\n<br>\r\nThanks in advance,<br>\r\nQbus<br>\r\n<br>\r\n",
    "PostedDate": "2008-11-15T04:07:41.27-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "133089",
    "ThreadId": "40004",
    "Html": "It looks that you are not bound to a TaskItem object for some reason.Â  Does it work if you replace TimePicker with TextBox?\r\n",
    "PostedDate": "2008-11-17T05:56:34.727-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "133123",
    "ThreadId": "40004",
    "Html": "Yep it works fine with a Textbox, thats the odd thing.<br>\r\n<br>\r\nJust tried this:<br>\r\n&lt;tk:DataGridTemplateColumn Header=&quot;To&quot; Width=&quot;50&quot; &gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tk:DataGridTemplateColumn.CellTemplate&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;DataTemplate&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TextBox Text=&quot;{Binding Path=From, Mode=TwoWay}&quot; /&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/DataTemplate&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tk:DataGridTemplateColumn.CellTemplate&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tk:DataGridTemplateColumn&gt;<br>\r\n<br>\r\nWorks perfectly. What am I doing wrong in my UserControl? <br>\r\n<br>\r\n<br>\r\n\r\n",
    "PostedDate": "2008-11-17T07:28:20.397-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "133125",
    "ThreadId": "40004",
    "Html": "By the way, my TimePicker has this property, think I forgot that:<br>\r\n<br>\r\n&nbsp;public TimeSpan Time<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return (TimeSpan)GetValue(TimeProperty);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; time = value;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PickerTextbox.Text = time.Hours.ToString(&quot;d2&quot;) + &quot;:&quot; + time.Minutes.ToString(&quot;d2&quot;);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SetValue(TimeProperty, value);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NotifyPropertyChanged(&quot;Time&quot;);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n",
    "PostedDate": "2008-11-17T07:32:06.39-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "133253",
    "ThreadId": "40004",
    "Html": "Ok I've added a &quot;Date&quot; property (of type DateTime) to my TaskItem class.<br>\r\n<br>\r\nI try to bind to the WPF Toolkit Calender:<br>\r\n&lt;tk:DataGridTemplateColumn Header=&quot;Test&quot; Width=&quot;50&quot; &gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tk:DataGridTemplateColumn.CellTemplate&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;DataTemplate&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tk:Calendar DisplayDate=&quot;{Binding Path=Date}&quot; /&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/DataTemplate&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tk:DataGridTemplateColumn.CellTemplate&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tk:DataGridTemplateColumn&gt;<br>\r\n<br>\r\nThis doesn't work either. The calender just shows me the current date. <br>\r\n<br>\r\n<br>\r\n\r\n",
    "PostedDate": "2008-11-17T14:16:38.663-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "133721",
    "ThreadId": "40004",
    "Html": "Any suggestions here?<br>\r\n<br>\r\nWould you like to see the intire source? I could provide you with a link if needed, then you could see it for your self?<br>\r\n<br>\r\nThanks in advance,<br>\r\nQbus :)<br>\r\n",
    "PostedDate": "2008-11-19T11:28:05.313-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "133786",
    "ThreadId": "40004",
    "Html": "A couple of things which may help....<br>\r\n<br>\r\nÂ Â Â Â Â Â Â Â  public TimeSpan Time<br>\r\nÂ Â Â Â Â Â Â  {<br>\r\nÂ Â Â Â Â Â Â Â Â Â Â  get <br>\r\nÂ Â Â Â Â Â Â Â Â Â Â  {<br>\r\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â  return (TimeSpan)GetValue(TimeProperty);<br>\r\nÂ Â Â Â Â Â Â Â Â Â Â  }<br>\r\nÂ Â Â Â Â Â Â Â Â Â Â  set <br>\r\nÂ Â Â Â Â Â Â Â Â Â Â  {<br>\r\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â  time = value;<br>\r\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â  PickerTextbox.Text = time.Hours.ToString(&quot;d2&quot;) + &quot;:&quot; + time.Minutes.ToString(&quot;d2&quot;);<br>\r\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â  SetValue(TimeProperty, value);<br>\r\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â  NotifyPropertyChanged(&quot;Time&quot;);<br>\r\nÂ Â Â Â Â Â Â Â Â Â Â  }<br>\r\nÂ Â Â Â Â Â Â  }<br>\r\n<br>\r\nIt looks like the TimePicker.Time property is backed by a dependency property TimePicker.TimeProperty and there is some custom logic in its setter. Whenever a property is backed by a dependency property and one hooks a binding to it, WPF's binding engine may use the underlying dependency property directly without calling your custom logic in the setter. Hence it is not recommended to put custom logic in the setter of a property which is backed by dependency property. So the code should have been....<br>\r\n<br>\r\nÂ Â Â Â Â Â Â Â  public TimeSpan Time<br>\r\nÂ Â Â Â Â Â Â  {<br>\r\nÂ Â Â Â Â Â Â Â Â Â Â  get <br>\r\nÂ Â Â Â Â Â Â Â Â Â Â  {<br>\r\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â  return (TimeSpan)GetValue(TimeProperty);<br>\r\nÂ Â Â Â Â Â Â Â Â Â Â  }<br>\r\nÂ Â Â Â Â Â Â Â Â Â Â  set <br>\r\nÂ Â Â Â Â Â Â Â Â Â Â  {<br>\r\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â  SetValue(TimeProperty, value);<br>\r\nÂ Â Â Â Â Â Â Â Â Â Â  }<br>\r\nÂ Â Â Â Â Â Â  }<br>\r\n<br>\r\nNow speaking about your custom logic, Dependency property provides you to hook a property changed call back while registering it,Â which gets called whenever the property valueÂ changes. Following could be an example of your Time dependency property definition.<br>\r\n<br>\r\npublic static readonly TimeProperty = DependencyProperty.Register(&quot;Time&quot;,Â <br>\r\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â typeof(TimeSpan),Â <br>\r\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  typeof(TimePicker),Â <br>\r\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  new FrameworkPropertyMetaData(new PropertyChangedCallback(OnTimeChanged)));<br>\r\n<br>\r\nprivate static void OnTimeChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)<br>\r\n{<br>\r\nÂ Â Â Â TimePicker tp = (TimePicker)d;<br>\r\nÂ Â Â Â TimeSpan time =Â (TimeSpan)e.NewValue;<br>\r\nÂ Â Â Â tp.PickerTextbox.Text =Â time.Hours.ToString(&quot;d2&quot;) + &quot;:&quot; + time.Minutes.ToString(&quot;d2&quot;);<br>\r\n}<br>\r\n<br>\r\nOr you can simply bind PickerTextbox.Text property to TimePicker.Time property using a converter if needed.<br>\r\n<br>\r\nAlso for your calender in the otherÂ template you might want to tryÂ settin Mode=TwoWay in the binding.<br>\r\n<br>\r\nLet know how it goes!! \r\n",
    "PostedDate": "2008-11-19T14:57:38.973-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "133996",
    "ThreadId": "40004",
    "Html": "Thanks!<br>\r\n<br>\r\nIt worked. I guess I missed that point about dependencyproperties...<br>\r\n<br>\r\nThanks again :)<br>\r\n<br>\r\n//Qbus \r\n",
    "PostedDate": "2008-11-20T12:01:46.28-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]