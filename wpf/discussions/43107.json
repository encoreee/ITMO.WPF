[
  {
    "Id": "143278",
    "ThreadId": "43107",
    "Html": "<p>I have a datagrid in which some of the columns I have applied converters, for example to display a name opposed to an id. I would like to be able to filter my datagrid view based off user input.  The problem I am running into is that I cannot figure out how to access the cell contents of the datagrid opposed to the bound object properties. Obviously the user is not going to know the ids to type in, so in my filter I need to check their input with what a particular cells contents are. Here are some snippets of my code:<br>\r\n<br>\r\n.I bind my list to my datagrid...<br>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#2b91af\">CollectionViewSource</span><span style=\"font-size:13px\"> view = </span><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">CollectionViewSource</span><span style=\"font-size:13px\">();\r\n<p>&nbsp;</p>\r\n<p>view.Source = worklist;</p>\r\n<p>view.Filter += </p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">FilterEventHandler</span><span style=\"font-size:13px\">(view_Filter);\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">this</span><span style=\"font-size:13px\">.dataGrid1.ItemsSource = view.View;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p>In my filter I have attempted to retrieve the cell contents a few different ways, all of which return null....<br>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">void</span><span style=\"font-size:13px\"> view_Filter(</span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> sender, </span><span style=\"font-size:13px;color:#2b91af\">FilterEventArgs</span><span style=\"font-size:13px\"> e)\r\n<p>&nbsp;</p>\r\n<p>{</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#2b91af\">WorklistItem</span><span style=\"font-size:13px\"> item = (</span><span style=\"font-size:13px;color:#2b91af\">WorklistItem</span><span style=\"font-size:13px\">)e.Item;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#2b91af\">FrameworkElement</span><span style=\"font-size:13px\"> f = </span><span style=\"font-size:13px;color:#0000ff\">this</span><span style=\"font-size:13px\">.dataGrid1.Columns[0].GetCellContent(item);\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#2b91af\">DataGridRow</span><span style=\"font-size:13px\"> row = (</span><span style=\"font-size:13px;color:#2b91af\">DataGridRow</span><span style=\"font-size:13px\">)dataGrid1.ItemContainerGenerator.ContainerFromIndex(1);<br>\r\n<p>&nbsp;</p>\r\n<p>//would like to compare values here<br>\r\nif(! ((TextBlock)f).Text.Contains(userInputValue))<br>\r\n    e.Accepted = false;  <br>\r\n}</p>\r\n<p>I noticed in the view_Filter handler, ItemContainer.Status = NotStarted, which I think is why I am getting the null value. If I place GetCellContent inside of the SelectionChangedHandler, I am able to retreive the cell value with no problem. How can I filter off of cell contents opposed to the bound object props in this scenario, is it even possible? In Addition, is it possible to iterate through rows in the wpf datagrid and get the DataGridRow objects instead of the bound objects?</p>\r\n</span></p>\r\n<p>Thanks<br>\r\n<br>\r\n<br>\r\n </p>\r\n",
    "PostedDate": "2008-12-28T22:58:04.517-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "145015",
    "ThreadId": "43107",
    "Html": "I haven't fully investigated your particular scenario but I do have a sample that uses a filter on a CollectionView instead of the CollectionViewSource.  Maybe you can try that instead.<br>\r\n<br>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>this</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px\">.DataFilter = </span><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">DataFilter</span><span style=\"font-size:13px\">(_dpCollection);<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\">CollectionView</span><span style=\"font-size:13px\"> _dpCollection.Filter = </span><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">Predicate</span><span style=\"font-size:13px\">&lt;</span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\">&gt;(</span><span style=\"font-size:13px;color:#0000ff\">this</span><span style=\"font-size:13px\">.DataFilter.FilterItem);<br>\r\n...<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\"><br>\r\npublic</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">class</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">DataFilter</span><span style=\"font-size:13px\"> : </span><span style=\"font-size:13px;color:#2b91af\">INotifyPropertyChanged<br>\r\n</span><span style=\"font-size:13px\">{<br>\r\n...<br>\r\n<span style=\"font-size:13px;color:#0000ff\">public</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">bool</span><span style=\"font-size:13px\"> FilterItem(</span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> item)<br>\r\n{<br>\r\n<br>\r\n</span>}<br>\r\n}\r\n<p>&nbsp;</p>\r\n</span></p>\r\nThe parameter 'item' should be the same as WorkListItem.  Let me know if that helps.<br>\r\n<br>\r\n",
    "PostedDate": "2009-01-07T05:26:23.623-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]