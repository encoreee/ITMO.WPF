[
  {
    "Id": "110639",
    "ThreadId": "33376",
    "Html": "We should be able to provide factory methods/objects that would be able to generate appropriate DataGridColumn's based on data types.&nbsp; It would also be useful to be able to specify these factories on DataGrid instances, instead of being a global/static factory method.&nbsp; Yes, it's possible to provide our own column types on a case by case basis, but this isn't as convenient as the auto-generation mechanism.&nbsp; Just consider something as simple as a Color data type that you'd like to always use a (user created) DataGridColorPickerColumn, for instance.\r\n",
    "PostedDate": "2008-08-12T10:46:46.12-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "111159",
    "ThreadId": "33376",
    "Html": "Try this.<br>\r\n<br>\r\n<p>&lt;DataGrid AutoGenerateColumns=&quot;true&quot; AutoGeneratingColumn=&quot;OnAutoGeneratingColumn&quot; ItemsSource=&quot;{Binding someDataSet}&quot;&gt;<br>\r\n&lt;/DataGrid&gt;</p>\r\n<p>public partial class Window1 : Window<br>\r\n{<br>\r\n&nbsp;&nbsp;&nbsp; private void OnAutoGeneratingColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (e.PropertyType == typeof(Color))<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataGridBoundColumn oldColumn = (DataGridBoundColumn)e.Column;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataGridBoundColumn newColumn = new DataGridColorPickerColumn();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; newColumn.DataFieldBinding = oldColumn.DataFieldBinding;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; newColumn.Header = oldColumn.Header;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.Column = newColumn;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; }<br>\r\n}<br>\r\n<br>\r\nThanks<br>\r\nVarsha (MSFT)</p>\r\n",
    "PostedDate": "2008-08-14T10:31:34.387-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "111192",
    "ThreadId": "33376",
    "Html": "Thanks.&nbsp; I missed that.&nbsp; Exactly what I was asking for.\r\n",
    "PostedDate": "2008-08-14T12:51:50.657-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]