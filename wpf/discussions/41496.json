[
  {
    "Id": "137685",
    "ThreadId": "41496",
    "Html": "<p>I want to update datasource after editing cell in code behind, my question is how to do it? <span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#008000\"> dgOrderLine.BeginEdit();<br>\r\n</span><span style=\"font-size:13px;color:#008000\">cell.IsEditing = true;</span><br>\r\ncell.Content = </p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#a31515\">&quot;new content&quot;</span><span style=\"font-size:13px\">;<br>\r\n</span><span style=\"font-size:13px\"><span style=\"font-size:13px;color:#008000\"> dgOrderLine.CommitEdit();\r\n<p>&nbsp;</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p>Visualy it seems to work, but when i click in the cell the old value is still there.<br>\r\nMy issue is tak a inserted value in one cell check this value to database if it exist, if exist then use another value from the database and place it in next cell, then move to this cell and set it to editmode. </p>\r\n",
    "PostedDate": "2008-12-04T08:06:44.187-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "137690",
    "ThreadId": "41496",
    "Html": "Hi,<br>\r\n<br>\r\nTo solve the problem I think you need to tell us a little more about how you are using the DataGrid. Are you using data binding? <br>\r\n<br>\r\nA simple solution would be to create a typed dataset from your database then bind the Datagrid to the DataTable. Any changes to the data via the teh DataGrid will make it into your DataTable, also you can change your DataTable cell values programmatically and the DatGrid will update.<br>\r\n<br>\r\nI describe this, and some more advanced layered patterns in this article:<br>\r\n<br>\r\nhttp://www.codeproject.com/KB/WPF/WPFDataGridExamples.aspx<br>\r\n<br>\r\nIf you have other questions - please provide a bit more detail and more code snippets.<br>\r\n<br>\r\nRegards,<br>\r\nColin E.<br>\r\n--<br>\r\nhttp://wpfadventures.wordpress.com/ - my WPF blog<br>\r\nhttp://www.codeproject.com/KB/WPF/WPFDataGridExamples.aspx - WPF DataGrid Practical Examples <br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n",
    "PostedDate": "2008-12-04T08:22:54.953-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "137695",
    "ThreadId": "41496",
    "Html": "In this case i use LINQ to SQLClasses:<br>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">var</span><span style=\"font-size:13px\"> i = </span><span style=\"font-size:13px;color:#0000ff\">from</span><span style=\"font-size:13px\"> c </span><span style=\"font-size:13px;color:#0000ff\">in</span><span style=\"font-size:13px\"> db.SalesOrderLines\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">where</span><span style=\"font-size:13px\"> c.SalesOrderID == 1\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">select</span><span style=\"font-size:13px\"> c;</span><span style=\"font-size:13px;color:#008000\">\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>dgOrderLine.ItemsSource = i;<br>\r\n<br>\r\nI have also try to use this code in CellEditEnding, but the textblock dont get the value from cell, so i get a NULL value.<br>\r\n<span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p>DataGridRow</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px\"> row = e.Row;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#2b91af\">DataGridCellsPresenter</span><span style=\"font-size:13px\"> presenter = GetVisualChild&lt;</span><span style=\"font-size:13px;color:#2b91af\">DataGridCellsPresenter</span><span style=\"font-size:13px\">&gt;(row);\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#2b91af\">DataGridCell</span><span style=\"font-size:13px\"> cell = (</span><span style=\"font-size:13px;color:#2b91af\">DataGridCell</span><span style=\"font-size:13px\">)presenter.ItemContainerGenerator.ContainerFromIndex(1); </span><span style=\"font-size:13px;color:#008000\">// get fac value cell</span><span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#2b91af\">TextBlock</span><span style=\"font-size:13px\"> textBlock = cell.Content </span><span style=\"font-size:13px;color:#0000ff\">as</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">TextBlock</span><span style=\"font-size:13px\">;\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#2b91af\">BindingExpression</span><span style=\"font-size:13px\"> be = textBlock.GetBindingExpression(</span><span style=\"font-size:13px;color:#2b91af\">TextBlock</span><span style=\"font-size:13px\">.TextProperty);\r\n<p>&nbsp;</p>\r\n<p>be.UpdateTarget();<br>\r\n<br>\r\nKindly help</p>\r\n</span></p>\r\n</span>\r\n",
    "PostedDate": "2008-12-04T08:33:08.493-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "137700",
    "ThreadId": "41496",
    "Html": "Can I just confirm what you are wanting to do ...<br>\r\n<br>\r\nWhat you want is that when the user finishes editing a single cell in the DataGrid, that the bound data is updated to reflect this? However, currently you will not see the updated value from that cell (or any others in that row) until the row edit ends and the values are committed.<br>\r\n<br>\r\nIs that correct?<br>\r\n<br>\r\nThe CellEditEnding event will not give you any joy - it occurs before the value from the editing control is written back to your bound data object - as I guess you have found.<br>\r\n<br>\r\nDo your objects implement IEditableObject? if so - then after each cell edit you need to commit the changes, this can be done by invoking the EndEdit() method on your data objects each time the user moves between the different cell values.<br>\r\n<br>\r\nRegards,<br>\r\nColin E.<br>\r\n",
    "PostedDate": "2008-12-04T08:41:53.597-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "137778",
    "ThreadId": "41496",
    "Html": "<br>\r\nMy issue is to update another cell than is in editing and focus. The changes like &quot;cell.Content = <span style=\"font-size:13px;color:#a31515\">&quot;new content&quot;</span><span style=\"font-size:13px\">;&quot; is visible  in the current cell, but when I move to this cell and click, the old value &quot;Test&quot; is visible and &quot;new content&quot;is gone. I have some line of code that moves me to next cell in the same row:<br>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>private</p>\r\n</span>\r\n<p> </p>\r\n</span>\r\n<p><span style=\"font-size:13px\"></span><span style=\"font-size:13px;color:#0000ff\">void</span><span style=\"font-size:13px\"> MoveNext(</span><span style=\"font-size:13px;color:#2b91af\">KeyEventArgs</span><span style=\"font-size:13px\"> e)\r\n<p> </p>\r\n<p>{</p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p> </p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">bool</span><span style=\"font-size:13px\"> previous = ((e.KeyboardDevice.Modifiers &amp; </span><span style=\"font-size:13px;color:#2b91af\">ModifierKeys</span><span style=\"font-size:13px\">.Shift) == </span><span style=\"font-size:13px;color:#2b91af\">ModifierKeys</span><span style=\"font-size:13px\">.Shift);<br>\r\n</span><span style=\"font-size:13px;color:#008000\">// Start navigation from the current focus to allow moving focus on other focusable elements inside the cell<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\">UIElement</span><span style=\"font-size:13px\"> startElement = </span><span style=\"font-size:13px;color:#2b91af\">Keyboard</span><span style=\"font-size:13px\">.FocusedElement </span><span style=\"font-size:13px;color:#0000ff\">as</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">UIElement</span><span style=\"font-size:13px\">;<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\">ContentElement</span><span style=\"font-size:13px\"> startContentElement = (startElement == </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">) ? </span><span style=\"font-size:13px;color:#2b91af\">Keyboard</span><span style=\"font-size:13px\">.FocusedElement </span><span style=\"font-size:13px;color:#0000ff\">as</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">ContentElement</span><span style=\"font-size:13px\"> : </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">;<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> ((startElement != </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">) || (startContentElement != </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">))<br>\r\n{<br>\r\ne.Handled = </span><span style=\"font-size:13px;color:#0000ff\">true</span><span style=\"font-size:13px\">;<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\">FocusNavigationDirection</span><span style=\"font-size:13px\"> direction = </span><span style=\"font-size:13px;color:#2b91af\">FocusNavigationDirection</span><span style=\"font-size:13px\">.Next; </span><span style=\"font-size:13px;color:#008000\">//previous ? FocusNavigationDirection.Up : FocusNavigationDirection.Down;<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\">TraversalRequest</span><span style=\"font-size:13px\"> request = </span><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">TraversalRequest</span><span style=\"font-size:13px\">(direction);<br>\r\nrequest.Wrapped = </span><span style=\"font-size:13px;color:#0000ff\">true</span><span style=\"font-size:13px\">; </span><span style=\"font-size:13px;color:#008000\">// Navigate only within datagrid<br>\r\n</span><span style=\"font-size:13px;color:#008000\">// Move focus to the the next or previous tab stop.<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (((startElement != </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">) &amp;&amp; startElement.MoveFocus(request)) ||<br>\r\n((startContentElement != </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">) &amp;&amp; startContentElement.MoveFocus(request)))<br>\r\n{<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\">UIElement</span><span style=\"font-size:13px\"> currentElement = </span><span style=\"font-size:13px;color:#2b91af\">Keyboard</span><span style=\"font-size:13px\">.FocusedElement </span><span style=\"font-size:13px;color:#0000ff\">as</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">UIElement</span><span style=\"font-size:13px\">;<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\">DataGridRow</span><span style=\"font-size:13px\"> currentRow = FindVisualParent&lt;</span><span style=\"font-size:13px;color:#2b91af\">DataGridRow</span><span style=\"font-size:13px\">&gt;(currentElement);<br>\r\n</span><span style=\"font-size:13px;color:#008000\">// if (currentRow != null) currentRow.IsSelected = true;<br>\r\n</span><span style=\"font-size:13px\">}<br>\r\n}<br>\r\n}<br>\r\nAnd this code make changes back to the underlaying bound data, when the user moves to next cell.<br>\r\n</span><span style=\"font-size:13px\">I have not implement IEditableObjects.<br>\r\n<br>\r\nDo you understand what I thinking?<br>\r\n<br>\r\n</span></p>\r\n</span>\r\n",
    "PostedDate": "2008-12-04T11:57:46.833-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "137913",
    "ThreadId": "41496",
    "Html": "It sounds to me like what you want can be most easily accomplished by implementing INotifyPropertyChanged on the underlying object, and updating that rather than the cell directly. dataGrid.CurrentItem seems like it could be very handy in your case.<br>\r\n",
    "PostedDate": "2008-12-04T23:31:03.683-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]