[
  {
    "Id": "253342",
    "ThreadId": "74068",
    "Html": "<p>Hi,</p>\r\n<p>I think I remember seeing a way to bind an event like SelectionChanged that normally gets handled in the codebehind in a WPF app get sent to the ViewModel instead but I don't seem to be able to find info on it again. It might have been done using AttachedBehaviors but I don't remember for sure, but I think it was pretty simple. Is anyone sending their events to the ViewModel?</p>\r\n<p>Thanks in Advance!</p>\r\n<p>Bill</p>",
    "PostedDate": "2009-11-04T08:55:49.797-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "253436",
    "ThreadId": "74068",
    "Html": "<p>TwoWay bind the WPF DataGrids CurrentItem dependency property to a property on your view model.&nbsp; When the user selects a different item in the grid the property will change on your ViewModel.&nbsp; You can call a method when the property changes or listen for property changes and call a method...</p>\r\n<p>In your ViewModel...</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>        <span style=\"color:Blue\">#region</span> CurrentItem\r\n        <span style=\"color:Blue\">private</span> TViewModel _CurrentItem;\r\n        <span style=\"color:Blue\">public</span> TViewModel CurrentItem\r\n        {\r\n            <span style=\"color:Blue\">get</span> { <span style=\"color:Blue\">return</span> _CurrentItem; }\r\n            <span style=\"color:Blue\">set</span>\r\n            {\r\n                <span style=\"color:Blue\">if</span> (_CurrentItem != value)\r\n                {\r\n                    _CurrentItem = value;\r\n                    <span style=\"color:Blue\">if</span> (CurrentItem != <span style=\"color:Blue\">null</span>)\r\n                    {\r\n                         _CurrentItem.ShowDetails();\r\n                    }\r\n                    OnPropertyChanged(<span style=\"color:#A31515\">&quot;CurrentItem&quot;</span>);\r\n                }\r\n            }\r\n        }\r\n        <span style=\"color:Blue\">#endregion</span> CurrentItem\r\n</pre>\r\n<pre>In your view bound to the ViewModel</pre>\r\n<pre><div style=\"color:Black;background-color:White\"><pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">WpfToolkit</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DataGrid</span>  <span style=\"color:Red\">x:Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">MainDataGrid</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">ItemsSource</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding ViewModels}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">CurrentItem</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding CurrentItem, Mode=TwoWay}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">SelectionMode</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Single</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n  <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">WpfToolkit</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DataGrid.Columns</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">WpfToolkit</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DataGridTextColumn</span> <span style=\"color:Red\">Header</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Header</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Binding</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Model.Value}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">IsReadOnly</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">True</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n  <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">WpfToolkit</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DataGrid.Columns</span><span style=\"color:Blue\">&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">WpfToolkit</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DataGrid</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n&nbsp;</pre>\r\n<pre>When the user selects a different row the CurrentItem property updates to reflect the selection and you can do something when this happens.</pre>\r\n<pre>Andy</pre>\r\n</div>",
    "PostedDate": "2009-11-04T12:03:12.187-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "257940",
    "ThreadId": "74068",
    "Html": "<p>Thanks Andy! This does work. Now we realize that we need to have MultiSelect on the DataGrid and recognize that in the ViewModel. This seems that it would be something that a lot of people would do.</p>\r\n<div>\r\n<div>I'm finding some challenges in using MultiSelect in MVVM and am sure that I'm just missing something simple. I can use the &quot;IsSelected&quot; in the ViewModel to get the event when selecting a row in the DataGrid. This works fine for a single selection. If I set &quot;SelectionMode=Extended&quot; I still only get the event on the selection of the first row in the DataGrid. SelectionChanged in the codebehind gets each selection event but I really want to make this work in the ViewModel. There is probably a simple solution to this multiSelect that I am just missing. I also tried binding SelectedItems (plural) to a collection to get all of these, but SelectedItems is readonly so it can't be bound to. I sure would appreciate any ideas on how to do this as I can't get this method moved from the codebehind to the ViewModel.</div>\r\n<div>I found some MSDN Documentation for the WPF DataGrid in .NET 4.0 but not for 3.5. Has anyone seen any documentation for the toolkit or datagrid for .NET 3.5?</div>\r\n<div><br>thanks!<br>Bi</div>\r\n</div>",
    "PostedDate": "2009-11-17T07:58:36.833-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]