[
  {
    "Id": "462561",
    "ThreadId": "218124",
    "Html": "<p>I have a weird problem with a multi bound column that shall display a current and a limit value.<br>It shall be possible to&nbsp;edit the limit which is sent to the server.</p>\r\n<p>Everything works fine for a 'synchronous' data source but when the applying this to the client/server object it starts to fail.</p>\r\n<p>Also the DataGrid column needs UpdateSourceTrigger to be LostFocus.</p>\r\n<p>I think it's easiest to explain with the attached example code.<br>Run it and update the value for the MultiBound to something new, on the format &quot;x:y&quot; (the colon is needed)<br>Then don't change row, click with the mouse or tab/shift tab to remain on the same row.<br>You will see that quite frequently the second part of the multi value is the old, not updated though the source have been updated.</p>\r\n<p>How can I resolve this?? The problem get's there due to LostFocus and the async data source but I think this shall be ok.<br>regards and tia<br>&nbsp;/Stefan</p>\r\n<p>Very simple example code here which shows the problem:</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre>---------- MainWindow.xaml ----------\r\n&lt;Window x:Class=<span style=\"color:#a31515\">&quot;WpfMiniMultiBindGridCol.MainWindow&quot;</span>\r\n        xmlns=<span style=\"color:#a31515\">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span>\r\n        xmlns:x=<span style=\"color:#a31515\">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span>\r\n        xmlns:src=<span style=\"color:#a31515\">&quot;clr-namespace:WpfMiniMultiBindGridCol&quot;</span>\r\n        Title=<span style=\"color:#a31515\">&quot;MainWindow&quot;</span> Height=<span style=\"color:#a31515\">&quot;298&quot;</span> Width=<span style=\"color:#a31515\">&quot;525&quot;</span>&gt;\r\n\r\n    &lt;Window.Resources&gt;\r\n        &lt;src:AMultiConverter x:Key=<span style=\"color:#a31515\">&quot;multiconverter&quot;</span>/&gt;\r\n    &lt;/Window.Resources&gt;\r\n    &lt;Grid&gt;\r\n        &lt;DataGrid AutoGenerateColumns=<span style=\"color:#a31515\">&quot;False&quot;</span> Height=<span style=\"color:#a31515\">&quot;200&quot;</span> HorizontalAlignment=<span style=\"color:#a31515\">&quot;Left&quot;</span> Margin=<span style=\"color:#a31515\">&quot;21,12,0,0&quot;</span> Name=<span style=\"color:#a31515\">&quot;dataGrid1&quot;</span> VerticalAlignment=<span style=\"color:#a31515\">&quot;Top&quot;</span> Width=<span style=\"color:#a31515\">&quot;429&quot;</span>&gt;\r\n            &lt;DataGrid.Columns&gt;\r\n                &lt;DataGridTextColumn Header=<span style=\"color:#a31515\">&quot;Empty&quot;</span> /&gt;\r\n                &lt;DataGridTextColumn Header=<span style=\"color:#a31515\">&quot;MultiBound&quot;</span> &gt;\r\n                    &lt;DataGridTextColumn.Binding&gt;\r\n                        &lt;MultiBinding Converter=<span style=\"color:#a31515\">&quot;{StaticResource multiconverter}&quot;</span> UpdateSourceTrigger=<span style=\"color:#a31515\">&quot;LostFocus&quot;</span>&gt;\r\n                            &lt;Binding Path=<span style=\"color:#a31515\">&quot;Str1&quot;</span> Mode=<span style=\"color:#a31515\">&quot;OneWay&quot;</span>/&gt;\r\n                            &lt;Binding Path=<span style=\"color:#a31515\">&quot;Str2&quot;</span>/&gt;\r\n                        &lt;/MultiBinding&gt;\r\n                    &lt;/DataGridTextColumn.Binding&gt;\r\n                &lt;/DataGridTextColumn&gt;\r\n                &lt;DataGridTextColumn Header=<span style=\"color:#a31515\">&quot;SingleBound&quot;</span> &gt;\r\n                    &lt;DataGridTextColumn.Binding&gt;\r\n                        &lt;Binding Path=<span style=\"color:#a31515\">&quot;Str2&quot;</span>/&gt;\r\n                    &lt;/DataGridTextColumn.Binding&gt;\r\n                &lt;/DataGridTextColumn&gt;\r\n            &lt;/DataGrid.Columns&gt;\r\n        &lt;/DataGrid&gt;\r\n    &lt;/Grid&gt;\r\n&lt;/Window&gt;\r\n---------- MainWindow.xaml.cs ----------\r\n<span style=\"color:blue\">using</span> System.Collections.ObjectModel;\r\n<span style=\"color:blue\">using</span> System.Windows;\r\n\r\n<span style=\"color:blue\">namespace</span> WpfMiniMultiBindGridCol\r\n{\r\n    <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n    <span style=\"color:gray\">///</span><span style=\"color:green\"> Interaction logic for MainWindow.xaml</span>\r\n    <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> MainWindow : Window\r\n    {\r\n        <span style=\"color:blue\">public</span> MainWindow()\r\n        {\r\n            InitializeComponent();\r\n\r\n            ObservableCollection&lt;ADataObject&gt; data = <span style=\"color:blue\">new</span> ObservableCollection&lt;ADataObject&gt;();\r\n            data.Add(<span style=\"color:blue\">new</span> ADataObject(<span style=\"color:#a31515\">&quot;A&quot;</span>, <span style=\"color:#a31515\">&quot;B&quot;</span>));\r\n            data.Add(<span style=\"color:blue\">new</span> ADataObject(<span style=\"color:#a31515\">&quot;c&quot;</span>, <span style=\"color:#a31515\">&quot;d&quot;</span>));\r\n            dataGrid1.ItemsSource = data;\r\n        }\r\n    }\r\n}\r\n---------- ConverterAndObject.cs ----------\r\n<span style=\"color:blue\">using</span> System;\r\n<span style=\"color:blue\">using</span> System.Windows.Data;\r\n<span style=\"color:blue\">using</span> System.ComponentModel;\r\n\r\n<span style=\"color:blue\">namespace</span> WpfMiniMultiBindGridCol\r\n{\r\n    <span style=\"color:blue\">class</span> AMultiConverter : IMultiValueConverter\r\n    {\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">object</span> Convert(<span style=\"color:blue\">object</span>[] values, Type targetType, <span style=\"color:blue\">object</span> parameter, System.Globalization.CultureInfo culture)\r\n        {\r\n            <span style=\"color:blue\">object</span> obj;\r\n\r\n            <span style=\"color:blue\">if</span> (values[0] == System.Windows.DependencyProperty.UnsetValue || values[1] == System.Windows.DependencyProperty.UnsetValue)\r\n                obj = System.Windows.DependencyProperty.UnsetValue;\r\n            <span style=\"color:blue\">else</span>\r\n                obj = values[0] + <span style=\"color:#a31515\">&quot;:&quot;</span> + values[1];\r\n\r\n            System.Diagnostics.Trace.TraceInformation(<span style=\"color:#a31515\">&quot;Convert: &quot;</span> + obj + <span style=\"color:#a31515\">&quot;. &quot;</span> + values[0].GetType() + <span style=\"color:#a31515\">&quot;, &quot;</span> + values[1].GetType());\r\n            <span style=\"color:blue\">return</span> obj;\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">object</span>[] ConvertBack(<span style=\"color:blue\">object</span> value, Type[] targetTypes, <span style=\"color:blue\">object</span> parameter, System.Globalization.CultureInfo culture)\r\n        {\r\n            <span style=\"color:blue\">object</span>[] obj;\r\n            <span style=\"color:blue\">string</span>[] both = ((<span style=\"color:blue\">string</span>)value).Split(<span style=\"color:#a31515\">':'</span>);\r\n\r\n            <span style=\"color:blue\">if</span> (both.Length == 2)\r\n                obj = <span style=\"color:blue\">new</span> <span style=\"color:blue\">object</span>[] { Binding.DoNothing, both[1] };\r\n            <span style=\"color:blue\">else</span>\r\n                obj = <span style=\"color:blue\">new</span> <span style=\"color:blue\">object</span>[] { Binding.DoNothing, System.Windows.DependencyProperty.UnsetValue };\r\n\r\n            System.Diagnostics.Trace.TraceInformation(<span style=\"color:#a31515\">&quot;ConvertBack: &quot;</span> + obj[0] + <span style=\"color:#a31515\">&quot;, &quot;</span> + obj[1] + <span style=\"color:#a31515\">&quot;. &quot;</span> + value);\r\n            <span style=\"color:blue\">return</span> obj;\r\n        }\r\n    }\r\n\r\n\r\n    <span style=\"color:blue\">class</span> ADataObject : INotifyPropertyChanged\r\n    {\r\n        <span style=\"color:blue\">public</span> ADataObject(<span style=\"color:blue\">string</span> s1, <span style=\"color:blue\">string</span> s2)\r\n        {\r\n            Str1 = s1;\r\n            str2 = s2;\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">string</span> Str1 { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">string</span> str2;\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">string</span> Str2\r\n        {\r\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> str2; }\r\n            <span style=\"color:blue\">set</span>\r\n            {\r\n                <span style=\"color:green\">// delay setting of this to simulate server communication</span>\r\n                System.Threading.Thread t = <span style=\"color:blue\">new</span> System.Threading.Thread(<span style=\"color:blue\">delegate</span>(<span style=\"color:blue\">object</span> o)\r\n                {\r\n                    <span style=\"color:blue\">string</span> s = (<span style=\"color:blue\">string</span>)o;\r\n                    str2 = s;\r\n                    <span style=\"color:blue\">if</span> (PropertyChanged != <span style=\"color:blue\">null</span>)\r\n                        PropertyChanged(<span style=\"color:blue\">this</span>, <span style=\"color:blue\">new</span> PropertyChangedEventArgs(<span style=\"color:#a31515\">&quot;Str2&quot;</span>));\r\n                });\r\n                t.Start(value);\r\n            }\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">event</span> PropertyChangedEventHandler PropertyChanged;\r\n    }\r\n}\r\n\r\n</pre>\r\n</div>",
    "PostedDate": "2010-07-02T02:50:47.69-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]