[
  {
    "Id": "124932",
    "ThreadId": "37673",
    "Html": "One thing we do in our unit tests is to set values on the controls (e.g. set the Text property of TextBoxes), and see that the values go through the data bindings, are converted as expected by value converters, and perhaps stopped by validators.<br>\r\n<br>\r\nI found a way to find all DataCellItems and iterate over them on this forum, ie.<br>\r\n<span style=\"font-size:13px\">&nbsp; tupleGrid.SelectAllCells();<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">&nbsp; IList</span></span><span style=\"font-size:13px\">&lt;</span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">DataGridCellInfo</span></span><span style=\"font-size:13px\">&gt; cells = tupleGrid.SelectedCells;<br>\r\n<br>\r\nBut since the DataGridCellInfo.Item refers to the original source property list member corresponding to the cell, setting values there doesn't really test any thing.&nbsp; At least it doesn't test the stuff I'd like to test, which is validators and custom value converters on the data binding.<br>\r\n<br>\r\nIs there a way to get at the edit controls of the cells?<br>\r\n<br>\r\nThanx!<br>\r\n</span>\r\n",
    "PostedDate": "2008-10-14T03:02:25.303-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "124939",
    "ThreadId": "37673",
    "Html": "I found a way, I think.<br>\r\n<br>\r\nFirst<br>\r\n<span style=\"font-size:13px\">&nbsp;&nbsp; tupleGrid.SelectAllCells();<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">&nbsp;&nbsp; IList</span></span><span style=\"font-size:13px\">&lt;</span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">DataGridCellInfo</span></span><span style=\"font-size:13px\">&gt; cells = tupleGrid.SelectedCells;<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">&nbsp;&nbsp; DataGridColumn</span></span><span style=\"font-size:13px\"> firstColumn = tupleGrid.Columns[0];<br>\r\nand then in the iteration over cells:<br>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">&nbsp;&nbsp; for</span></span><span style=\"font-size:13px\"> (</span><span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">int</span></span><span style=\"font-size:13px\"> i = 0; i &lt; op.AListOfStucts.Count; ++i)<br>\r\n&nbsp;&nbsp; {<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">SillyClassWithOneField</span></span><span style=\"font-size:13px\"> cellItem = (</span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">SillyClassWithOneField</span></span><span style=\"font-size:13px\">) cells[i].Item;<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TextBlock</span></span><span style=\"font-size:13px\"> cellControl = (</span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">TextBlock</span></span><span style=\"font-size:13px\">) firstColumn.GetCellContent(cellItem);<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\"><span style=\"font-size:13px;color:#2b91af\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Assert</span></span><span style=\"font-size:13px\">.AreEqual(op.AListOfStucts[i].AStringValueThatBecomesTheColumnHeader, cellControl.Text, </span><span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">&quot;The cell item of each row in a data grid, should be the same as the matching item in the list property&quot;</span></span><span style=\"font-size:13px\">);<br>\r\n&nbsp;&nbsp; }<br>\r\n<br>\r\n(I can drop that cellItem variable now, I guess...?)</span></span>\r\n",
    "PostedDate": "2008-10-14T03:28:03.953-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]