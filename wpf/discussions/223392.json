[
  {
    "Id": "479829",
    "ThreadId": "223392",
    "Html": "I have a datagrid that I am populating from a query then based on the data returned for each row will have a location and up to 7 col. with a pass or fail\r\nbased on that i use a converter to create a button col for the dates and make it red or green.\r\nquestion is how do i find out with button was clicked by location and Date\r\nlocation         Date1              date2            .......\r\n\r\n\r\n{\r\n    /// &lt;summary&gt;\r\n    /// Interaction logic for Window1.xaml\r\n    /// &lt;/summary&gt;\r\n    public partial class Window1 : Window\r\n    {\r\n        public Window1()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n\r\n        private void Window_Loaded(object sender, RoutedEventArgs e)\r\n        {\r\n            DataAccess dbaccess = new DataAccess();\r\n\r\n            DataSet ds = dbaccess.GetRelData();\r\n\r\n            string[] colHeaders;\r\n            List&lt;string&gt; colheadervalue = new List&lt;string&gt;();\r\n            int ColCount = ds.Tables[0].Columns.Count;\r\n            for (int x = 0; x &lt; ColCount; x++)\r\n            {\r\n                string colval = ds.Tables[0].Columns[x].ToString();\r\n                colheadervalue.Add(colval);\r\n                string mycol = colheadervalue[x].ToString();\r\n                \r\n                if (x == 0)\r\n                {\r\n\r\n                    DataGridTextColumn rn = new DataGridTextColumn();\r\n                    rn.Header = &quot;locatonName&quot;;\r\n                    rn.Binding = new Binding(&quot;locationNum&quot;);\r\n                    dataGrid1.Columns.Add(rn);\r\n                                 \r\n                }\r\n                else\r\n                {\r\n                    //dataGrid1.Columns.Add(new DataGridTextColumn { Header = mycol });\r\n                    \r\n                    dataGrid1.Columns.Add(MakeColumn(mycol));\r\n                }\r\n                \r\n            }\r\n\r\n            dataGrid1.ItemsSource = ds.Tables[0].DefaultView;\r\n  \r\n        }\r\n\r\n\r\n\r\n        private DataGridTemplateColumn MakeColumn(string columnName)\r\n        {\r\n            FrameworkElementFactory elementFactory = new FrameworkElementFactory(typeof(Button));\r\n\r\n            Binding binding = new Binding(columnName);\r\n\r\n            binding.Converter = new ButtonColorConverter();\r\n            binding.ConverterParameter = columnName;\r\n\r\n           // elementFactory.SetValue(Button.RenderTransformProperty, new RotateTransform(90));\r\n\r\n            elementFactory.SetValue(Button.BackgroundProperty, binding);\r\n  \r\n            DataTemplate cellTemplate = new DataTemplate();\r\n\r\n            cellTemplate.VisualTree = elementFactory;\r\n\r\n            DataGridTemplateColumn column = new DataGridTemplateColumn();\r\n            \r\n            column.Header = columnName;\r\n\r\n            column.CellTemplate = cellTemplate;\r\n\r\n            column.CellEditingTemplate = cellTemplate;\r\n\r\n            return column;\r\n        }\r\n\r\n \r\n\r\n\r\n \r\n    }\r\n}",
    "PostedDate": "2010-08-12T10:57:03.717-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]