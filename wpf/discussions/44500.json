[
  {
    "Id": "148101",
    "ThreadId": "44500",
    "Html": "<p>Hello, </p>\r\n<p>  I am writing an App with Datagrids to perform standard CRUD operation on data fetched from a database. I have a datagrid with datasource is directly bound from a database table from a LinQ query.  I handle database changes through calls to commit changes to the LinQ datacontext and so far so good. Data can be deleted this way and that's fine also. (SubmitChanges are called in the RowEditEnding event of the grid)</p>\r\n<p>   When inserting data, I get a row datasource that not in the datacontext changeset. I update some foreign key fields so that the data can be inserted properly in teh database, and call a datacontext.table.insertonsubmit (myrow).</p>\r\n<p>   The call to SubmitChanges is sucessfull. However after returning from the RowEditEnding event, the datagrid throw an exception stating that it cannot insert an existing data. I cannot catch this exception since it's not thrown from my code. However upon restarting the application the data has been properly inserted in the database.</p>\r\n<p>   Below is the top of the exception Stack is it's of any help.</p>\r\n<p>A first chance exception of type 'System.InvalidOperationException' occurred in System.Data.Linq.dll<br>\r\nSystem.Transactions Critical: 0 : &lt;TraceRecord xmlns=&quot;http://schemas.microsoft.com/2004/10/E2ETraceEvent/TraceRecord&quot; Severity=&quot;Critical&quot;&gt;&lt;TraceIdentifier&gt;http://msdn.microsoft.com/TraceCodes/System/ActivityTracing/2004/07/Reliability/Exception/Unhandled&lt;/TraceIdentifier&gt;&lt;Description&gt;Exception non gérée&lt;/Description&gt;&lt;AppDomain&gt;InProd_II.vshost.exe&lt;/AppDomain&gt;&lt;Exception&gt;&lt;ExceptionType&gt;System.InvalidOperationException, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/ExceptionType&gt;&lt;Message&gt;Impossible d'ajouter une entité qui existe déjà.&lt;/Message&gt;&lt;StackTrace&gt;   à System.Data.Linq.Table`1.InsertOnSubmit(TEntity entity)<br>\r\nà System.Data.Linq.Provider.DataBindingList`1.EndNew(Int32 itemIndex)<br>\r\nà System.Windows.Data.BindingListCollectionView.CommitNew()<br>\r\nà System.Windows.Controls.ItemCollection.System.ComponentModel.IEditableCollectionView.CommitNew()<br>\r\nà Microsoft.Windows.Controls.DataGrid.CommitRowItem()<br>\r\nà Microsoft.Windows.Controls.DataGrid.OnExecutedCommitEdit(ExecutedRoutedEventArgs e)<br>\r\nà Microsoft.Windows.Controls.DataGrid.OnExecutedCommitEdit(Object sender, ExecutedRoutedEventArgs e)<br>\r\nà System.Windows.Input.CommandBinding.OnExecuted(Object sender, ExecutedRoutedEventArgs e)<br>\r\nà System.Windows.Input.CommandManager.ExecuteCommandBinding(Object sender, ExecutedRoutedEventArgs e, CommandBinding commandBinding)<br>\r\nà System.Windows.Input.CommandManager.FindCommandBinding(CommandBindingCollection commandBindings, Object sender, RoutedEventArgs e, ICommand command, Boolean execute)<br>\r\nà System.Windows.Input.CommandManager.FindCommandBinding(Object sender, RoutedEventArgs e, ICommand command, Boolean execute)<br>\r\nà System.Windows.Input.CommandManager.OnExecuted(Object sender, ExecutedRoutedEventArgs e)<br>\r\nà System.Windows.UIElement.OnExecutedThunk(Object sender, ExecutedRoutedEventArgs e)<br>\r\nà System.Windows.Input.ExecutedRoutedEventArgs.InvokeEventHandler(Delegate genericHandler, Object target)<br>\r\nà System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)<br>\r\nà System.Windows.RoutedEventHandlerInfo.InvokeHandler(Object target, RoutedEventArgs routedEventArgs)<br>\r\nà System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)<br>\r\nà System.Windows.UIElement.RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)<br>\r\nà System.Windows.UIElement.RaiseEvent(RoutedEventArgs args, Boolean trusted)<br>\r\nà System.Windows.Input.RoutedCommand.ExecuteImpl(Object parameter, IInputElement target, Boolean userInitiated)<br>\r\nà System.Windows.Input.RoutedCommand.Execute(Object parameter, IInputElement target)<br>\r\nà Microsoft.Windows.Controls.DataGrid.EndEdit(RoutedCommand command, DataGridCell cellContainer, DataGridEditingUnit editingUnit, Boolean exitEditMode)<br>\r\nà Microsoft.Windows.Controls.DataGrid.CommitEdit(DataGridEditingUnit editingUnit, Boolean exitEditingMode)<br>\r\nà Microsoft.Windows.Controls.DataGrid.CommitAnyEdit()<br>\r\nà Microsoft.Windows.Controls.DataGrid.OnEnterKeyDown(KeyEventArgs e)<br>\r\nà Microsoft.Windows.Controls.DataGrid.OnKeyDown(KeyEventArgs e)<br>\r\n</p>\r\n<p>I guess the RowEditEnding Event was called somewhere in the middle of this before commiting the changes.</p>\r\n<p></p>\r\n<p>S. Barthes</p>\r\n<p></p>\r\n",
    "PostedDate": "2009-01-18T09:44:32.683-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "149220",
    "ThreadId": "44500",
    "Html": "Could you post more of your code.  It is not really easy to tell from this stacktrace alone since this seems to be a standard call stack for committing a row.\r\n",
    "PostedDate": "2009-01-21T06:01:34.827-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "149485",
    "ThreadId": "44500",
    "Html": "<p>Hello,</p>\r\n<p>  After discussing the matter with a friend he suggested using an observable collection instead of directly using the linq collection. so I changed my code from </p>\r\n<p>&lt;Original code that produce the error in the datagrid&gt;</p>\r\n<p>        Public Property QuotationExtCharges() As IQueryable(Of TblLigneDevisCR)<br>\r\nGet<br>\r\nDim RetVal As IQueryable(Of TblLigneDevisCR) = Nothing<br>\r\nIf _QuotationExtCharges Is Nothing Then<br>\r\nReturn RetVal<br>\r\n<br>\r\nEnd If</p>\r\n<p>                RetVal = (From Q In _QuotationExtCharges Select Q)<br>\r\n<br>\r\n<br>\r\nReturn RetVal<br>\r\nEnd Get<br>\r\nSet(ByVal value As IQueryable(Of TblLigneDevisCR))<br>\r\n_QuotationExtCharges = value<br>\r\nRaiseEvent PropertyChanged(Me, HeaderPropsEvent(HeaderEvtEnum.ExtCharges))<br>\r\nEnd Set<br>\r\nEnd Property</p>\r\n<p>To<br>\r\n&lt; Newer code that does not produce an exception in the datagrid&gt;</p>\r\n<p>        Public Property QuotationExtCharges() As ObservableCollection(Of TblLigneDevisCR)<br>\r\nGet<br>\r\nDim RetVal As ObservableCollection(Of TblLigneDevisCR) = Nothing<br>\r\nIf _QuotationExtCharges Is Nothing Then<br>\r\nReturn RetVal<br>\r\n<br>\r\nEnd If<br>\r\nRetVal = New ObservableCollection(Of TblLigneDevisCR)(From Q In _QuotationExtCharges Select Q)<br>\r\n<br>\r\n<br>\r\nReturn RetVal<br>\r\nEnd Get<br>\r\nSet(ByVal value As ObservableCollection(Of TblLigneDevisCR))<br>\r\n_QuotationExtCharges = value<br>\r\nRaiseEvent PropertyChanged(Me, HeaderPropsEvent(HeaderEvtEnum.ExtCharges))<br>\r\nEnd Set<br>\r\nEnd Property</p>\r\n<p>I can now insert data with no problem however exception are raised twice when some data cannot be inserted in the database. Sucessful updates only raise the event once.</p>\r\n<p>The code I have in the rowendediting event is below:</p>\r\n<p>    Private Sub LinQRowEdited(ByVal sender As System.Object, ByVal e As Microsoft.Windows.Controls.DataGridRowEditEndingEventArgs)<br>\r\n<br>\r\nStatic LastInSertedOptionID As Decimal = 0<br>\r\n<br>\r\nIf e.EditAction = Microsoft.Windows.Controls.DataGridEditAction.Commit Then<br>\r\nIf sender Is Me.ExtChargesGrid Then<br>\r\n<br>\r\nIf Model Is Nothing OrElse Model.ViewedQuote Is Nothing Then<br>\r\nReturn<br>\r\nEnd If<br>\r\n<br>\r\nIf TypeOf e.Row.DataContext Is TblLigneDevisCR Then<br>\r\n<br>\r\nDim CurCr As TblLigneDevisCR = CType(e.Row.DataContext, TblLigneDevisCR)<br>\r\n<br>\r\nIf CurCr.IdLigneDevisCR = 0 Then<br>\r\n'Add a new CR Line<br>\r\nModel.ViewedQuote.AddCR(CurCr, LastInSertedOptionID)<br>\r\nEnd If<br>\r\n<br>\r\n<br>\r\nModel.ViewedQuote.UpdateChanges()<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\nEnd If<br>\r\nEnd If<br>\r\nEnd If<br>\r\nEnd Sub</p>\r\n<p></p>\r\n<p>Let me know if you need more</p>\r\n<p></p>\r\n<p>SBS<br>\r\n<br>\r\n<br>\r\n</p>\r\n<p></p>\r\n",
    "PostedDate": "2009-01-21T15:28:28.473-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]