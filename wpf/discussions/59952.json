[
  {
    "Id": "202948",
    "ThreadId": "59952",
    "Html": "<p>Is there a way to set a MaxLength property on the DataGrid column?</p>",
    "PostedDate": "2009-06-18T07:46:57.927-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "203426",
    "ThreadId": "59952",
    "Html": "<p>Do you mean set a MaxWidth on a Column?&nbsp; There is a DataGridColumn.MaxWidth property.</p>",
    "PostedDate": "2009-06-19T10:10:06.733-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "203430",
    "ThreadId": "59952",
    "Html": "<p>Hi Samantha,</p>\r\n<p>I mean the maximum length of the text entered into the column- i.e. zip code is 5 characters. I couldn't see a way to limit this.</p>",
    "PostedDate": "2009-06-19T10:17:57.497-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "203465",
    "ThreadId": "59952",
    "Html": "<p>Ok, I see.&nbsp; You should be able to set the&nbsp;MaxLength property&nbsp;through the EditingElementStyle on your DataGridTextColumn, like so:</p>\r\n<p><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&lt;</span></span></span><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\">DataGrid</span></span></span><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"> ItemsSource</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">=&quot;...</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&quot;</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&gt;<br></span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&nbsp; &lt;</span></span></span><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\">DataGrid.Columns</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&gt;<br></span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&nbsp;&nbsp;&nbsp; &lt;</span></span></span><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\">DataGridTextColumn</span></span></span><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"> Header</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">=&quot;Zip&quot;</span></span></span><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"> Binding</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">=&quot;{</span></span></span><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\">Binding</span></span></span><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"> ZipCode</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">}&quot;</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&gt;<br></span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;</span></span></span><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\">DataGridTextColumn.EditingElementStyle</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&gt;<br></span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;</span></span></span><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\">Style</span></span></span><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"> TargetType</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">=&quot;{</span></span></span><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\">x</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">:</span></span></span><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\">Type</span></span></span><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"> TextBox</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">}&quot;&gt;<br></span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;</span></span></span><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\">Setter</span></span></span><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"> Property</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">=&quot;MaxLength&quot;</span></span></span><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"><span style=\"font-family:Consolas;color:#ff0000;font-size:x-small\"> Value</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">=&quot;5&quot;/&gt;<br></span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/</span></span></span><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\">Style</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&gt;<br></span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/</span></span></span><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\">DataGridTextColumn.EditingElementStyle</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&gt;<br></span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&nbsp;&nbsp;&nbsp; &lt;/</span></span></span><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\">DataGridTextColumn</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&gt;<br></span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&nbsp; &lt;/</span></span></span><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\">DataGrid.Columns</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&gt;<br></span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&lt;/</span></span></span><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\"><span style=\"font-family:Consolas;color:#a31515;font-size:x-small\">DataGrid</span></span></span><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\"><span style=\"font-family:Consolas;color:#0000ff;font-size:x-small\">&gt;</span></span></span></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>Note, however, that this will only affect data that the end user enters.&nbsp; If you bind to a data which has more than 5 characters, the initial string will violate the MaxLength.&nbsp; I'm assuming that the initial data is probably correct since you're binding to a zip code field, but it's something to keep in mind.</p>\r\n<p>Another way to approach this is to&nbsp;apply a cell validation rule which checks the length of the field&nbsp;to the Binding on that column.&nbsp; This&nbsp;will give you an easy mechanism to flag the field if it's invalid.&nbsp; Here's an MSDN article which explains how to add a ValidationRule to a Binding: <a href=\"http://msdn.microsoft.com/en-us/library/system.windows.data.binding.validationrules.aspx\">http://msdn.microsoft.com/en-us/library/system.windows.data.binding.validationrules.aspx</a>.&nbsp;</p>\r\n<p>Thanks!<br>Samantha</p>",
    "PostedDate": "2009-06-19T11:33:26.447-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "203479",
    "ThreadId": "59952",
    "Html": "<p>Great, thanks Samantha!</p>\r\n<p>The style works great, though the ValidationRules could also be the way to go- I'll have to play around with both to see which way is best for us to go.</p>\r\n<p>Is there any way I could encapsulate the EditingElementStyle of the editing element into a dependency property (or some other type of property)?</p>\r\n<p>Thanks again for your help</p>",
    "PostedDate": "2009-06-19T12:06:26.393-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "204639",
    "ThreadId": "59952",
    "Html": "<p>Yes, you should be able to create a Style DP in the code&nbsp;behind and encapsulate your&nbsp;EditingElementStyle in that property and then just bind the EditingElementStyle in your DataGridColumn to that property.&nbsp; I'll warn you, though, that create Styles in the code behind is a little more painful that doing it in XAML, so you may want to just put your EditingElementStyle in a ResourceDictionary instead.</p>",
    "PostedDate": "2009-06-23T13:06:21.753-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "213798",
    "ThreadId": "59952",
    "Html": "<p>Samantha</p>\r\n<p>is there a other way to ensure that the user is not able to enter more than (or less than) N chars?</p>\r\n<p>I use the EditingElementStyle for validation visualization, which is common for all datagrids in my app</p>\r\n<p>But I want to define the MaxLength for each column separately</p>\r\n<p>So how can I accomplish this?</p>\r\n<p>Regards</p>\r\n<p>Klaus</p>",
    "PostedDate": "2009-07-20T07:07:37.947-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "213876",
    "ThreadId": "59952",
    "Html": "<p><span style=\"color:blue;font-size:9pt\">I did this using a dependency property,  then reference this property in the XAML for each column (by seeting  ColumnMaxLength=&quot;10&quot;. It works like a charm</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"color:blue;font-size:9pt\">&nbsp;</span></p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>\r\n\r\n<span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">readonly</span> DependencyProperty ColumnMaxLengthProperty =\r\n\r\n   DependencyProperty.RegisterAttached(      <span style=\"color:#A31515\">&quot;ColumnMaxLength&quot;</span>,\r\n      <span style=\"color:Blue\">typeof</span>(<span style=\"color:Blue\">string</span>),\r\n      <span style=\"color:Blue\">typeof</span>(Helper),\r\n      <span style=\"color:Blue\">new</span> PropertyMetadata(\r\n          <span style=\"color:Blue\">null</span>,\r\n          <span style=\"color:Blue\">new</span> PropertyChangedCallback(OnColumnMaxLengthChanged)));\r\n\r\n\r\n<span style=\"color:Blue\">private</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">void</span> OnColumnMaxLengthChanged(DependencyObject obj,\r\n                                            DependencyPropertyChangedEventArgs eventArg)\r\n{\r\n   <span style=\"color:Blue\">if</span> (!<span style=\"color:Blue\">string</span>.IsNullOrEmpty((<span style=\"color:Blue\">string</span>)eventArg.NewValue))\r\n   {\r\n      <span style=\"color:Blue\">if</span> (obj.GetType().IsSub<span style=\"color:Blue\">class</span><span style=\"color:MediumTurquoise\">Of(typeof(DataGridColumn)))\r\n      </span>{\r\n         DataGridTextColumn textCol = obj <span style=\"color:Blue\">as</span> DataGridTextColumn;\r\n\r\n\r\n         <span style=\"color:Blue\">if</span> (textCol != <span style=\"color:Blue\">null</span>)\r\n         {\r\n            <span style=\"color:Gray\">///</span><span style=\"color:Green\"> you have to copy the existing styles to a new one,</span>\r\n            <span style=\"color:Gray\">///</span><span style=\"color:Green\"> since the existing style is Sealed.                  </span>\r\n            Style style = textCol.EditingElementStyle;\r\n            Style newStyle = <span style=\"color:Blue\">new</span> Style();\r\n            <span style=\"color:Blue\">foreach</span> (Setter setter <span style=\"color:Blue\">in</span> style.Setters)\r\n            {\r\n               newStyle.Setters.Add(setter);\r\n            }\r\n \r\n            newStyle.Setters.Add(<span style=\"color:Blue\">new</span> Setter\r\n            {\r\n               Property=TextBox.MaxLengthProperty,\r\n               Value = Convert.ToInt32(eventArg.NewValue)});\r\n \r\n              textCol.EditingElementStyle = newStyle;\r\n         }\r\n      }\r\n      <span style=\"color:Blue\">else</span>\r\n      {\r\n         <span style=\"color:Blue\">throw</span> <span style=\"color:Blue\">new</span> InvalidOperationException(\r\n            <span style=\"color:#A31515\">&quot;The Helper.ColumnMaxLength attached property &quot;</span> +\r\n            <span style=\"color:#A31515\">&quot;can only be used in Grid Columns.&quot;</span>);\r\n      }\r\n   }\r\n}\r\n\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-07-20T10:02:29.663-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "214229",
    "ThreadId": "59952",
    "Html": "<p>CCusson15</p>\r\n<p>thanks for your help. I do not get this to run, maybe I am missing something (I am a beginner regarding WPF)</p>\r\n<p>I put the code you posted in my class &quot;Helpers&quot; which is contained in my wpf application project</p>\r\n<p>I use the following line of xaml</p>\r\n<p>&lt;dg:DataGridTextColumn Binding=&quot;{Binding Path=ParamValue, Mode=TwoWay}&quot; ColumnMaxLength=&quot;40&quot;&nbsp; EditingElementStyle=&quot;{StaticResource styTextBoxColumnStyleError}&quot; Header=&quot;{Loc C_ParamValue}&quot;/&gt;</p>\r\n<p>Maybe there is something moissing in the declaration part of my usercontrol?</p>\r\n<p>Regards</p>\r\n<p>Klaus</p>",
    "PostedDate": "2009-07-21T03:31:40.273-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "214242",
    "ThreadId": "59952",
    "Html": "<p>CCusson15</p>\r\n<p>sorry I forgot to mention the error:</p>\r\n<p>&nbsp; In the xaml editor: 'Property &quot;ColumnMaxLength&quot; not found on type &quot;DataGridTextColumn&quot;'</p>\r\n<p>Regards</p>\r\n<p>klaus</p>",
    "PostedDate": "2009-07-21T04:20:25.933-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "214290",
    "ThreadId": "59952",
    "Html": "<p>Hi Klaus,</p>\r\n<p>&nbsp;</p>\r\n<p>In your XAML, within the Page tag, you have to add an 'include' to the xmlnamespace of your helpers class, like this: (there should be some Microsoft ones in there already)</p>\r\n<pre><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\">&lt;font size=&quot;2&quot; color=&quot;#ff0000&quot;&gt;&lt;font size=&quot;2&quot; color=&quot;#ff0000&quot;&gt;<p>xmlns</p>&lt;/font&gt;&lt;/font&gt;</span>&lt;font size=&quot;2&quot; color=&quot;#ff0000&quot;&gt;<p>&nbsp;</p>&lt;/font&gt;</span><p><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">:</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\">UIHelper</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;clr-namespace:Core.UIHelper&quot;</span></span></p><p>&nbsp;</p><p>Then, in the DataGridTextColumn, you need to reference the entire name of your helper class, like this:</p></pre>\r\n<p>\r\n<p><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;\r\n<p>&lt;</p>\r\n&lt;/font&gt;&lt;/font&gt;</span>&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span>\r\n<p><span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">wpftk</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">:</span></span><span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">DataGridTextColumn</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\"> UIHelper</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">:</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\">DPs.ColumnMaxLength</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;7&quot;</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\"> IsReadOnly</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;True&quot; [more properties.......]</span></span></p>\r\n<p><span style=\"color:#0000ff\">Then it should work fine for you- you won't get that compiletime error</span></p>\r\n</p>\r\n</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-07-21T06:26:51.407-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "215483",
    "ThreadId": "59952",
    "Html": "<p>CCusson15</p>\r\n<p>&nbsp;</p>\r\n<p>thanks for the help, now it compiles</p>\r\n<p>But another problem arises: I already have a EditingElementStyle which is consumed by my datagridcols for displaying validation. It seems that you take that into account as you describe that the existing style is sealed, but adding the MaxLength leads to malfunctioning of my validation:</p>\r\n<p>I have a animation of an error sign, a red background of the cell with an error and a toolkit decribing the error.</p>\r\n<p>The animation is still there, but both the backgrounf and the toolkit is not changed in case of an error. Removing the MaxLength reanimates the validation visualization</p>\r\n<p>Maybe you can tell whats wrong from my xaml</p>\r\n<p>First the usercontrol snippet with the column definition:</p>\r\n<p>&lt;dg:DataGridTextColumn EditingElementStyle=&quot;{StaticResource styTextBoxColumnStyleError}&quot; Header=&quot;{Loc C_ModuleSeqNo}&quot; HeaderStyle=&quot;{StaticResource styHeaderFilterText}&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;dg:DataGridTextColumn.Binding&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Binding Path=&quot;ModuleSeqNo&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Binding.ValidationRules&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;validation:CellDataInfoValidationRule ValidationStep=&quot;UpdatedValue&quot;/&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Binding.ValidationRules&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Binding&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/dg:DataGridTextColumn.Binding&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/dg:DataGridTextColumn&gt;</p>\r\n<p>Second my style &quot;styTextBoxColumnStyleError&quot;:</p>\r\n<p>&lt;Style x:Key=&quot;styTextBoxColumnStyleError&quot; TargetType=&quot;{x:Type TextBox}&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Style.Triggers&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Trigger Property=&quot;Validation.HasError&quot; Value=&quot;True&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter Property=&quot;Background&quot; Value=&quot;LightSalmon&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Setter&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter Property=&quot;ToolTip&quot; Value=&quot;{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors)[0].ErrorContent}&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Setter&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Trigger&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Style.Triggers&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter Property=&quot;Validation.ErrorTemplate&quot; Value=&quot;{StaticResource ctErrorIcon_ControlTemplate}&quot;/&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Style&gt;</p>\r\n<p>Interestingly the animation defined in ctErrorIcon_ControlTemplate is working, but the setting to &quot;LightSalmon&quot; and the output of the tooltip is missing</p>\r\n<p>Any help would be really appreciated</p>\r\n<p>Regards</p>\r\n<p>Klaus</p>",
    "PostedDate": "2009-07-23T14:16:51.627-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "215488",
    "ThreadId": "59952",
    "Html": "<p>CCusson15</p>\r\n<p>I got it</p>\r\n<p>I had to copy the triggers as well, now it works</p>\r\n<p>Thanks for your support</p>\r\n<p>Klaus</p>",
    "PostedDate": "2009-07-23T14:42:35.04-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "217983",
    "ThreadId": "59952",
    "Html": "<blockquote style=\"border:solid .1em #ccc;font-style:italic;margin:.25em 1em 0 1em;padding:0 .25em 0 .25em\"><strong>CCusson15 wrote:</strong><br>\r\n<p>Hi Klaus,</p>\r\n<p>&nbsp;</p>\r\n<p>In your XAML, within the Page tag, you have to add an 'include' to the xmlnamespace of your helpers class, like this: (there should be some Microsoft ones in there already)</p>\r\n<pre><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\">&lt;font size=&quot;2&quot; color=&quot;#ff0000&quot;&gt;&lt;font size=&quot;2&quot; color=&quot;#ff0000&quot;&gt;<p>xmlns</p>&lt;/font&gt;&lt;/font&gt;</span>&lt;font size=&quot;2&quot; color=&quot;#ff0000&quot;&gt;<p>&nbsp;</p>&lt;/font&gt;</span><p><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">:</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\">UIHelper</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;clr-namespace:Core.UIHelper&quot;</span></span></p><p>&nbsp;</p><p>Then, in the DataGridTextColumn, you need to reference the entire name of your helper class, like this:</p></pre>\r\n<p>&nbsp;</p>\r\n<p><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;\r\n<p>&lt;</p>\r\n&lt;/font&gt;&lt;/font&gt;</span>&lt;font size=&quot;2&quot; color=&quot;#0000ff&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span></p>\r\n<p><span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">wpftk</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">:</span></span><span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">DataGridTextColumn</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\"> UIHelper</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">:</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\">DPs.ColumnMaxLength</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;7&quot;</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\"> IsReadOnly</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;True&quot; [more properties.......]</span></span></p>\r\n<p><span style=\"color:#0000ff\">Then it should work fine for you- you won't get that compiletime error</span></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</blockquote>\r\n<p>I've been trying to use this interesting approach, but &quot;<span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\">&nbsp;</span></span>UIHelper:Helper.ColumnMaxLength<span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\">&nbsp;</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">=&quot;7&quot;</span></span>&quot; gives me this 2 errors:</p>\r\n<p>Error&nbsp;&nbsp; &nbsp;1&nbsp;&nbsp; &nbsp;The attachable property 'ColumnMaxLength' was not found in type 'Helper'.</p>\r\n<p>Error&nbsp;&nbsp; &nbsp;2&nbsp;&nbsp; &nbsp;The property 'Helper.ColumnMaxLength' does not exist in XML namespace 'clr-namespace:confapa.Helper'.</p>\r\n<p>I've defined xmlns:UIHelper=&quot;clr-namespace:confapa.Helper&quot; in the Page Tag and paste your code in a class:</p>\r\n<p>using System;<br>using System.Collections.Generic;<br>using System.Linq;<br>using System.Text;<br>using System.Windows;<br>using System.Windows.Controls;<br>using Microsoft.Windows.Controls;</p>\r\n<p>namespace confapa.Helper<br>{<br>&nbsp;&nbsp;&nbsp; class Helper<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static readonly DependencyProperty ColumnMaxLengthProperty =<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DependencyProperty.RegisterAttached(&quot;ColumnMaxLength&quot;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; typeof(string),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; typeof(Helper),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new PropertyMetadata(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; null,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new PropertyChangedCallback(OnColumnMaxLengthChanged)));<br><br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private static void OnColumnMaxLengthChanged(DependencyObject obj,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DependencyPropertyChangedEventArgs eventArg)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!string.IsNullOrEmpty((string)eventArg.NewValue))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (obj.GetType().IsSubclassOf(typeof(DataGridColumn)))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataGridTextColumn textCol = obj as DataGridTextColumn;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (textCol != null)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Style style = textCol.EditingElementStyle;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Style newStyle = new Style();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (Setter setter in style.Setters)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; newStyle.Setters.Add(setter);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; newStyle.Setters.Add(new Setter<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Property = TextBox.MaxLengthProperty,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Value = Convert.ToInt32(eventArg.NewValue)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; });<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; textCol.EditingElementStyle = newStyle;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new InvalidOperationException(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;The Helper.ColumnMaxLength attached property &quot; +<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;can only be used in Grid Columns.&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; }</p>\r\n<p>It seems I can't refer the property from the XAML, could anyone tell me what am I doing wrong?</p>\r\n<p>Thanks</p>",
    "PostedDate": "2009-07-31T06:00:15.847-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "219599",
    "ThreadId": "59952",
    "Html": "<p>I solved it...forgot to do the get-set functions...</p>",
    "PostedDate": "2009-08-05T01:36:38.983-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]