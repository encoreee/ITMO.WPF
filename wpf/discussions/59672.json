[
  {
    "Id": "202041",
    "ThreadId": "59672",
    "Html": "<p><span style=\"color:#008000;font-size:x-small\"><span style=\"color:#008000;font-size:x-small\">\r\n<p>By default the datagrid creates a <span style=\"color:#008000;font-size:x-small\"><span style=\"color:#008000;font-size:x-small\">{NewItem Placeholder} wich I want.</span></span></p>\r\n<p><span style=\"color:#008000;font-size:x-small\"><span style=\"color:#008000;font-size:x-small\">But if I bind another control to the same Observable collection I get that holder also And I can not get rid of it.</span></span></p>\r\n<p><span style=\"color:#008000;font-size:x-small\"><span style=\"color:#008000;font-size:x-small\">Does anyone know a solution for this problem</span></span></p>\r\n</span></span></p>",
    "PostedDate": "2009-06-16T07:37:52.397-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "202201",
    "ThreadId": "59672",
    "Html": "<p>&nbsp;</p>\r\n<p>\r\n<p>\r\n<p><span style=\"font-size:x-small\">\r\n<p><span style=\"font-size:x-small\">Hi khendriks,</span></p>\r\n&lt;font size=&quot;2&quot;&gt;\r\n<p>\r\n<p>datagrid.ItemsSource =</p>\r\n</p>\r\n&lt;/font&gt;</span>\r\n<p>\r\n<p><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">new</span></span><span style=\"font-size:x-small\"> </span><span style=\"font-size:x-small;color:#2b91af\"><span style=\"font-size:x-small;color:#2b91af\">ObservableCollection();</span></span></p>\r\n</p>\r\n</p>\r\n</p>\r\n<p><span style=\"font-size:x-small\">listbox.ItemsSource = </span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">new</span></span><span style=\"font-size:x-small\"> </span><span style=\"font-size:x-small;color:#2b91af\"><span style=\"font-size:x-small;color:#2b91af\">CollectionView</span></span><span style=\"font-size:x-small\">(datagrid.ItemsSource);</span></p>\r\n<p><span style=\"font-size:x-small\">With the above piece of code, you are binding to the same ObservableCOllection but creating different CollectionViews. The second CollectionView will not show NewItemPlaceHolder by default. Hope this works for you.</span></p>\r\n<p>&nbsp;</p>\r\n<p>Thanks,</p>\r\n<p>Keerthi</p>\r\n<p>&nbsp;</p>\r\n</p>",
    "PostedDate": "2009-06-16T14:10:58.287-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "230446",
    "ThreadId": "59672",
    "Html": "<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\"><span style=\"color:#000000\">If you use a DataTable object, you can filter the rows with linq and verify if the primary key is null</span><br><br>var</span> view = <span style=\"color:Blue\">from</span> row <span style=\"color:Blue\">in</span> dt.AsEnumerable()\r\n           <span style=\"color:Blue\">where</span> !<span style=\"color:Blue\">string</span>.IsNullOrEmpty(row.Field&lt;<span style=\"color:Blue\">string</span>&gt;(<span style=\"color:#A31515\">&quot;key&quot;</span>))\r\n           <span style=\"color:Blue\">select</span> row;\r\n\r\ndg.ItemsSource = view.AsDataView();\r\n</pre>\r\n</div>\r\n</p>",
    "PostedDate": "2009-09-02T16:18:44.93-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]