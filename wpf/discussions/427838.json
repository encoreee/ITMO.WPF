[
  {
    "Id": "980977",
    "ThreadId": "427838",
    "Html": "\r\n<p>Hello,</p>\r\n<p>I'm new to WPF and XAML, but have done a lot of Windows Forms stuff. Of course, that won't be a ton of help with XAML. :)</p>\r\n<p>I have created a DataGrid that has a fixed number of columns. I've created a WPF user control that has a couple of string properties and an integer property for\r\n<em>index, </em>where <em>index</em> will correspond to the column number that the user control should be in. I'm thinking that I will pull data from a database table and bind it to the DataGrid, but I need a XAML structure that supports a scenario in which\r\n each row in my datasource is a cell, and not a new row in the grid.</p>\r\n<p>For example,&nbsp;</p>\r\n<p>1<span style=\"white-space:pre\"> </span>2<span style=\"white-space:pre\"> </span>\r\n3<span style=\"white-space:pre\"> </span>4<span style=\"white-space:pre\"> </span>5</p>\r\n<p>6<span style=\"white-space:pre\"> </span>7<span style=\"white-space:pre\"> </span>\r\n8<span style=\"white-space:pre\"> </span>9<span style=\"white-space:pre\"> </span>10</p>\r\n<p>I'm adding my user control to the grid now, but I'm binding using a generic list. With each list item, a new row is created instead of another cell on the same row. Anyone have ideas on where I might start on a construct like this?</p>\r\n<p>Thanks!</p>\r\n<p>SD</p>\r\n<p>UPDATED: So this is what lack of sleep will do to you...Switched to data table, applied indexes and sorting, problem solved.</p>\r\n",
    "PostedDate": "2012-12-27T12:25:47.973-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]