[
  {
    "Id": "131294",
    "ThreadId": "39567",
    "Html": "Hi,<br>\r\n<br>\r\nI have a DataGrid which contains a number of columns that perform validation on exception:<br>\r\n<br>\r\n&lt;dg:DataGrid.Columns&gt;<br>\r\n&nbsp;&nbsp;&nbsp; &lt;dg:DataGridTextColumn Header=&quot;Name&quot; Binding=&quot;{Binding Path=Name, ValidatesOnExceptions=True}&quot;/&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br>\r\n&nbsp;&nbsp;&nbsp; &lt;dg:DataGridTextColumn Header=&quot;Age&quot; Binding=&quot;{Binding Path=Age, ValidatesOnExceptions=True}&quot;/&gt;<br>\r\n&lt;/dg:DataGrid.Columns&gt;<br>\r\n<br>\r\nWhen a validation error occurs I can inspect the visual tree&nbsp; and see that the Validation.HasError attached property is set to true for the TextBox that contains erroneous data. However this is not reflected at the DataGrid row level. <br>\r\n<br>\r\nIf I add a 'dummy' validation rule at the row level:<br>\r\n<br>\r\n&lt;dg:DataGrid.RowValidationRules&gt;<br>\r\n&nbsp;&nbsp;&nbsp; &lt;local:RowDummyValidation ValidationStep=&quot;UpdatedValue&quot; /&gt;<br>\r\n&lt;/dg:DataGrid.RowValidationRules&gt;<br>\r\n<br>\r\nWhich always returns a positive result:<br>\r\n<br>\r\npublic override ValidationResult Validate(object value, System.Globalization.CultureInfo cultureInfo)<br>\r\n{<br>\r\n&nbsp;&nbsp;&nbsp; return ValidationResult.ValidResult;<br>\r\n}<br>\r\n<br>\r\nWhen a validation error occurs I can now see that the Validation.HasError property is also set at the row level, and as a result the validation error indicator '!' is displayed.<br>\r\n<br>\r\nMy question is, why do I have to create a dummy validation rule and assocaite it with the row in order to have Validation.HasError&nbsp; set at teh row level and for the error indicator to be displayed? Is this a bug/feature or am I doing something wrong?<br>\r\n<br>\r\nColin E. <br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n\r\n",
    "PostedDate": "2008-11-10T02:17:44.067-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "131335",
    "ThreadId": "39567",
    "Html": "This is by design.  They are two different types of validations and require separate ways to declare intention.  The validation rules you set at the cell level affect item-level validation but it is sort of like an opt-in thing.  \r\n",
    "PostedDate": "2008-11-10T05:37:58.417-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]