[
  {
    "Id": "133131",
    "ThreadId": "40119",
    "Html": "<br>\r\nHi, <br>\r\n<br>\r\nI'd like to add a button column to a datagrid, with the Button's visibility bound to one of Item's properties. <br>\r\n<br>\r\nPlease does anyone know how to do this, and also how to access the row's Item from inside the Button's Click event handler?<br>\r\n<br>\r\nThanks,<br>\r\n<br>\r\nAlonzo<br>\r\n",
    "PostedDate": "2008-11-17T07:53:46.953-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "133391",
    "ThreadId": "40119",
    "Html": "<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#a31515\">&lt;dg</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">DataGridTemplateColumn</span><span style=\"font-size:13px;color:#ff0000\"> Header</span><span style=\"font-size:13px;color:#0000ff\">=&quot;Edit Row&quot;&gt;<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">    &lt;</span><span style=\"font-size:13px;color:#a31515\">dg</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">DataGridTemplateColumn.CellTemplate</span><span style=\"font-size:13px;color:#0000ff\">&gt;<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">        &lt;</span><span style=\"font-size:13px;color:#a31515\">DataTemplate</span><span style=\"font-size:13px;color:#0000ff\">&gt;<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">            &lt;</span><span style=\"font-size:13px;color:#a31515\">Button</span><span style=\"font-size:13px;color:#ff0000\"> Content</span><span style=\"font-size:13px;color:#0000ff\">=&quot;Edit&quot;</span><span style=\"font-size:13px;color:#ff0000\"> Click</span><span style=\"font-size:13px;color:#0000ff\">=&quot;EditButton_Click&quot; /&gt;<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">        &lt;/</span><span style=\"font-size:13px;color:#a31515\">DataTemplate</span><span style=\"font-size:13px;color:#0000ff\">&gt;<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">    &lt;/</span><span style=\"font-size:13px;color:#a31515\">dg</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">DataGridTemplateColumn.CellTemplate</span><span style=\"font-size:13px;color:#0000ff\">&gt;</span><span style=\"font-size:13px;color:#a31515\"> <br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">&lt;/</span><span style=\"font-size:13px;color:#a31515\">dg</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">DataGridTemplateColumn</span><span style=\"font-size:13px;color:#0000ff\">&gt;</span><span style=\"font-size:13px;color:#a31515\">\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>private</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">void</span><span style=\"font-size:13px\"> EditButton_Click(</span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> sender, </span><span style=\"font-size:13px;color:#2b91af\">RoutedEventArgs</span><span style=\"font-size:13px\"> e)<br>\r\n{<br>\r\n</span><span style=\"font-size:13px;color:#008000\">    //Open the current row for edit<br>\r\n</span><span style=\"font-size:13px\">    DataGrid_Standard.BeginEdit();<br>\r\n}</span><br>\r\n<br>\r\nIn this code I directly use my DataGrid instance but if you really wanted to find the current item on the row you can walk up the tree starting with the sender and look for DataGridRow.  When you find that you will be able to have access to the row Item.<br>\r\n</p>\r\n",
    "PostedDate": "2008-11-18T05:45:18.753-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "134602",
    "ThreadId": "40119",
    "Html": "<br>\r\nThanks, vinsibal, that's very helpful.&nbsp; I was able to get a button column quite easily with the DataTemplate you described.<br>\r\n<br>\r\nNow all I need is a way to bind the visiblilty of the button to a bool property on the Item.<br>\r\n<br>\r\nI think it would start something like this<br>\r\n<p><span style=\"font-family:'courier new'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataTrigger t = new DataTrigger();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Binding tbind = new Binding();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t.Binding = tbind;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tbind.RelativeSource = new RelativeSource();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tbind.RelativeSource.AncestorLevel = 1;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tbind.RelativeSource.AncestorType = typeof(myItemType);</span></p>\r\nIs this the right idea, or is there an easier way?<br>\r\n<br>\r\nAlonzo<br>\r\n<br>\r\n",
    "PostedDate": "2008-11-23T12:14:00.71-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "137234",
    "ThreadId": "40119",
    "Html": "Were you able to successfully do the binding?  I would think you would need to correct data context.  Jaime wrote this nice post about how to do that, <a href=\"http://blogs.msdn.com/jaimer/archive/2008/11/22/forwarding-the-datagrid-s-datacontext-to-its-columns.aspx\">http://blogs.msdn.com/jaimer/archive/2008/11/22/forwarding-the-datagrid-s-datacontext-to-its-columns.aspx</a>.\r\n",
    "PostedDate": "2008-12-03T05:44:48.607-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "137259",
    "ThreadId": "40119",
    "Html": "Hi again, thanks for taking an interest.<br>\r\n<br>\r\nAs I am writing a generic GUI class, I'm trying to do everything in code.&nbsp; At first I was stumped by not knowing how to call SetBinding on a DataTemplate element.<br>\r\n<br>\r\nAfter using the datatemplate and datagridtemplatecolumn as you suggested, I was able to bind back to item properties using a data trigger.&nbsp; For example, to set the foreground colour of the button,<br>\r\nI used a binding like this, where Status is the Item property I'm looking for.<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataTrigger t = new DataTrigger();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Binding b = new Binding(&quot;Item.Status&quot;);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.RelativeSource = new RelativeSource(RelativeSourceMode.FindAncestor);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.RelativeSource.AncestorType = typeof(DataGridRow);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t.Binding = b;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.UpdateSourceTrigger = UpdateSourceTrigger.PropertyChanged;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t.Value = &quot;Error&quot;;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t.Setters.Add<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (new Setter(Control.ForegroundProperty, Brushes.Red));<br>\r\n<br>\r\nThen I applied the datatrigger to the CellStyle of the column; this worked great.<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Style st = new Style(typeof(DataGridCell));<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; st.Triggers.Add(t);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myColumn.CellStyle = st;<br>\r\n<br>\r\nI couldn't set the click handler for the datatemplate button directly the way you suggested, but I was able to cheat using a button style.<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EventSetter es = new EventSetter(Button.ClickEvent,<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new RoutedEventHandler(Button_Click));<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Style stb = new Style(typeof(Button));<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stb.Setters.Add(es);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myDataGrid.Resources.Add(typeof(Button), stb);<br>\r\n<br>\r\nAnd then I used the datagrid reference as you suggested to get the row whose button was pressed in the Button_Click event handler.&nbsp; If I had more than 1 button column, I could still use this as I could get the column as well.<br>\r\n<br>\r\nI hope all this might help someone else.<br>\r\n<br>\r\nAlonzo &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br>\r\n<br>\r\n<br>\r\n<br>\r\n",
    "PostedDate": "2008-12-03T06:33:46.267-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]