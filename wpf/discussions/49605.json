[
  {
    "Id": "166043",
    "ThreadId": "49605",
    "Html": "I am using a WPF Datagrid and have set up a converter to set the background/foreground colours of individual cells based on the value they contain (from an SQL generated datatable).<br>\r\nIn order to get some decent sort of speed, I have row and column virtualization set to true, (if I don't, the change of sort on the column and the scrolling lag is unbearably slow and wouldn't be accepted by the client).<br>\r\nThe only problem I have is that sometimes when I scroll around the grid, the colours displayed are wrong, if I scroll out and back in to that area, sometimes they correct themselves.<br>\r\nAs the colours are representing critical data, this is obviously not good.<br>\r\n<br>\r\nI did try putting the datagrid into a scrollviewer, the problem there was one had to scroll to the bottom to get the horizontal scrollbar (my grid has 2 fixed columns on the left), plus, in order to change sorts on the column headers, you have to then scroll back to the top.<br>\r\n<br>\r\nIs there a known fix to prevent the colours getting messed up? I have read about loadingrow and unloading row, but that seems to be related to a whole row template rather than reacting to the individual cells (datatable fields).<br>\r\n<br>\r\nI presume this is very much a known problem so I am hoping it also has a known solution, apart from not using virtualisation, which as I stated, makes the speed of the grid, to all intents and purposes, unusable.<br>\r\n<br>\r\nI have uploaded a full example project here:<br>\r\n<br>\r\nhttp://www.kaisoft-gfx.co.uk/workarea/RotaEnqTester.zip<br>\r\n<br>\r\nThe view example shown is not uncommon, likely to have 90 columns by anything upto 300 rows.<br>\r\nI'd be grateful if anyone can assist.<br>\r\n<br>\r\nPS - I had tried the Xceed datagrid but this seems to suffer the same problems and if anything, the display lag is even slower. <br>\r\n<br>\r\n\r\n",
    "PostedDate": "2009-03-09T05:40:30.367-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "166187",
    "ThreadId": "49605",
    "Html": "Hi TerianCS,<br>\r\n<br>\r\nI see that in your style of DataGridCell you are binding Foreground and Background to the cell itself and its DataRow. When column virtualization and recycling is turned on cells are used across different columns of same row. Lets consider your case...<br>\r\n<br>\r\n<ol>\r\n    <li>A style gets applied to a cell based on itself and its DataRow.</li>\r\n    <li>Now when you scroll, this cell gets recylced and used with other columns of same row</li>\r\n    <li>None of the two bindings got affected. Its the same DataRow and its the same cell.</li>\r\n    <li>Hence cell uses same previous Foreground and Background.</li>\r\n</ol>\r\n<p>Trying binding to Column property of cell instead of binding to cell itself (I see that you are using cell only to get column). In fact you can bind to Column.SortMemeberPath directly.</p>\r\n",
    "PostedDate": "2009-03-09T11:10:35.313-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "166396",
    "ThreadId": "49605",
    "Html": "Forgive me for sounding a bit dense, but am I right in thinking that the way i'm doing it now is very much overkill and is in fact having an impact on the performance?<br>\r\nI must admit I put the code together based on snippets I'd seen on the web so assumed that was the 'logical' way.<br>\r\nEven though I am needing to react to the cell contents, I just use the row and column information, not the cell?<br>\r\n<br>\r\nIf it's not too much to ask, would it be possible to show me a snippet of code please? Many thanks for your time, this will be very important to us but so far we are very much at the sharp end of the learning curve!<br>\r\n<br>\r\nIs this right for the XAML?<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter Property=&quot;Foreground&quot;&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter.Value&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;MultiBinding Converter=&quot;{StaticResource myFGColor}&quot; &gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;MultiBinding.Bindings&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Binding Path=&quot;Column.SortMemberPath&quot;&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Binding&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Binding Path=&quot;Row&quot;&gt;&lt;/Binding&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/MultiBinding.Bindings&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/MultiBinding&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Setter.Value&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Setter&gt;<br>\r\n<br>\r\nEvery time I try to use it, I get a '{DependencyProperty.UnsetValue}' not the sortmemberpath or even if I use the &lt;Binding Path=&quot;Column&quot;&gt;.<br>\r\n<br>\r\n<br>\r\n\r\n",
    "PostedDate": "2009-03-10T02:27:24.73-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "166480",
    "ThreadId": "49605",
    "Html": "                &lt;Setter Property=&quot;Foreground&quot;&gt;<br>\r\n                    &lt;Setter.Value&gt;<br>\r\n                        &lt;MultiBinding Converter=&quot;{StaticResource myFGColor}&quot; &gt;<br>\r\n                            &lt;MultiBinding.Bindings&gt;<br>\r\n                                &lt;Binding<strong> RelativeSource=&quot;{RelativeSource Self}&quot; </strong>Path=&quot;Column.SortMemberPath&quot;&gt;<br>\r\n                                &lt;/Binding&gt;<br>\r\n                                &lt;Binding Path=&quot;Row&quot;&gt;&lt;/Binding&gt;<br>\r\n                            &lt;/MultiBinding.Bindings&gt;<br>\r\n                        &lt;/MultiBinding&gt;<br>\r\n                    &lt;/Setter.Value&gt;<br>\r\n                &lt;/Setter&gt;<br>\r\n<br>\r\nThe above should work. (Note that I didnt try this with your application but I am hoping that it would work).\r\n",
    "PostedDate": "2009-03-10T09:08:34.82-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "166814",
    "ThreadId": "49605",
    "Html": "Many thanks!<br>\r\nI had found that PATH=&quot;(Column)&quot; worked but this is better as it reduces a step in the converters.<br>\r\n<br>\r\nI am still getting a bit of failure to refresh the view properly, but that is on the columnheader and as maximising &amp; restoring the view seems to sort it out, I think it may be just a display issue as just shifting the scrollbar never fixed the cell colours but does with this.<br>\r\n",
    "PostedDate": "2009-03-11T02:39:50.327-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]