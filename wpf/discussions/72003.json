[
  {
    "Id": "245738",
    "ThreadId": "72003",
    "Html": "<p>I'm trying to improve the vertical scrolling performance in the DataGrid I have, and have just about simplified the template as much as I can without totally sacrificing usability. I've read that alot of the performance cost can be due to DataBinding, my classes are generated from a WCF proxy, and implement INotifyPropertyChanged, and I'm using an ObservableCollection, but I'm wondering if I would get a noticeable perf increase if I created new wrapper items that exposed DependencyProperty's off of DependencyObjects for my bound items.</p>\r\n<p>MyItem</p>\r\n<p style=\"padding-left:30px\">Age<br>Date</p>\r\n<p>&nbsp;</p>\r\n<p>MyNewItem : DependencyObject</p>\r\n<p style=\"padding-left:30px\">Age - Dp<br>Date - Dp</p>",
    "PostedDate": "2009-10-14T13:25:17.43-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "258393",
    "ThreadId": "72003",
    "Html": "<p>How is your solution comming, I have just started using the data grid, and with 1000 rows and databinding to an object, I am trying to find how to improve the performance of the vertical scrolling.</p>",
    "PostedDate": "2009-11-18T11:28:44.09-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "258406",
    "ThreadId": "72003",
    "Html": "<p>I punted, it was too much trouble for what seemed like too little results. I enabled column virtualization and tried to simplify my template, not using any alternation indexes anymore. Performance is acceptable with &gt;5000 items now, with about 50 columns all using the template column type. I also saw noticeable perf improvements in the .NET 4.0 version, but of course I can't push that to a production environment yet. Still I think there is more that should be able to be done.</p>",
    "PostedDate": "2009-11-18T12:07:12.283-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]