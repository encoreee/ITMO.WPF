[
  {
    "Id": "521344",
    "ThreadId": "234531",
    "Html": "\r\n<p>Hi,&nbsp;</p>\r\n<p><span style=\"white-space:pre\">&nbsp;</span>I have an issue when I try to use datagrid.items.add() to add items from one datagrid to another.&nbsp;Basically I have two data grids acting in a master slave relationship. The First DataGrid1 is used to display\r\n automatically generated&nbsp;columns&nbsp;and rows.&nbsp;The second datagrid, DataGrid2 will display the DataGrid1.SelectedItems when a specific button is clicked. Each time the button is clicked I'd like to have the selected items from DataGrid1 stay in DataGrid2\r\n and each time the button is clicked more items get added to DataGrid2. I have been able to complete most of my requirements with the exception of the ability to edit cells on DataGrid2. When I double click a cell in DataGrid2 I get an&nbsp;exception that says\r\n &quot;EditItem' is not allowed for this view&quot;. I have read a lot of posts about adding data to a ObservableCollection, ListCollectionView and so on but either I can not implement them in the correct manner or there not working for my situation. My code is as follows\r\n and by the way thx in advance&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<pre><strong>MainWindow.xaml</strong></pre>\r\n<pre><pre>&lt;Window x:Class=&quot;WpfApplication1.MainWindow&quot;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;</pre>\r\n<pre>xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;&nbsp;&nbsp; &nbsp; &nbsp;</pre>\r\n<pre> &nbsp;xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;</pre>\r\n<pre>&nbsp;Title=&quot;MainWindow&quot; Height=&quot;350&quot; Width=&quot;525&quot;&gt;&nbsp;&nbsp;&nbsp;</pre>\r\n<pre>&nbsp;&lt;Grid&gt;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;</pre>\r\n<pre>&lt;DataGrid AutoGenerateColumns=&quot;False&quot; Height=&quot;77&quot; HorizontalAlignment=&quot;Left&quot; Margin=&quot;27,12,0,0&quot; Name=&quot;dataGrid1&quot; VerticalAlignment=&quot;Top&quot; Width=&quot;464&quot; /&gt;</pre>\r\n<pre>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&lt;Button Content=&quot;AddRow&quot; Height=&quot;23&quot; HorizontalAlignment=&quot;Left&quot; Margin=&quot;27,107,0,0&quot; Name=&quot;button1&quot; VerticalAlignment=&quot;Top&quot; Width=&quot;75&quot; Click=&quot;button1_Click&quot; /&gt;&nbsp;</pre>\r\n<pre>&nbsp; &nbsp; &nbsp; &nbsp;&lt;DataGrid AutoGenerateColumns=&quot;False&quot; Height=&quot;140&quot; HorizontalAlignment=&quot;Left&quot; Margin=&quot;27,159,0,0&quot; Name=&quot;dataGrid2&quot; VerticalAlignment=&quot;Top&quot; Width=&quot;464&quot; /&gt;&nbsp;&nbsp;&nbsp;</pre>\r\n<pre>&nbsp;&lt;/Grid&gt;</pre>\r\n<pre>&lt;/Window&gt;<br></pre>\r\n<pre><br></pre>\r\n<strong>Small Class (latlonobj.cs): </strong>&nbsp;</pre>\r\n<pre>using System;</pre>\r\n<pre>using System.Collections.Generic;</pre>\r\n<pre>using System.Linq;</pre>\r\n<pre>using System.Text;&nbsp;</pre>\r\n<pre>namespace WpfApplication1{    class latlonobj   &nbsp;</pre>\r\n<pre>{        public string name { get; set; }        public double Lat { get; set; }      &nbsp;</pre>\r\n<pre> public double Lon { get; set; }    }}\r\n\r\n<br></pre>\r\n<pre><strong>C Sharp (MainWindow.xaml.cs):</strong>\r\n\r\nusing System;</pre>\r\n<pre>using System.Collections.Generic;</pre>\r\n<pre>using System.Linq;</pre>\r\n<pre>using System.Text;</pre>\r\n<pre>using System.Windows;</pre>\r\n<pre>using System.Windows.Controls;</pre>\r\n<pre>using System.Windows.Data;</pre>\r\n<pre>using System.Windows.Documents;</pre>\r\n<pre>using System.Windows.Input;</pre>\r\n<pre>using System.Windows.Media;</pre>\r\n<pre>using System.Windows.Media.Imaging;</pre>\r\n<pre>using System.Windows.Navigation;</pre>\r\n<pre>using System.Windows.Shapes;</pre>\r\n<pre>namespace WpfApplication1</pre>\r\n<pre>{    ///     /// Interaction logic for MainWindow.xaml    ///    &nbsp;</pre>\r\n<pre>public partial class MainWindow : Window&nbsp;</pre>\r\n<pre>   {        public MainWindow()        {            InitializeComponent();            dataGrid1.ItemsSource = idata;                    }\r\n        private void button1_Click(object sender, RoutedEventArgs e)       &nbsp;</pre>\r\n<pre>{            foreach (latlongobj item in dataGrid1.SelectedItems)            {                dataGrid2.Items.Add(item);            }\r\n        }    }}&lt;/button&gt;</pre>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2010-11-12T16:24:18.183-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]