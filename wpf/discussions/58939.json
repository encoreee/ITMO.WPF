[
  {
    "Id": "199567",
    "ThreadId": "58939",
    "Html": "<p>&nbsp;Hi,</p>\r\n<p>&nbsp;&nbsp; I'm using the datagrid provided by the WPF Toolkit. Below I have pated a sample XAML that I use to create a simple datagrid with just one column. To my suprise event though I have just one column another column is automatically added. Anything I'm missing? Or, is it a bug?</p>\r\n<p>&nbsp;</p>\r\n<p>\r\n<p>&lt;Page x:Class=&quot;DragDrop_ListBoxToDatagrid.Page1&quot;</p>\r\n<p>&nbsp;&nbsp; &nbsp;xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</p>\r\n<p>&nbsp;&nbsp; &nbsp;xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</p>\r\n<p>&nbsp;&nbsp; &nbsp;xmlns:toolkit=&quot;http://schemas.microsoft.com/wpf/2008/toolkit&quot;</p>\r\n<p>&nbsp;&nbsp; &nbsp;xmlns:local=&quot;clr-namespace:DragDrop_ListBoxToDatagrid&quot;</p>\r\n<p>&nbsp;&nbsp; &nbsp;Title=&quot;Page1&quot;&gt;</p>\r\n<p>&nbsp;&nbsp; &nbsp;&lt;StackPanel&gt;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&lt;ListBox local:DragAndDrop.DragEnabled=&quot;true&quot; Name=&quot;lstCustNames&quot;&gt;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;ListBox.ItemTemplate&gt;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;DataTemplate&gt;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;StackPanel&gt;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;TextBlock Text=&quot;{Binding Name}&quot; /&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/StackPanel&gt;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/DataTemplate&gt;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/ListBox.ItemTemplate&gt;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&lt;/ListBox&gt;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&lt;toolkit:DataGrid Name=&quot;dgCustNames&quot;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;AutoGenerateColumns=&quot;True&quot;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;local:DragAndDrop.DropEnabled=&quot;true&quot;&gt; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;toolkit:DataGrid.Columns&gt;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;toolkit:DataGridTextColumn Header=&quot;Customer Name&quot;&nbsp;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Binding=&quot;{Binding Name}&quot; /&gt; &nbsp; &nbsp;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/toolkit:DataGrid.Columns&gt;</p>\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&lt;/toolkit:DataGrid&gt;</p>\r\n<p>&nbsp;&nbsp; &nbsp;&lt;/StackPanel&gt;</p>\r\n<p>&lt;/Page&gt;</p>\r\n</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks,</p>\r\n<p>Jithu</p>",
    "PostedDate": "2009-06-09T09:11:59.717-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "199687",
    "ThreadId": "58939",
    "Html": "<p>Hi Jithu,</p>\r\n<p>I think what's going on is that you have defined one column in the Columns collection and have also set AutoGenerateColumns to true, which will cause DataGrid to generate a column for each field in your data and append it to the end of the collection, and this is where the second column is coming from.&nbsp; If you set AutoGenerateColumns to false, this should solve your problem.&nbsp;</p>\r\n<p>In general, there are three approaches which you could take when adding columns to your DataGrid:</p>\r\n<p>1) Use autogeneration exclusively.&nbsp; This is helpful for demo scenarios or prototyping when you just want to get up and running quickly, or when you have a smaller data set and you know you want to have a column in the grid&nbsp;to represent&nbsp;each field in the data.&nbsp; If you just need to make some minor changes to the column collection as it's generated, you can hook into the autogeneration events to do things like cancel the creation of a certain column or change the column type of a certain column before it's created.</p>\r\n<p>2) Define your columns explicitly.&nbsp; Most production applications will probably go this route since it provides the most control over the columns collection.&nbsp; In this case, you want to set AutoGenerateColumns to false and then define your columns either in the XAML or in the code behind.&nbsp; This option is best suited for complex grids, especially if you're creating custom column types using template columns or want to set different width behaviors on each column.</p>\r\n<p>3) Use a combination of the above.&nbsp; This is the least common scenario, but might be useful if you want columns for each field in your data source plus some additional columns.&nbsp; (This is similar to what you inadvertantly did above.)&nbsp; In this case, you define the additional columns explicitly (in XAML or code) and these will be the first columns in the columns collection.&nbsp; Then set AutoGenerateColumns to true, which will cause DataGrid to generate&nbsp;a column for each field in your data source&nbsp;and append them to the end of the columns collection.&nbsp; This might be helpful if, for example, your data set has a bunch of number fields (like price and quantity) and you want to add an additional calculated column (like subtotal).&nbsp; You can reorder the columns however you like at runtime using the DisplayIndex property.</p>\r\n<p>Hope that helps!</p>\r\n<p>Thanks,<br>Samantha</p>",
    "PostedDate": "2009-06-09T13:32:40.483-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "199775",
    "ThreadId": "58939",
    "Html": "<p>Hi Samantha,</p>\r\n<p><span style=\"white-space:pre\"> </span>I tried to set AutoGenerateColumns to False, it still does not help. Also, if you take a look at the datagrid examples downloadable at WPF Toolkit site even those have a single column appended at the end. To add on, even the SouthRidge Labs samples have the same problem. That's why wanted to confirm if this is some kind of a miss?</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks,</p>\r\n<p>Jithu</p>\r\n<p><span style=\"white-space:pre\"> </span></p>",
    "PostedDate": "2009-06-09T19:07:06.473-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "200204",
    "ThreadId": "58939",
    "Html": "<p>Hi Jithu,</p>\r\n<p>Oh, ok, it sounds like you are referring to the extra &quot;filler&quot; column that shows up at the end (with a blank header) to fill the remaining space if the DataGrid is wider than its total column width - is that correct?&nbsp; If you want to hide this, you can set your last column (or in this case, your only column) to&nbsp;have * width, which will cause it to fill the remaining space and only display that one column.&nbsp; Does that fix the problem you're seeing?&nbsp; If not, please send a screenshot.</p>\r\n<p>Thanks,<br>Samantha</p>",
    "PostedDate": "2009-06-10T15:33:26.95-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "200439",
    "ThreadId": "58939",
    "Html": "<p>Hi Jithu,</p>\r\n<p>If you want your column to have a fixed width and not fill the remaining space you can Template the ScrollViewer in the DataGrid and set the HorizontalAlignment=&quot;Left&quot; on the DataGridColumnHeadersPresenter.&nbsp; I then set the ItemsPanel for the DataGrid to a StackPanel and set&nbsp;its&nbsp;HorizontalAlignment=&quot;Left&quot;.</p>\r\n<p>Hope this helps,</p>\r\n<p>-LT</p>",
    "PostedDate": "2009-06-11T08:12:50.343-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "220618",
    "ThreadId": "58939",
    "Html": "<p>I have a DataGrid defined as</p>\r\n<p>&lt;wpftoolkit:DataGrid<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x:Name=&quot;AccountsDataGrid&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AutoGenerateColumns=&quot;False&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ItemsSource=&quot;{Binding Path=Accounts}&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ColumnReordered=&quot;DataGrid_ColumnReordered&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SelectionUnit=&quot;FullRow&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RowHeaderWidth=&quot;0&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HorizontalAlignment=&quot;Stretch&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; VerticalAlignment=&quot;Stretch&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;wpftoolkit:DataGrid.Columns&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;wpftoolkit:DataGridTextColumn Header=&quot;Account Id&quot; Binding=&quot;{Binding Path=AccountId}&quot; Width=&quot;Auto&quot; /&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;wpftoolkit:DataGridTextColumn Header=&quot;Account Name&quot; Binding=&quot;{Binding Path=AccountName}&quot; Width=&quot;*&quot; /&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/wpftoolkit:DataGrid.Columns&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/wpftoolkit:DataGrid&gt;</p>\r\n<p>which on load looks great. the first column fits to the minimum width necessary to fit both the content and the header. the second column stretches to fill the rest of the width of the DataGrid (so I don't have a 3rd filler column). But if I try to reorder the columns, the AccountName column cannot be resized to a width less than what its width was before the reorder. So I added a handler on the ColumnReordered event, figuring I can just reset the column widths, but it doesn't seem to work. In fact, it shrinks the AccountId column to almost nothing, and the AccountName column still cannot be resized smaller.</p>\r\n<p>&nbsp;</p>\r\n<p>private void DataGrid_ColumnReordered(object sender, Microsoft.Windows.Controls.DataGridColumnEventArgs e)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (DataGridColumn column in AccountsDataGrid.Columns)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (column.Equals(AccountsDataGrid.Columns.Last()))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; column.Width = new DataGridLength(1.0, DataGridLengthUnitType.Star);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; column.Width = new DataGridLength(1.0, DataGridLengthUnitType.Auto);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;</p>\r\n<p>Any thoughts?</p>",
    "PostedDate": "2009-08-06T19:44:14.24-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "220654",
    "ThreadId": "58939",
    "Html": "<p>Hi</p>\r\n<p>if u have fixed number of columns in datagrid then disable horizontalscroll bar and adjust the each column width</p>",
    "PostedDate": "2009-08-06T23:30:01.557-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "234980",
    "ThreadId": "58939",
    "Html": "<p>Hi</p>\r\n<p>Thank your suggestions above.</p>\r\n<p>I set&nbsp;my column to have a fixed and&nbsp;set the HorizontalAlignment=&quot;Left&quot; of Template the ScrollViewer in the DataGrid. It looks good.</p>\r\n<p>But when I resize the column, decrease the column width, the last extra column appears again.</p>\r\n<p>Is there any good way to avoid the last column in this situation?</p>\r\n<p>Or what I want to do is handle the column change event to adjustify each column's with to fill the DataGrid's width. But I don't find column width change event.</p>\r\n<p>Any thoughts?</p>\r\n<p>Thanks very much</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-09-15T20:07:48.503-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "235285",
    "ThreadId": "58939",
    "Html": "<p>Hi,</p>\r\n<p>To avoid the last column situation I had to change my ItemsPanelTemplate for the Datagrid&nbsp;from the VirtualizingStackPanel usesd by default, to a regular StackPanel.&nbsp; I had reported this behavior awhile ago but it hasn't been fixed yet.</p>\r\n<p>-LT</p>",
    "PostedDate": "2009-09-16T12:37:19.083-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "235405",
    "ThreadId": "58939",
    "Html": "<p>Sorry, I tried but I don't find anywhere&nbsp;or know how to set ItemsPanelTemplate for the Datagrid&nbsp;from the VirtualizingStackPanel StackPanel?</p>\r\n<p>What I see is the</p>\r\n<p>&nbsp; &nbsp;&lt;ItemsPanelTemplate x:Key=&quot;ItemsPanelTemplate1&quot;&gt;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&lt;Custom:DataGridRowsPresenter IsItemsHost=&quot;True&quot;/&gt;<br>&nbsp;&nbsp;&nbsp; &nbsp;&lt;/ItemsPanelTemplate&gt;</p>\r\n<p>Could you please give me more descriptions or an example?</p>\r\n<p>Thanks</p>",
    "PostedDate": "2009-09-16T19:58:05.417-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "236058",
    "ThreadId": "58939",
    "Html": "<p>that's where you would set it to a StackPanel.</p>\r\n<p>What you see now:</p>\r\n<p>&lt;ItemsPanelTemplate x:Key=&quot;ItemsPanelTemplate1&quot;&gt;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&lt;Custom:DataGridRowsPresenter IsItemsHost=&quot;True&quot;/&gt;<br>&nbsp;&nbsp;&nbsp; &nbsp;&lt;/ItemsPanelTemplate&gt;</p>\r\n<p>What you change it to:</p>\r\n<p>&lt;ItemsPanelTemplate x:Key=&quot;ItemsPanelTemplate1&quot;&gt;<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&lt;StackPanel/&gt;<br>&nbsp;&nbsp;&nbsp; &nbsp;&lt;/ItemsPanelTemplate&gt;</p>\r\n<p>&nbsp; Simple Example:</p>\r\n<p>&lt;dg:DataGrid x:Name=&quot;myDataGrid&quot; HeadersVisibility=&quot;Column&quot; AutoGenerateColumns=&quot;False&quot; HorizontalScrollBarVisibility=&quot;Auto&quot; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; VerticalScrollBarVisibility=&quot;Auto&quot; SelectionUnit=&quot;FullRow&quot;&nbsp; SelectionMode=&quot;Extended&quot;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Style=&quot;{DynamicResource DataGridStyle1}&quot; <span style=\"color:#ff0000\">ItemsPanel=&quot;{DynamicResource ItemsPanelTemplate1}&quot;</span>&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;dg:DataGrid.Resources&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!--&lt;We remove the Virtualizing StackPanel from the DataGrid and replace with a standard StackPanel&gt;--&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#ff0000\">&lt;ItemsPanelTemplate x:Key=&quot;ItemsPanelTemplate1&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;StackPanel HorizontalAlignment=&quot;Left&quot;/&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/ItemsPanelTemplate&gt;<br></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/dg:DataGrid.Resources&gt;<br>&lt;/dg:DataGrid&gt;</p>\r\n<p>Set the <span style=\"color:#ff0000\">ItemsPanel</span> in the DataGrid to the corresponding <span style=\"color:#ff0000\">ItemsPanelTemplate</span> you wish to use. &nbsp;This will get rid of the last &quot;extra&quot; column issue.</p>\r\n<p>Hope this helps,<br>-LT</p>",
    "PostedDate": "2009-09-18T07:53:39.583-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "236070",
    "ThreadId": "58939",
    "Html": "<p>If you replace DataGridRowsPresenter, be aware you might see some unexpected behavior. see <a href=\"http://blogs.msdn.com/vinsibal/archive/2008/08/14/wpf-datagrid-dissecting-the-visual-layout.aspx\">http://blogs.msdn.com/vinsibal/archive/2008/08/14/wpf-datagrid-dissecting-the-visual-layout.aspx</a></p>",
    "PostedDate": "2009-09-18T08:08:22.66-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "236101",
    "ThreadId": "58939",
    "Html": "<p>Correct, caution should always be taken when changing the itemsPanel but in this case I don't think it applies since they are both StackPanels.&nbsp; I'm not sure from the diagram in the link what unexpected behavior would manifest since we're just replacing the &quot;out of the box&quot; VirtualizingStackPanel which is the one causing the unexpected behavior with a regular&nbsp;StackPanel which fixes the unexpected behavior.&nbsp; Behavior of scrolling in the DataGrid works just fine.&nbsp; The only trade off issue you may experience is if you are using very large amounts of data then you would want to use the VirtualizingStackPanel to increase performance.&nbsp; Microsoft should fix the extra column issue so the work around doesn't have to be implemented but it's been working quite well for us.&nbsp; For what it's worth, I haven't seen any issues in this scenario and I've been doing it this way since the CTP.</p>\r\n<p>Cheers,<br>-LT</p>",
    "PostedDate": "2009-09-18T08:57:16.31-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "236506",
    "ThreadId": "58939",
    "Html": "<p>Hi LT,</p>\r\n<p>Thank your reply.</p>\r\n<p>I tried your ways. to my surprise, this method makes none of the columnsdefined show. Every row is an empty row. Is anything else need to do?</p>\r\n<p>Thanks very much</p>\r\n<p>Dan</p>",
    "PostedDate": "2009-09-19T20:04:20.853-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "236669",
    "ThreadId": "58939",
    "Html": "<p>Hi Dan,</p>\r\n<p>Well, depending on how you were populating your DataGrid before, you may have to change <span style=\"color:#ff0000\">AutoGenerateColumns=&quot;False&quot; <span style=\"color:#000000\">from my sample to</span> AutoGenerateColumns=&quot;True&quot;.&nbsp; <span style=\"color:#000000\">I create mine dynamically in code behind so I set mine to false.&nbsp; you may have been&nbsp;auto generating yours before.</span></span></p>\r\n<p><span style=\"color:#ff0000\"><span style=\"color:#000000\">Cheers,<br></span></span><span style=\"color:#ff0000\"><span style=\"color:#000000\">-LT</span></span></p>",
    "PostedDate": "2009-09-20T15:08:35.067-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]