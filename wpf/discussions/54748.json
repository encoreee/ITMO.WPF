[
  {
    "Id": "184615",
    "ThreadId": "54748",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:arial\">First of all I hope that I will make myself understood and then I hope that somebody can help me.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:arial\">    I have a delicate situation where I had to create the columns for my data grid dynamically and as well bound them dynamically. The problem which occurred was that not all my objects which I have assigned to the source view of the data grid had that number of properties for columns to bind, so I was getting binding errors which were slowing down my application. To avoid that I used a converter for which I send as source the current object list of properties and as parameter the property Id. In this case the problem that I have is that if one of the properties is changing it will update the all list of properties (columns) for current object and I do not want that as I have to highlight only the current change. <br>\r\n<br>\r\n<span style=\"font-size:10pt;font-family:arial\">A solution that could work is to mach each object properties in the data source with the number of columns that I currently have in the grid, but that will again slow down the application as when something is changing I have to go through objects and update their properties.</span><br>\r\n<br>\r\nIf anybody could give me an idea on how to solve this it would be much appreciated. </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:arial\"> </span></p>\r\n<span style=\"font-size:10pt;font-family:arial\">Regards,<br>\r\n<br>\r\nJohn.<br>\r\n<br>\r\n</span>\r\n",
    "PostedDate": "2009-04-28T10:31:58.903-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "184705",
    "ThreadId": "54748",
    "Html": "When properties are changing, do you mean that the value of a property on a row item changes, or do you mean that the actual properties that an object has changes?<br>\r\n<br>\r\nIf it is the former, this should not cause the columns list to update (unless you are doing that yourself).<br>\r\n<br>\r\nIf it is the later, then you would need to support some form of dynamically showing or hiding columns. You might also try using a converter on a binding that doesn't have a path (i.e. instead of {Binding Path=PropertyName} do {Binding Converter={StaticResource myConverter},ConverterParameter=PropertyName}. Then, use the converter parameter to specify the path. That way you may be able to find a way to support some objects with one set of properties and other objects with other properties.<br>\r\n<br>\r\nBen <br>\r\n<br>\r\nEdited to show an example of binding with a converter.\r\n",
    "PostedDate": "2009-04-28T13:54:58.477-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "184882",
    "ThreadId": "54748",
    "Html": "<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:arial\">Hi Ben,</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:arial\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:arial\">Thank you for your answer.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:arial\">I did not mention, but because my dynamic data set, I did the columns set in the code behind. So, initially I had something like this:</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:arial\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:#2b91af;font-family:'courier new'\">DataGridTextColumn</span><span style=\"font-size:10pt;font-family:'courier new'\"> column = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">DataGridTextColumn</span>();</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:#2b91af;font-family:'courier new'\">Binding</span><span style=\"font-size:10pt;font-family:'courier new'\"> path = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">Binding</span>(“PropertyList[”+property.Id+”].DisplayValue”); //because a property can have different values that can be displayed</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">path.NotifyOnTargetUpdated = <span style=\"color:blue\">true</span>;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">column.Binding = path;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">So that was fine, except for binding errors when an object did not had the property with the id property.Id. To solve that I used a converter:</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:#2b91af;font-family:'courier new'\">DataGridTextColumn</span><span style=\"font-size:10pt;font-family:'courier new'\"> column = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">DataGridTextColumn</span>();</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:#2b91af;font-family:'courier new'\">Binding</span><span style=\"font-size:10pt;font-family:'courier new'\"> path = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">Binding(“PropertyList”);</span>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:#2b91af;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">path.Converter = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">PropertyIdToPropertyValueConverter</span>();</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">path.ConverterParameter = property.Id;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">path.NotifyOnTargetUpdated = <span style=\"color:blue\">true</span>;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">column.Binding = path;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">In this case I loose the notification for DisplayValue if that’s chnages, because I have to send the notification for the all list of properties, so all propertyes DisplayValue will look like updating although they are not changing the value.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">I tried your ideea of setting the path for the binding using the converter:</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;color:#2b91af;font-family:'courier new'\">Binding</span><span style=\"font-size:10pt;font-family:'courier new'\"> path = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">Binding</span>();//or new Binding(“”); still does not work</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">path.Converter = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">PropertyIdToPropertyValueConverter</span>();</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">path.ConverterParameter = property.Id;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">path.NotifyOnTargetUpdated = <span style=\"color:blue\">true</span>;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">column.Binding = path;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\"> </span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:'courier new'\">If I use the converter this way it will never be called, is like the converter requires a Path by default. Is something that I miss out or the solution that you proposed is for Xaml only?</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-size:10pt;font-family:arial\"> </span></p>\r\n<span style=\"font-size:10pt;font-family:arial\">Regards,<br>\r\n<br>\r\n</span></span></p>\r\n",
    "PostedDate": "2009-04-29T02:17:02.157-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "185944",
    "ThreadId": "54748",
    "Html": "In the end I fund the solution, which is not too complicated:<br>\r\n<br>\r\nI needed a PropertyList class like this:<br>\r\n<br>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>public</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">class</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">PropertyList\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>{</p>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">private</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">Dictionary</span><span style=\"font-size:13px\">&lt;</span><span style=\"font-size:13px;color:#0000ff\">int</span><span style=\"font-size:13px\">, </span><span style=\"font-size:13px;color:#2b91af\">Property</span><span style=\"font-size:13px\">&gt; _data = </span><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">Dictionary</span><span style=\"font-size:13px\">&lt;</span><span style=\"font-size:13px;color:#0000ff\">int</span><span style=\"font-size:13px\">, </span><span style=\"font-size:13px;color:#2b91af\">Property</span><span style=\"font-size:13px\">&gt;();\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">public</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">Property</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">this</span><span style=\"font-size:13px\">[</span><span style=\"font-size:13px;color:#0000ff\">int</span><span style=\"font-size:13px\"> index]\r\n<p>&nbsp;</p>\r\n<p>{</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">get</span><span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n<p>{</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> (_data.ContainsKey(index))\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">return</span><span style=\"font-size:13px\"> _data[index];\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">return</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">;\r\n<p>&nbsp;</p>\r\n<p>}</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">set</span><span style=\"font-size:13px\"> { _data[index] = </span><span style=\"font-size:13px;color:#0000ff\">value</span><span style=\"font-size:13px\">; }\r\n<p>&nbsp;</p>\r\n<p>}<br>\r\n}<br>\r\n<br>\r\nThis way I can keep my initial path <span style=\"font-size:10pt;color:#2b91af;font-family:'courier new'\">Binding</span><span style=\"font-size:10pt;font-family:'courier new'\"> path = <span style=\"color:blue\">new</span> <span style=\"color:#2b91af\">Binding</span>(“PropertyList[”+property.Id+”].DisplayValue”); , have not binding errors and as well have any DisplayValue update notification that my occure.<br>\r\n<br>\r\nIn case that somebody else may have a similar problem, please follow the next link for more information:<br>\r\n<br>\r\n<a href=\"http://www.scottlogic.co.uk/blog/wpf/2009/04/binding-a-silverlight-datagrid-to-dynamic-data-part-2-editable-data-and-inotifypropertychanged/\">http://www.scottlogic.co.uk/blog/wpf/2009/04/binding-a-silverlight-datagrid-to-dynamic-data-part-2-editable-data-and-inotifypropertychanged/</a><br>\r\n<br>\r\nCheers. </span></p>\r\n</span></p>\r\n",
    "PostedDate": "2009-05-01T10:23:14.77-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]