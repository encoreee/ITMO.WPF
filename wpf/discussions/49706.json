[
  {
    "Id": "166381",
    "ThreadId": "49706",
    "Html": "Hi, there always are one more row in my DataGrid with no value after I bind the ItemSource. My collection has 5 items indeed. However it shows 6 Rows. The last row is totally no use and no value.<br>\r\n<br>\r\nI found the Items value in datagrid show SourceCollection .Count = 5, but Item.Count = 6? I don't know why. Does anybody hit it before and can give me the answer and solution.<br>\r\n<br>\r\nI manually add the collection one by one using myDataGrid.Add(item), it's OK with 5 rows. But when I edit one column, it reported error message that 'EditItem' is not allowed for this view. Though it's no problem when I bind ItemSource .<br>\r\n<br>\r\nThank you in advance,<br>\r\nDan\r\n",
    "PostedDate": "2009-03-10T01:22:12.787-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "166686",
    "ThreadId": "49706",
    "Html": "This additional row is the new blank row which is used to add additional rows.  By default this is turned on.  To turn it off set DataGrid.CanUserAddRows = false.  <br>\r\n<br>\r\nThe reason why it doesn't show up when you initialize the DataGrid via DataGrid.Items.Add() is because when initializing with unbound data you will not get the add new row functionality.  Also, the error message you are getting is b/c editing functionality is not supported with unbound data.\r\n",
    "PostedDate": "2009-03-10T18:19:40.483-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "166692",
    "ThreadId": "49706",
    "Html": "Thanks very much.<br>\r\nYes, you're quite right. The problem is solved.\r\n",
    "PostedDate": "2009-03-10T18:38:17.057-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]