[
  {
    "Id": "287227",
    "ThreadId": "83546",
    "Html": "<p>Hi,</p>\r\n<p>Firstly I am using the DataGrid from the WPFToolKit on .NET 3.5 SP1.</p>\r\n<p>I have the scenario where I want to disable my Save Button when anything on my page is invalid. &nbsp;I decided to use a DependencyProperty, IsValid to do this and wire the buttons &quot;IsEnabled&quot;. &nbsp;Specifically I want to detect when a DataGridRow is invalid. &nbsp;I have successfully used a RowValidationRule to check the row's validity, and this marks up the row as desired, but I cannot find a suitable event to check the validity of a rule after the validation rule has run using Validation.GetHasError. &nbsp;I have tried:</p>\r\n<p>DataGrid.RowEditEnding</p>\r\n<p>DataGrid.SourceUpdated</p>\r\n<p>DataGridRow.SourceUpdated</p>\r\n<p>All of which don't report an error. &nbsp;I tried to wire-up the Validation.Errors attached event on the DataGridRow, but this never seems to get triggered, and I cannot see where to use the NotifyOnValidationError=True in a binding.</p>\r\n<p>Please can anyone suggest a solution to this or suggest what I might be doing wrong?</p>\r\n<p>Kinds Regards,<br>Peter.&nbsp;</p>",
    "PostedDate": "2010-02-08T10:03:48.697-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "287717",
    "ThreadId": "83546",
    "Html": "<p><span style=\"color:#30332d;font-size:10pt\">Hi,</span></p>\r\n<p><span style=\"color:#30332d;font-size:10pt\">I have managed to come up with a bit of a bodge&nbsp;workaround&nbsp;to solve this problem.</span></p>\r\n<p><span style=\"color:#30332d;font-size:10pt\">I have written a custom attached property; IsValid, and a custom attached event; ValidityChanged. &nbsp;In the IsValid property change call back I raise the ValidityChanged event. &nbsp;In the XAML I have an event setter for the DataGridRow style for the ValidityChanged attached event, and a style trigger when Validation.HasError is true sets the IsValid property to false.&nbsp; XAML looks like this:</span><span style=\"font-size:10pt\">&nbsp;</span></p>\r\n<p><span style=\"color:green;font-size:10pt\">&lt;!-- DataGridRow Style --&gt;</span></p>\r\n<p><span style=\"color:blue;font-size:10pt\">&lt;</span><span style=\"color:#a31515;font-size:10pt\">Style</span><span style=\"color:red;font-size:10pt\"> TargetType</span><span style=\"color:blue;font-size:10pt\">=&quot;{</span><span style=\"color:#a31515;font-size:10pt\">x</span><span style=\"color:blue;font-size:10pt\">:</span><span style=\"color:#a31515;font-size:10pt\">Type</span><span style=\"color:red;font-size:10pt\"> dg</span><span style=\"color:blue;font-size:10pt\">:</span><span style=\"color:red;font-size:10pt\">DataGridRow</span><span style=\"color:blue;font-size:10pt\">}&quot;&gt;</span></p>\r\n<p><span style=\"color:blue;font-size:10pt\">&lt;</span><span style=\"color:#a31515;font-size:10pt\">EventSetter</span><span style=\"color:red;font-size:10pt\"> Event</span><span style=\"color:blue;font-size:10pt\">=&quot;ext:ValidityChecker.ValidityChanged&quot;</span><span style=\"color:red;font-size:10pt\"> Handler</span><span style=\"color:blue;font-size:10pt\">=&quot;EventPermissionRow_ValidityChanged&quot;/&gt;</span></p>\r\n<p><span style=\"color:blue;font-size:10pt\">&lt;</span><span style=\"color:#a31515;font-size:10pt\">Setter</span><span style=\"color:red;font-size:10pt\"> Property</span><span style=\"color:blue;font-size:10pt\">=&quot;Validation.ErrorTemplate&quot;</span><span style=\"color:red;font-size:10pt\"> Value</span><span style=\"color:blue;font-size:10pt\">=&quot;{</span><span style=\"color:#a31515;font-size:10pt\">StaticResource</span><span style=\"color:red;font-size:10pt\"> BasicRowValidationErrorTemplate</span><span style=\"color:blue;font-size:10pt\">}&quot; /&gt;</span></p>\r\n<p><span style=\"color:#a31515;font-size:10pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"color:blue;font-size:10pt\">&lt;</span><span style=\"color:#a31515;font-size:10pt\">Style.Triggers</span><span style=\"color:blue;font-size:10pt\">&gt;</span></p>\r\n<p><span style=\"color:#a31515;font-size:10pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"color:blue;font-size:10pt\">&lt;</span><span style=\"color:#a31515;font-size:10pt\">Trigger</span><span style=\"color:red;font-size:10pt\"> Property</span><span style=\"color:blue;font-size:10pt\">=&quot;Validation.HasError&quot;</span><span style=\"color:red;font-size:10pt\"> Value</span><span style=\"color:blue;font-size:10pt\">=&quot;true&quot;&gt;</span></p>\r\n<p><span style=\"color:#a31515;font-size:10pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"color:blue;font-size:10pt\">&lt;</span><span style=\"color:#a31515;font-size:10pt\">Setter</span><span style=\"color:red;font-size:10pt\"> Property</span><span style=\"color:blue;font-size:10pt\">=&quot;ext:ValidityChecker.IsValid&quot;</span><span style=\"color:red;font-size:10pt\"> Value</span><span style=\"color:blue;font-size:10pt\">=&quot;false&quot;/&gt;</span></p>\r\n<p><span style=\"color:#a31515;font-size:10pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"color:blue;font-size:10pt\">&lt;</span><span style=\"color:#a31515;font-size:10pt\">Setter</span><span style=\"color:red;font-size:10pt\"> Property</span><span style=\"color:blue;font-size:10pt\">=&quot;BorderBrush&quot;</span><span style=\"color:red;font-size:10pt\"> Value</span><span style=\"color:blue;font-size:10pt\">=&quot;Red&quot;/&gt;</span></p>\r\n<p><span style=\"color:blue;font-size:10pt\">&lt;</span><span style=\"color:#a31515;font-size:10pt\">Setter</span><span style=\"color:red;font-size:10pt\"> Property</span><span style=\"color:blue;font-size:10pt\">=&quot;BorderThickness&quot;</span><span style=\"color:red;font-size:10pt\"> Value</span><span style=\"color:blue;font-size:10pt\">=&quot;2&quot;/&gt;</span></p>\r\n<p><span style=\"color:#a31515;font-size:10pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"color:blue;font-size:10pt\">&lt;</span><span style=\"color:#a31515;font-size:10pt\">Setter</span><span style=\"color:red;font-size:10pt\"> Property</span><span style=\"color:blue;font-size:10pt\">=&quot;ToolTip&quot;</span><span style=\"font-size:10pt\"> <span style=\"color:red\">Value</span><span style=\"color:blue\">=&quot;{</span><span style=\"color:#a31515\">Binding</span><span style=\"color:red\"> RelativeSource</span><span style=\"color:blue\">={</span><span style=\"color:#a31515\">RelativeSource</span><span style=\"color:red\"> Self</span><span style=\"color:blue\">},</span> <span style=\"color:red\">Path</span><span style=\"color:blue\">=(Validation.Errors)[</span>0<span style=\"color:blue\">].ErrorContent}&quot; /&gt;</span></span></p>\r\n<p><span style=\"color:blue;font-size:10pt\">&lt;/</span><span style=\"color:#a31515;font-size:10pt\">Trigger</span><span style=\"color:blue;font-size:10pt\">&gt;</span></p>\r\n<p><span style=\"color:blue;font-size:10pt\">&lt;/</span><span style=\"color:#a31515;font-size:10pt\">Style.Triggers</span><span style=\"color:blue;font-size:10pt\">&gt;</span></p>\r\n<p><span style=\"color:blue;font-size:10pt\">&lt;/</span><span style=\"color:#a31515;font-size:10pt\">Style</span><span style=\"color:blue;font-size:10pt\">&gt;</span></p>\r\n<p><span style=\"color:#30332d;font-size:10pt\">I think this is quite a generic solution i.e. would work in any scenario with ValidationRules, but I think the normal binding validations rules, and NotifyOnValidationError=True will work fine in most cases.</span></p>\r\n<p><span style=\"color:#30332d;font-size:10pt\">Kinds Regards,<br>Peter.</span></p>",
    "PostedDate": "2010-02-09T08:44:39.96-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]