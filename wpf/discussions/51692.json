[
  {
    "Id": "173395",
    "ThreadId": "51692",
    "Html": "Hi there,<br>\r\n<br>\r\nI currently have a WPF datagrid which is autogenerated from datatable and works quite nicely. One of the columns is our own customised date class. Despite the fact that the ToString() methods are overloaded to return a short date string (which is configured to be en-GB format on the machine) the date always gets rendered in en-US format. Upon debugging, it appears that the System.Threading.Thread.CurrentThread.CurrentUICulture is causing the problem as this always seems to be set to en-US format even though the System.Threading.Thread.CurrentThread.CurrentCulture is en-GB.<br>\r\n<br>\r\nI have tried to set the CurrentUICulture to be CurrentCulture on startup of the application as a test, but this doesn't seem to make any difference.<br>\r\n<br>\r\nDoes anyone have any ideas how to change the default for this value (or even advice as to whether I should be changing this!)<br>\r\n<br>\r\nThanks! \r\n",
    "PostedDate": "2009-03-30T03:00:08.553-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "173784",
    "ThreadId": "51692",
    "Html": "Hi, I don't have the answer but I've noticed the same problem in the DataGrid with number formats and this is what I've found out so far. <br>\r\n<br>\r\nIf I use a StringFormat like this in the XAML: <span style=\"font-size:13px;color:#ff0000\">Binding</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">Binding</span><span style=\"font-size:13px;color:#ff0000\"> Sum</span><span style=\"font-size:13px;color:#0000ff\">,</span><span style=\"font-size:13px;color:#ff0000\"> StringFormat</span><span style=\"font-size:13px;color:#0000ff\">=N2}&quot;</span>&quot; I'll get en-US format.<br>\r\nIf I use a converter like this: <span style=\"font-size:13px;color:#ff0000\">Binding</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">Binding</span><span style=\"font-size:13px;color:#ff0000\"> Sum</span><span style=\"font-size:13px;color:#0000ff\">,</span><span style=\"font-size:13px;color:#ff0000\"> Converter</span><span style=\"font-size:13px;color:#0000ff\">={</span><span style=\"font-size:13px;color:#a31515\">StaticResource</span><span style=\"font-size:13px;color:#ff0000\"> PriceConverter</span><span style=\"font-size:13px;color:#0000ff\">}}&quot;</span> I'll get a format based on my current UI-culture (my converter uses decimal.ToString(&quot;N2&quot;) and no manipulation of the current UI-culture).<br>\r\n<br>\r\nThe same things applies if I create my DataGrid columns dynamic in code.<br>\r\n<br>\r\nI've found that in the source-code for the toolkit the en-US culture is hard-coded in some places. I've tried to change this to another culture and rebuild the toolkit but without any luck.<br>\r\n<br>\r\n/Jan<br>\r\n",
    "PostedDate": "2009-03-31T00:57:12.76-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "173790",
    "ThreadId": "51692",
    "Html": "I have got a little bit further. It seems that the IFormatProvider passed to my ToString() method is defaulted to en-US and this is not really linked to the CurrentUICulture. After quite a lot of head scratching, I have found that by putting a language definition at the top of my XAML file (xml:lang=&quot;en-GB&quot;) causes the correct format provider to be passed. <br>\r\n<br>\r\nI'm not sure if this is a long term solution though, as I obviously want the format to adjust to the user's locale settings in the same way that my hosting WinForms application will.\r\n",
    "PostedDate": "2009-03-31T01:20:31.627-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "173795",
    "ThreadId": "51692",
    "Html": "Great tip, thanks. I didn't like the idea of having to write a converter just to get around the problem. But I agree with you, it's not a long time solution. Let's hope it's fixed in comming versions.<br>\r\n<br>\r\n/Jan\r\n",
    "PostedDate": "2009-03-31T01:32:47.517-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "174017",
    "ThreadId": "51692",
    "Html": "Thank you for reporting this issue.  This does indeed sound like a bug, and I've filed a bug in our internal database to track this.  It will be fixed in an upcoming release.  Thanks!\r\n",
    "PostedDate": "2009-03-31T11:48:51.06-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "184632",
    "ThreadId": "51692",
    "Html": "<span id=UniqueID1240942462697>After conferring with our Data team, we've learned that the behavior you're seeing is by design.  Bindings pass a culture into the converters - the culture is either explicitly declared via Binding.ConverterCulture, or obtained from the target element's Language property (this is an inherited property that can be set by xml:Lang).   In this case, the converter you wrote is ignoring the culture that's being passed in, and instead calls an API (Decimal.ToString(&quot;N2&quot;)) that uses the CurrentUICulture.\r\n<p>&nbsp;</p>\r\n<p>Note that bindings do not use CurrentUICulture;  this is also by design.  To get that effect, you can set the Language property of the target element to the CurrentUICulture.<br>\r\n<br>\r\nHope that helps!  Thanks,<br>\r\nSamantha</p>\r\n</span>\r\n",
    "PostedDate": "2009-04-28T11:16:18.417-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "184826",
    "ThreadId": "51692",
    "Html": "\r\n<div dir=ltr>Thank you for informing me.</div>\r\n<div dir=ltr> </div>\r\n<div dir=ltr>/Jan</div>\r\n<div id=divRpF334718 style=\"direction:ltr\">\r\n<hr>\r\n<b>Från:</b> samanthamsft [notifications@codeplex.com]<br>\r\n<b>Skickat:</b> den 28 april 2009 20:16<br>\r\n<b>Till:</b> Ryninge Jan<br>\r\n<b>Ämne:</b> Re: CurrentUICulture confusion [wpf:51692]<br>\r\n<br>\r\n</div>\r\n<div></div>\r\n<div>\r\n<p>From: samanthamsft</p>\r\n<div id=ThreadNotificationPostBody><span id=UniqueID1240942462697>After conferring with our Data team, we've learned that the behavior you're seeing is by design.  Bindings pass a culture into the converters - the culture is either explicitly declared via\r\n Binding.ConverterCulture, or obtained from the target element's Language property (this is an inherited property that can be set by xml:Lang).   In this case, the converter you wrote is ignoring the culture that's being passed in, and instead calls an API\r\n (Decimal.ToString(&quot;N2&quot;)) that uses the CurrentUICulture.\r\n<p> </p>\r\n<p>Note that bindings do not use CurrentUICulture;  this is also by design.  To get that effect, you can set the Language property of the target element to the CurrentUICulture.<br>\r\n<br>\r\nHope that helps!  Thanks,<br>\r\nSamantha</p>\r\n</span></div>\r\n\r\n</div>\r\n",
    "PostedDate": "2009-04-28T23:11:08.553-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]