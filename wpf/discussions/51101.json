[
  {
    "Id": "171281",
    "ThreadId": "51101",
    "Html": "For certain columtypes I would like the following behaviour:<br>\r\n - The column will display an &quot;Edit...&quot; button<br>\r\n - Clicking on the &quot;Edit...&quot; button will result in a dialog being opened<br>\r\n - When closing the dialog an object is returned, and this object is returned through the column's data binding as a new property value of the bound source object property<br>\r\n<br>\r\nIs this possible?  Have someone else done something similar?<br>\r\n<br>\r\nI guess I should start by looking at the DataGridTemplateColumn?  But what should the DataTemplate and EditTemplate be?  At first I thought it should be a Button, but a Button has no usable dependency property to bind the source object property to.  And how should I transfer the value resulting from the popup dialog when it's closed down?<br>\r\n<br>\r\nThanx!<br>\r\n<br>\r\n<br>\r\n- Steinar<br>\r\n",
    "PostedDate": "2009-03-24T05:05:40.01-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "171495",
    "ThreadId": "51101",
    "Html": "You might consider only providing a CellTemplate with the button. After your dialog completes, you could just set the property on the data item. If you want to make this more generic, then create a property on your custom column type that is of type Binding and then use the Binding API to get and set the property.<br>\r\n<br>\r\nBen\r\n",
    "PostedDate": "2009-03-24T13:10:28.707-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "171839",
    "ThreadId": "51101",
    "Html": "<p>Can I use just a button?  Don't I need to wrap it in some other control that can hold the click handler, and find a reference to the row item?</p>\r\n<p>On that note: does anyone have an example of a control in a cell template that finds a reference to a row item?</p>\r\n",
    "PostedDate": "2009-03-25T06:25:37.637-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "171862",
    "ThreadId": "51101",
    "Html": "I did something like this. I have a edit button that opens a dialog and when the user clicks on save in the dialog I commit the changes else I revered.<br>\r\n<br>\r\nin the xaml I use a DataGridTemplateColumn with with the button in in. On the button I have a click event handler I create the dialog with the selected item put in the constructor.<br>\r\nThis object I edit. because I send the SelectedItem object it is exactly the same as the one in the datagrid and I only have to use databinding and INotifyPorpertyChanged correctly<br>\r\n<br>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>&lt;</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#a31515\">wpftk</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">DataGridTemplateColumn</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">wpftk</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">DataGridTemplateColumn.CellTemplate</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">DataTemplate</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">Button</span><span style=\"font-size:13px;color:#ff0000\"> Content</span><span style=\"font-size:13px;color:#0000ff\">=&quot;Edit&quot;</span><span style=\"font-size:13px;color:#ff0000\"> Click</span><span style=\"font-size:13px;color:#0000ff\">=&quot;EditButton_Click&quot;/&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;/</span><span style=\"font-size:13px;color:#a31515\">DataTemplate</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;/</span><span style=\"font-size:13px;color:#a31515\">wpftk</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">DataGridTemplateColumn.CellTemplate</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px;color:#a31515\"><span style=\"font-size:13px;color:#a31515\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;/</span><span style=\"font-size:13px;color:#a31515\">wpftk</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">DataGridTemplateColumn</span><span style=\"font-size:13px;color:#0000ff\">&gt;<br>\r\n<br>\r\n<br>\r\n<p>&nbsp;</p>\r\n<hr>\r\n<br>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>private</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">void</span><span style=\"font-size:13px\"> EditButton_Click(</span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> sender, </span><span style=\"font-size:13px;color:#2b91af\">RoutedEventArgs</span><span style=\"font-size:13px\"> e)\r\n<p>&nbsp;</p>\r\n<p>{</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#2b91af\">CustomerDetailView</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px\">view = </span><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">CustomerDetailView</span><span style=\"font-size:13px\">(</span><span style=\"font-size:13px;color:#0000ff\">this</span><span style=\"font-size:13px\">.dgCustomers.SelectedItem </span><span style=\"font-size:13px;color:#0000ff\">as</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">CustomerVM</span><span style=\"font-size:13px\">);\r\n<p>&nbsp;</p>\r\n<p>view.ShowDialog();</p>\r\n<p>}</p>\r\n</span></p>\r\n</span></p>\r\n",
    "PostedDate": "2009-03-25T07:23:06.913-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "172405",
    "ThreadId": "51101",
    "Html": "<p>Thanx for the code examples.</p>\r\n<p>In the button click event handler I'm attempting to navigate my way up to the DataGrid or the item, and the property on the item.  I've finally succeeded in finding the item, only to find that it was a NewItemPlaceholder (since this was on an empty collection and what I see is the placeholder row at the bottom).</p>\r\n<p>Unfortunately I don't know the actual type of the real items here.  The DataGrid is part of a control created by walking over the object being edited, using reflection.</p>\r\n<p>Any ideas?</p>\r\n<p>Here's the code I used to find the item:<br>\r\n        private static void OpenDialogForCollectionItem(object sender, RoutedEventArgs e)<br>\r\n        {<br>\r\n            Button editButton = sender as Button;<br>\r\n            DataGridCell editButtonCell = FindEditButtonCell(editButton);<br>\r\n            if (editButtonCell == null)<br>\r\n            {<br>\r\n                return;<br>\r\n            }</p>\r\n<p>            DataGridColumn column = editButtonCell.Column;<br>\r\n            string propertyName = (string) column.Header;<br>\r\n            object item = FindCellItem(editButtonCell);<br>\r\n        }</p>\r\n<p>        private static object FindCellItem(DataGridCell editButtonCell)<br>\r\n        {<br>\r\n            DataGridCellsPanel cellParent = (DataGridCellsPanel) VisualTreeHelper.GetParent(editButtonCell);<br>\r\n            ItemsPresenter itemsPresenter = (ItemsPresenter) VisualTreeHelper.GetParent(cellParent);<br>\r\n            DataGridCellsPresenter anotherParent = (DataGridCellsPresenter) VisualTreeHelper.GetParent(itemsPresenter);<br>\r\n            return anotherParent.Item;<br>\r\n        }</p>\r\n<p>        private static DataGridCell FindEditButtonCell(Button editButton)<br>\r\n        {<br>\r\n            ContentPresenter editButtonParent = (ContentPresenter) VisualTreeHelper.GetParent(editButton);<br>\r\n            if (editButtonParent == null)<br>\r\n            {<br>\r\n                return null;<br>\r\n            }</p>\r\n<p>            DataGridCell editButtonCell = (DataGridCell) editButtonParent.Parent;<br>\r\n            return editButtonCell;<br>\r\n        }</p>\r\n",
    "PostedDate": "2009-03-26T09:47:45.65-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "172414",
    "ThreadId": "51101",
    "Html": "Well... one possibility would be if I succeds in navigating the hierarchy to find the DataGrid (the DataGridCellPanel, which is the parent of the DataGridCell, has a property ParentDataGrid, but that property isn't public).<br>\r\n<br>\r\nThen I can find the BindingExpression from the ItemsSource, and find the source of the databinding, and get the type of the property, and try to infer the type of the row item.<br>\r\n<br>\r\nBut this is awfully complicated, and fragile, and Can't Be Right! (tm).\r\n",
    "PostedDate": "2009-03-26T10:08:30.623-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "173387",
    "ThreadId": "51101",
    "Html": "Does comparing to ItemCollection.NewItemPlaceholder and acting on the result help you any?<br>\r\n",
    "PostedDate": "2009-03-30T02:14:29.847-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]