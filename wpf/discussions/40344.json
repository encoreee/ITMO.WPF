[
  {
    "Id": "133893",
    "ThreadId": "40344",
    "Html": "Hi,<div><br></div><div> I have a panel with lots of elements, so my panel requiers a scrollview.</div><div> One of the elements is a datagrid. </div><div><br></div><div> The problem is that when I scroll using the mouse weel the the scrolling gets stuck when the pointer is over the datagrid.</div><div> The expected behavior should be the grid should scroll to the last element and then the panel should continue scrolling.</div><div><br></div><div> <span style=\"font-size:14px\">Any idea on how this can be accomplished?</span></div><div><span style=\"font-size:14px\"><br></span></div><div><span style=\"font-size:14px\">Regards,</span></div><div><span style=\"font-size:14px\">Calin,</span></div><div><br></div><div><br></div>",
    "PostedDate": "2008-11-20T04:35:15.987-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "134123",
    "ThreadId": "40344",
    "Html": "Hi Calin,<br>\r\n<br>\r\nThe behavior you are seeing is a not a problem with DataGrid as is but a much general behavior when you have nested ScrollViewers. In such a case the MouseWheel event is always handled by the inner scroll viewer. In this case DataGrid itself has a ScrollViewer and the event is handled by it even though it looks like it is not doing any thing (because it didnt have to do anything).<br>\r\n<br>\r\nYou can try the same with ListBox too. Put a ListBox inside a ScrollViewer and see what happens when you mouse wheel pointing on the list box. The result should be pretty much same because the ListBox too has a scroll viewer within itself.<br>\r\n<br>\r\nNow speaking of the solution, you can make the outer scroll viewer trap the preview event and handle it like....<br>\r\n<br>\r\n    public class MyScrollViewer : ScrollViewer<br>\r\n    {<br>\r\n        // Literraly this code should be sufficient<br>\r\n        protected override void OnPreviewMouseWheel(MouseWheelEventArgs e)<br>\r\n        {<br>\r\n            base.OnPreviewMouseWheel(e);<br>\r\n            OnMouseWheel(e);<br>\r\n        }<br>\r\n    }<br>\r\n<br>\r\nand use this as your scroll viewer instead. Also you could handle Mouse.PreviewMouseWheel event on the outer scroll viewer and simulate the scroll behavior your self.<br>\r\n<br>\r\nNote that either of these approaches mean that the DataGrid or the ListBox within the ScrollViewer will not get the wheel notifications (which is by default). \r\n",
    "PostedDate": "2008-11-20T18:26:12.923-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "135416",
    "ThreadId": "40344",
    "Html": "Hi VamseeP,<div><br></div><div> Thank you for your reply, what I was actually looking for is something like this <a href=\"http://serialseb.blogspot.com/2007/09/wpf-tips-6-preventing-scrollviewer-from.html\">http://serialseb.blogspot.com/2007/09/wpf-tips-6-preventing-scrollviewer-from.html</a></div><div><br></div><div>Hope this helps someone else.</div><div><br></div><div>Regards,</div>",
    "PostedDate": "2008-11-25T23:39:52.88-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]