[
  {
    "Id": "198291",
    "ThreadId": "58584",
    "Html": "<p>Hello all,</p>\r\n<p>I've been searching for a real simple datagrid example of binding to a List&lt;string&gt; object.<br>I havent seen anything yet, I tried doing this:<br><br><span style=\"color:#00d2d2\"><span style=\"color:#00d2d2\"><span style=\"color:#000000\">Code:</span><br>List</span></span><span style=\"color:#c0c0c0\"><span style=\"color:#c0c0c0\">&lt;</span></span><span style=\"color:#00bfff\"><span style=\"color:#00bfff\">string</span></span><span style=\"color:#c0c0c0\"><span style=\"color:#c0c0c0\">&gt;</span></span><span style=\"color:#e0e0e0\"><span style=\"color:#e0e0e0\"> </span></span><span style=\"color:#c0c0c0\"><span style=\"color:#c0c0c0\">types</span></span><span style=\"color:#e0e0e0\"><span style=\"color:#e0e0e0\"> </span></span><span style=\"color:#c0c0c0\"><span style=\"color:#c0c0c0\">=</span></span><span style=\"color:#e0e0e0\"><span style=\"color:#e0e0e0\"> </span></span><span style=\"color:#00bfff\"><span style=\"color:#00bfff\">new</span></span><span style=\"color:#e0e0e0\"><span style=\"color:#e0e0e0\"> </span></span><span style=\"color:#00d2d2\"><span style=\"color:#00d2d2\">List</span></span><span style=\"color:#c0c0c0\"><span style=\"color:#c0c0c0\">&lt;</span></span><span style=\"color:#00bfff\"><span style=\"color:#00bfff\">string</span></span><span style=\"color:#c0c0c0\"><span style=\"color:#c0c0c0\">&gt;</span></span><span style=\"color:#e0e0e0\"><span style=\"color:#e0e0e0\">();<br></span></span><span style=\"color:#c0c0c0\"><span style=\"color:#c0c0c0\">types.Add</span></span><span style=\"color:#e0e0e0\"><span style=\"color:#e0e0e0\">(</span></span><span style=\"color:#fa8072\"><span style=\"color:#fa8072\">&quot;Specific Dates&quot;</span></span><span style=\"color:#e0e0e0\"><span style=\"color:#e0e0e0\">);<br></span></span><span style=\"color:#c0c0c0\"><span style=\"color:#c0c0c0\">types.Add</span></span><span style=\"color:#e0e0e0\"><span style=\"color:#e0e0e0\">(</span></span><span style=\"color:#fa8072\"><span style=\"color:#fa8072\">&quot;Recurring Week Days&quot;</span></span><span style=\"color:#e0e0e0\"><span style=\"color:#e0e0e0\">);<br></span></span><span style=\"color:#c0c0c0\"><span style=\"color:#c0c0c0\">types.Add</span></span><span style=\"color:#e0e0e0\"><span style=\"color:#e0e0e0\">(</span></span><span style=\"color:#fa8072\"><span style=\"color:#fa8072\">&quot;Day of Month&quot;</span></span><span style=\"color:#e0e0e0\"><span style=\"color:#e0e0e0\">);<br></span></span><span style=\"color:#e0e0e0\"><span style=\"color:#e0e0e0\"><span style=\"color:#c0c0c0\"><span style=\"color:#c0c0c0\">gridTypes.ItemsSource</span></span><span style=\"color:#e0e0e0\"><span style=\"color:#e0e0e0\"> </span></span><span style=\"color:#c0c0c0\"><span style=\"color:#c0c0c0\">=</span></span><span style=\"color:#e0e0e0\"><span style=\"color:#e0e0e0\"> </span></span><span style=\"color:#c0c0c0\"><span style=\"color:#c0c0c0\">types</span></span><span style=\"color:#e0e0e0\"><span style=\"color:#e0e0e0\">;<br><br><span style=\"color:#000000\">XAML:<br><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">&lt;toolkit:DataGrid</span></span><span style=\"color:#fa8072\"><span style=\"color:#fa8072\"> Name</span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">=</span></span><span style=\"color:#87df71\"><span style=\"color:#87df71\">&quot;gridTypes&quot;</span></span><span style=\"color:#fa8072\"><span style=\"color:#fa8072\"> CanUserResizeRows</span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">=</span></span><span style=\"color:#87df71\"><span style=\"color:#87df71\">&quot;False&quot;</span></span><span style=\"color:#fa8072\"><span style=\"color:#fa8072\"> Grid.RowSpan</span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">=</span></span><span style=\"color:#87df71\"><span style=\"color:#87df71\">&quot;5&quot;</span></span><span style=\"color:#fa8072\"><span style=\"color:#fa8072\"> MinRowHeight</span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">=</span></span><span style=\"color:#87df71\"><span style=\"color:#87df71\">&quot;20&quot;</span></span><span style=\"color:#fa8072\"><span style=\"color:#fa8072\"> RowHeight</span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">=</span></span><span style=\"color:#87df71\"><span style=\"color:#87df71\">&quot;20&quot;</span></span><span style=\"color:#fa8072\"><span style=\"color:#fa8072\"> HeadersVisibility</span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">=</span></span><span style=\"color:#87df71\"><span style=\"color:#87df71\">&quot;None&quot;</span></span><span style=\"color:#fa8072\"><span style=\"color:#fa8072\"> Width</span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">=</span></span><span style=\"color:#87df71\"><span style=\"color:#87df71\">&quot;100&quot;</span></span><span style=\"color:#fa8072\"><span style=\"color:#fa8072\"> GridLinesVisibility</span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">=</span></span><span style=\"color:#87df71\"><span style=\"color:#87df71\">&quot;None&quot;</span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">&gt;<br></span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">&nbsp;&lt;toolkit:DataGrid.RowBackground&gt;<br></span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">&nbsp; &lt;LinearGradientBrush</span></span><span style=\"color:#fa8072\"><span style=\"color:#fa8072\"> EndPoint</span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">=</span></span><span style=\"color:#87df71\"><span style=\"color:#87df71\">&quot;0.5,1&quot;</span></span><span style=\"color:#fa8072\"><span style=\"color:#fa8072\"> StartPoint</span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">=</span></span><span style=\"color:#87df71\"><span style=\"color:#87df71\">&quot;0.5,0&quot;</span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">&gt;<br></span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">&nbsp; &nbsp;&lt;GradientStop</span></span><span style=\"color:#fa8072\"><span style=\"color:#fa8072\"> Color</span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">=</span></span><span style=\"color:#87df71\"><span style=\"color:#87df71\">&quot;#FFFF0000&quot;</span></span><span style=\"color:#fa8072\"><span style=\"color:#fa8072\"> Offset</span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">=</span></span><span style=\"color:#87df71\"><span style=\"color:#87df71\">&quot;0&quot;</span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">/&gt;<br></span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">&nbsp;&nbsp; &lt;GradientStop</span></span><span style=\"color:#fa8072\"><span style=\"color:#fa8072\"> Color</span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">=</span></span><span style=\"color:#87df71\"><span style=\"color:#87df71\">&quot;#FF000000&quot;</span></span><span style=\"color:#fa8072\"><span style=\"color:#fa8072\"> Offset</span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">=</span></span><span style=\"color:#87df71\"><span style=\"color:#87df71\">&quot;1&quot;</span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">/&gt;<br></span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">&nbsp; &lt;/LinearGradientBrush&gt;<br></span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">&nbsp;&lt;/toolkit:DataGrid.RowBackground&gt;<br></span></span><span style=\"color:#7ee0ce\"><span style=\"color:#7ee0ce\">&lt;/toolkit:DataGrid&gt;</span></span>\r\n<p>&nbsp;</p>\r\n</span></span></span></span></span><span style=\"color:#e0e0e0\"><span style=\"color:#e0e0e0\"><span style=\"color:#e0e0e0\"><span style=\"color:#e0e0e0\"><span style=\"color:#000000\">But that only results in displaying numbers in the cells. 14, 19 and 12<br>I have also tried adding in items using the Items.Add(&quot;text here&quot;) but that doesn't even display anything, as well as creating a DataTemplate, but that just errors out. I'm pretty sure that I'm missing something simple.<br>Could anybody please help with this? I think it would be good to have a real simple and easy example of doing something like this.<br><br>Thanks in advance,<br>Ed</span></span></span></span></span></p>",
    "PostedDate": "2009-06-05T09:10:42.9-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "198326",
    "ThreadId": "58584",
    "Html": "<p>Ed,</p>\r\n<p>14, 19, and 12 are the lengths of the strings that you've added to your List!&nbsp; Since Length is the only public property exposed by string, this is why you are seeing this.&nbsp; If you set HeadersVisibility=&quot;Column&quot;, you will see the column name.&nbsp; Instead you should create an object that represents your data:</p>\r\n<p>&nbsp;&nbsp;&nbsp; public class Thing<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public string Name { get; set; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public string Color { get; set; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public bool IsHairy { get; set; }<br>&nbsp;&nbsp;&nbsp; }</p>\r\n<p>Then create a list of these and bind it to your grid:</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List&lt;Thing&gt; things = new List&lt;Thing&gt;();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; things.Add(new Thing() { Name = &quot;Water Bottle&quot;, Color = &quot;Blue&quot;, IsHairy = false });<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; things.Add(new Thing() { Name = &quot;Hamster&quot;, Color = &quot;Tan&quot;, IsHairy = true });<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; things.Add(new Thing() { Name = &quot;Cell Phone&quot;, Color = &quot;Black&quot;, IsHairy = false });<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; things.Add(new Thing() { Name = &quot;Hammer&quot;, Color = &quot;Silver&quot;, IsHairy = false });<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gridTypes.ItemsSource = things;</p>\r\n<p>Make sure you look into implementing the INotifyPropertyChanged interface on your object and using an ObservableCollection.&nbsp; By doing so, you can achieve two-way data binding.&nbsp; So when you change a property value or add an item to the collection, it gets reflected in the grid.&nbsp; And likewise when you edit an item in the grid, it gets reflected in the item in your collection. Dreamy!</p>\r\n<p>Thanks,<br>Jad</p>",
    "PostedDate": "2009-06-05T10:04:18.34-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "198331",
    "ThreadId": "58584",
    "Html": "<p>That worked great.<br>I didn't even need to change the XAML :)</p>",
    "PostedDate": "2009-06-05T10:18:39.723-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]