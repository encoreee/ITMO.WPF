[
  {
    "Id": "134205",
    "ThreadId": "40456",
    "Html": "Hi,<br>\r\n<br>\r\nI'm successfully using the automation peers to assist with my unit testing, whilst doing this I was able to get down to the DataGridCellItem but couldn't see a way of actually getting the datagridcell. For example I wanted to find a cell put it into edit mode then extract the textbox and set the value then commit the edit and check that the class behind the datatable was actully updated. I couldn't see any way of doing this so I had to make the OwningCell property public? I was wondering whether anything could be done with the TextBlockAutomationPeer? <br>\r\n<br>\r\nPlease advise on alternatives my example code is below.<br>\r\n<br>\r\nThanks<br>\r\n<br>\r\n<br>\r\nDim lobjDataGridPeer As DataGridAutomationPeer = Nothing<br>\r\nDim lobjScrollPeer As ScrollViewerAutomationPeer = Nothing<br>\r\n<br>\r\nDim lobjWindowPeer As WindowAutomationPeer = New WindowAutomationPeer(lobjFilterGrid)<br>\r\nDim lobjWinChildren As List(Of AutomationPeer) = lobjWindowPeer.GetChildren()<br>\r\nFor Each lobjAutomationPeer As AutomationPeer In lobjWinChildren<br>\r\nIf TypeOf lobjAutomationPeer Is DataGridAutomationPeer Then<br>\r\n&nbsp;&nbsp;&nbsp; lobjDataGridPeer = DirectCast(lobjAutomationPeer, DataGridAutomationPeer)<br>\r\nEnd If<br>\r\nNext<br>\r\nAssert.IsNotNull(lobjDataGridPeer, &quot;DataGrid Automation peer is nothing&quot;)<br>\r\n'<br>\r\n' Find me the row<br>\r\n' Walk around the children looking for the ScollingViewer this is the first child<br>\r\n'<br>\r\nDim lobjScrollPeer As ScrollViewerAutomationPeer = Nothing<br>\r\nFor Each lobjAutomationPeer As AutomationPeer In lobjDataGridPeer.GetChildren<br>\r\nIf TypeOf lobjAutomationPeer Is ScrollViewerAutomationPeer Then<br>\r\n&nbsp;&nbsp;&nbsp; lobjScrollPeer = DirectCast(lobjAutomationPeer, ScrollViewerAutomationPeer)<br>\r\nEnd If<br>\r\nNext<br>\r\n'<br>\r\n' Walk around the children of the scrolling viewer looking for the DataGridRowsPresenter<br>\r\n'<br>\r\nDim lobjColHdrButton As ButtonAutomationPeer = Nothing<br>\r\nDim lobjColHdrs As DataGridColumnHeadersPresenterAutomationPeer = Nothing<br>\r\nDim lobjGridRows As DataGridRowsPresenterAutomationPeer = Nothing<br>\r\nFor Each lobjAutomationPeer As AutomationPeer In lobjScrollPeer.GetChildren<br>\r\nIf TypeOf lobjAutomationPeer Is ButtonAutomationPeer Then<br>\r\n&nbsp;&nbsp;&nbsp; lobjColHdrButton = DirectCast(lobjAutomationPeer, ButtonAutomationPeer)<br>\r\nElseIf TypeOf lobjAutomationPeer Is DataGridColumnHeadersPresenterAutomationPeer Then<br>\r\n&nbsp;&nbsp;&nbsp; lobjColHdrs = DirectCast(lobjAutomationPeer, DataGridColumnHeadersPresenterAutomationPeer)<br>\r\nElseIf TypeOf lobjAutomationPeer Is DataGridRowsPresenterAutomationPeer Then<br>\r\n&nbsp;&nbsp;&nbsp; lobjGridRows = DirectCast(lobjAutomationPeer, DataGridRowsPresenterAutomationPeer)<br>\r\nEnd If<br>\r\nNext<br>\r\n'<br>\r\n' Walk around the DataGridRowsPresenter picking the row specified out otherwise just return the last one<br>\r\n'<br>\r\nlintRow = 0<br>\r\nDim lintRowCnt As Integer = 0<br>\r\nDim lobjDataGridItem As DataGridItemAutomationPeer = Nothing<br>\r\nFor Each lobjAutomationPeer As AutomationPeer In lobjGridRows.GetChildren<br>\r\nIf TypeOf lobjAutomationPeer Is DataGridItemAutomationPeer Then<br>\r\n&nbsp;&nbsp;&nbsp; lobjDataGridItem = DirectCast(lobjAutomationPeer, DataGridItemAutomationPeer)<br>\r\n&nbsp;&nbsp;&nbsp; If lintRowCnt = lintRow Then Exit For<br>\r\n&nbsp;&nbsp;&nbsp; lintRowCnt += 1<br>\r\nEnd If<br>\r\nNext<br>\r\nAssert.IsNotNull(lobjDataGridItem, &quot;lobjDataGridItem Automation peer is nothing for row &quot; &amp; lintRow)<br>\r\n'<br>\r\n' Find me the cell in the 2nd Column <br>\r\n' Walk around the Row looking for the column specified <br>\r\n'<br>\r\nlintColumn = 1<br>\r\nDim lintCnt As Integer = 0<br>\r\nDim lobjDataGridRowHdr As DataGridRowHeaderAutomationPeer = Nothing<br>\r\nDim lobjDataGridCellItem As DataGridCellItemAutomationPeer = Nothing<br>\r\nDim lobjDataGridDetailsPresenter As DataGridDetailsPresenterAutomationPeer = Nothing<br>\r\nFor Each lobjAutomationPeer As AutomationPeer In lobjDataGridItem.GetChildren<br>\r\nIf TypeOf lobjAutomationPeer Is DataGridRowHeaderAutomationPeer Then<br>\r\n&nbsp;&nbsp;&nbsp; lobjDataGridRowHdr = DirectCast(lobjAutomationPeer, DataGridRowHeaderAutomationPeer)<br>\r\nElseIf TypeOf lobjAutomationPeer Is DataGridCellItemAutomationPeer Then<br>\r\n&nbsp;&nbsp;&nbsp; lobjDataGridCellItem = DirectCast(lobjAutomationPeer, DataGridCellItemAutomationPeer)<br>\r\n&nbsp;&nbsp;&nbsp; If lintCnt = lintColumn Then Exit For<br>\r\n&nbsp;&nbsp;&nbsp; lintCnt += 1<br>\r\nElseIf TypeOf lobjAutomationPeer Is DataGridDetailsPresenterAutomationPeer Then<br>\r\n&nbsp;&nbsp;&nbsp; lobjDataGridDetailsPresenter = DirectCast(lobjAutomationPeer, DataGridDetailsPresenterAutomationPeer)<br>\r\nEnd If<br>\r\nNext<br>\r\nAssert.IsNotNull(lobjDataGridCellItem, &quot;DataGridCellItemAutomationPeer Automation peer is nothing for column &quot; &amp; lintColumn)<br>\r\n'<br>\r\n' Look at DataGridCellItem peer <br>\r\n'&nbsp;&nbsp; Children are the editable items behind the cell in this case CheckBox<br>\r\n'<br>\r\nDim lobjTextBlock As TextBlockAutomationPeer = Nothing<br>\r\nFor Each lobjAutomationPeer As AutomationPeer In lobjDataGridCellItem.GetChildren<br>\r\nIf TypeOf lobjAutomationPeer Is TextBlockAutomationPeer Then<br>\r\n&nbsp;&nbsp;&nbsp; lobjTextBlock = DirectCast(lobjAutomationPeer, TextBlockAutomationPeer)<br>\r\nEnd If<br>\r\nNext<br>\r\nAssert.IsNotNull(lobjTextBlock, &quot;Can't find the correct cell expecting a Textblock&quot;)<br>\r\n<br>\r\nDim lblnSelected As Boolean = DirectCast(lobjDataGridCellItem, ISelectionItemProvider).IsSelected<br>\r\nIf lblnSelected = False Then<br>\r\n&nbsp;&nbsp;&nbsp; DirectCast(lobjDataGridCellItem, ISelectionItemProvider).Select()<br>\r\nEnd If<br>\r\n<br>\r\nConsole.WriteLine(&quot;UpdateTextBoxCell:- Calling Invoke which should put cell into Edit mode&quot;)<br>\r\nDirectCast(lobjDataGridCellItem, IInvokeProvider).Invoke()<br>\r\n'<br>\r\n' Set the text<br>\r\n'<br>\r\nDim lobjDataGridCell As DataGridCell = TryCast(lobjDataGridCellItem.OwningCell, DataGridCell)<br>\r\nAssert.IsNotNull(lobjDataGridCell, &quot;UpdateTextBoxCell:- Can't get the datagrid cell to set the value&quot;)<br>\r\n<br>\r\nAssert.IsInstanceOfType(lobjDataGridCell.Content, GetType(TextBox), &quot;GridCell.Content not of the expected type (textbox) actual type (&quot; &amp; lobjDataGridCell.Content.ToString &amp; &quot;)&quot;)<br>\r\nIf TypeOf lobjDataGridCell.Content Is TextBox Then<br>\r\n&nbsp;&nbsp;&nbsp; Dim lobjEditingElement As TextBox = TryCast(lobjDataGridCell.Content, TextBox)<br>\r\n&nbsp;&nbsp;&nbsp; If lobjEditingElement IsNot Nothing Then<br>\r\n&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;UpdateTextBoxCell:- Got textbox setting it to a value&quot;)<br>\r\n&nbsp;&nbsp;&nbsp; lobjEditingElement.Text = lstrNewValue<br>\r\n&nbsp;&nbsp;&nbsp; End If<br>\r\nEnd If<br>\r\nConsole.WriteLine(&quot;UpdateTextBoxCell:- Calling Invoke which should commit cell&quot;)<br>\r\nDirectCast(lobjDataGridCellItem, IInvokeProvider).Invoke()<br>\r\n<br>\r\n<br>\r\n<br>\r\n",
    "PostedDate": "2008-11-21T04:17:14.64-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "134317",
    "ThreadId": "40456",
    "Html": "Hi amitchel7,<br>\r\n<br>\r\nThe purpose of automation peers is never to expose the actual object itself. The reason being automation peers might be used from processes different from the object's process like from Screen Readers in which case you wont have access to the actual object. In fact if we are in the same process why do we need an automation peer, we can directly access the object itself.<br>\r\n<br>\r\nAnways <a href=\"http://blogs.msdn.com/llobo/archive/2007/09/06/testing-using-wpf-ui-automation.aspx\">http://blogs.msdn.com/llobo/archive/2007/09/06/testing-using-wpf-ui-automation.aspx</a> should provide more insight about automation itself.\r\n",
    "PostedDate": "2008-11-21T10:28:13.39-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]