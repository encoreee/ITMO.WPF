[
  {
    "Id": "197567",
    "ThreadId": "58409",
    "Html": "<p>I originally posted this question in the MSDN WPF forums but since my questions were specific to the WPF Datagrid I thought I'd repost it here. &nbsp;Any help would be highly appreciated.</p>\r\n<p><span style=\"font-family:Verdana;font-size:11px\">\r\n<div>I have a couple of question related to the WPF datagrid found here:&nbsp;<a style=\"list-style-type:none;text-decoration:none;color:#0033cc;padding:0px;margin:0px;border:initial none initial\" href=\"http://wpf.codeplex.com/Release/ProjectReleases.aspx?ReleaseId=25047\">http://wpf.codeplex.com/Release/ProjectReleases.aspx?ReleaseId=25047</a></div>\r\n<div><br></div>\r\n<div>1) I use this datagrid in one of my applications and I use its ItemSource property to bind it to a collection. &nbsp;The datagrid properly displays all properties exposed by the object represented by the collection. &nbsp;However, is there a way to prevent the datagrid from displaying certain properties as columns? &nbsp;For example, I use a marker property to determine if I need to highlight a particular row but the datagrid ends up displaying that property too as a column. &nbsp;How can I avoid this?</div>\r\n<div><br></div>\r\n<div>2) Is there a way I can push up a few rows to the very top of the datagrid? &nbsp;I have implemented a Find functionality which might take a partial input and highlights any row whose primary key matches the partial input. &nbsp;Initially I thought I'd simply highlight the relevant items (which is why I use that marker property I mentioned in the previous point). &nbsp;The only problem happens when some rows are not in the visible area of the datagrid. &nbsp;If they are somewhere way down, obviously the user will have to scroll down and see the hits. &nbsp;Therefore I was wondering if I could retrieve all the matching rows and move them to the top of the datagrid. &nbsp;Is this possible?</div>\r\n</span></p>",
    "PostedDate": "2009-06-03T22:43:34.563-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "197575",
    "ThreadId": "58409",
    "Html": "<p>1) There is an event that fires on each auto-generated column - AutoGeneratingColumn or something along the lines of that. You may want to look into it. Alternatively, you could disable automatic column generation and define the columns in either XAML or code-behind yourself.</p>\r\n<p>2) You could sort based on your marker property first, and whatever the user wants second. Just insert it at the top of the sort order list when the sorting is changed. It won't exactly &quot;move&quot; the rows but it will have the same effect from the user's point of view.</p>",
    "PostedDate": "2009-06-03T23:07:18.02-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]