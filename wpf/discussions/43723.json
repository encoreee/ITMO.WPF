[
  {
    "Id": "145441",
    "ThreadId": "43723",
    "Html": "Hi,<br>\r\nUsing a very simple WPF program (single window with a Toolkit Datagrid on it), I have a datatable (from an SQL query), which has some datetime type columns (birth date and such).<br>\r\n<br>\r\nAt\r\npresent, the time is always displayed in MM/dd/yyyy hh:mm:ss format,\r\nI'd like it to be displayed in UK shortdate style (e.g dd/MM/yyyy).<br>\r\n<br>\r\nMy datagrid is simply bound to the table with no explicitly defined columns in the XAML code.<br>\r\n&lt;dg:DataGrid Name=&quot;dataGrid1&quot; /&gt;<br>\r\n<br>\r\nwith the line in my '.cs' file of <br>\r\n<br>\r\ndataGrid1.ItemsSource = resultTable.DefaultView;<br>\r\n<br>\r\nto bind / create the respective columns.<br>\r\n<br>\r\nI\r\nhave scoured google and cannot find any info on how I can override the\r\ndate mask, or even programmatically override the template for the\r\ndatagrid columns.<br>\r\n<br>\r\nIdeally, I would like to build the datagrid\r\ncolumns dynamically and set up the template structure, but if I try to\r\nbuild the columns, I end up with double the amount of columns as it\r\nstill seems to add the original table. If I remove the Itemsource\r\nsetting line, I end up with column headers, but no data.&nbsp; Everything\r\nI've seen so far assumes the columns are 'hard-coded' within the XAML\r\nbut asI am looking to create a generic view which can be called for\r\nvarious tables and column combinations, where column header templates\r\nand column tpye templates could be set up based on the resulttable\r\nstructure.<br>\r\n<br>\r\nIf anyone can shed any light on this I would be most grateful,&nbsp; I am presuming of course, control of column templates can be handled at the code level.<br>\r\n",
    "PostedDate": "2009-01-08T08:36:56.95-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "145723",
    "ThreadId": "43723",
    "Html": "Found out how to do it eventually, not exactly obvious but at least now *I* know how to do it.<br>\r\n",
    "PostedDate": "2009-01-09T08:28:26.987-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "146465",
    "ThreadId": "43723",
    "Html": "Can you please post your solution, I've got the same issue here. All I can do is to format every column by myself. I wondered if you have any better solution.\r\n",
    "PostedDate": "2009-01-12T15:01:03.58-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "146607",
    "ThreadId": "43723",
    "Html": "When you say you had to format each column, do you mean explicitly or in a dynamically handled loop?<br>\r\nMy solution basically involved determining the column type then creating a templated column for datetime fields from the datatable.<br>\r\nIf you're having to do it explicitly in XAML or naming columns directly then my solution may be of help.<br>\r\n<br>\r\nThe goal was to allow me to create an advanced view which we could utilise in a generic &quot;search&quot; window regardless of the table and fields used, pretty sure I've nailed it but needs more testing.<br>\r\n<br>\r\n<br>\r\n",
    "PostedDate": "2009-01-13T01:31:30.837-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]