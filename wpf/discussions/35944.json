[
  {
    "Id": "119432",
    "ThreadId": "35944",
    "Html": "<p style=\"margin:0in 0in 0pt\">I built a sort dialog to make it a little easier for my users to do a multi column sorts on the datagrid.&nbsp;&nbsp;My datagrid is bound to a datatable.&nbsp;&nbsp;To sort the datagrid,&nbsp;I&nbsp;just sort the bound datatable.&nbsp; However, if I click on a column header to sort one column, my custom sorting stops working.&nbsp; <br>\r\n<br>\r\nIs there a better way to do this?&nbsp; Is there a way to sort the datagrid instead of the datatable programmatically?&nbsp; If so, does anyone have some sample code that shows how to sort a datagrid programmatically? </p>\r\n",
    "PostedDate": "2008-09-18T12:49:19.34-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "119454",
    "ThreadId": "35944",
    "Html": "You should avoid touching the actual data whenever possible.&nbsp; Fortunately, the controls you see are not actually bound to the data and are instead bound to an intermediate representation of type ICollectionView.&nbsp; ICollectionView is designed to handle sorting, filtering and grouping (excellent explanation here: http://www.beacosta.com/blog/?cat=13).&nbsp; For sorting, you can use the SortDescriptions collection, which evaluates each SortDescription in the order it appears each time the ICollectionView is refreshed.&nbsp; Lets say you have a collection of Users that have properties FirstName and LastName.&nbsp; The code below shows how you can sort these objects without touching the actual data.&nbsp; <br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; ICollectionView view = CollectionViewSource.GetDefaultView(usersDataGrid.ItemsSource);<br>\r\n&nbsp;&nbsp;&nbsp; view.SortDescriptions.Clear();<br>\r\n&nbsp;&nbsp;&nbsp; view.SortDescriptions.Add(new SortDescription(&quot;FirstName&quot;, ListSortDirection.Descending));<br>\r\n&nbsp;&nbsp;&nbsp; view.SortDescriptions.Add(new SortDescription(&quot;LastName&quot;, ListSortDirection.Descending));<br>\r\n&nbsp;&nbsp;&nbsp; view.Refresh();<br>\r\n<br>\r\nI assume that the DataGrid uses this same methodology internally when you click a column header.&nbsp; Therefore, if you wish to have additional controls to handle sorting, you should clear out the SortDescriptions collection before adding your own to eliminate conflicts or unexpected behavior.<br>\r\n",
    "PostedDate": "2008-09-18T15:13:30.697-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "119466",
    "ThreadId": "35944",
    "Html": "That is correct in that the DataGrid internally&nbsp;just creates a sort description when you click on the column header.&nbsp; It also clears any other sort descriptions when you click on the column header.&nbsp; Here are a couple posts with samples where sorting is customized.&nbsp; Hopefully they can help.&nbsp; Also, if you are interested in understanding the implementation details just look in the region named &quot;Auto Sort&quot; in DataGrid.cs in the CTP.<br>\r\n<br>\r\n<a href=\"http://blogs.msdn.com/jgoldb/archive/2008/08/26/improving-microsoft-datagrid-ctp-sorting-performance.aspx\">http://blogs.msdn.com/jgoldb/archive/2008/08/26/improving-microsoft-datagrid-ctp-sorting-performance.aspx</a><br>\r\n<br>\r\n<a href=\"http://blogs.msdn.com/vinsibal/archive/2008/08/29/wpf-datagrid-tri-state-sorting-sample.aspx\">http://blogs.msdn.com/vinsibal/archive/2008/08/29/wpf-datagrid-tri-state-sorting-sample.aspx</a><br>\r\n",
    "PostedDate": "2008-09-18T17:15:20.98-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "120461",
    "ThreadId": "35944",
    "Html": "I just had a chance to look at this today.&nbsp; It works great.&nbsp; Thanks for your help!\r\n",
    "PostedDate": "2008-09-23T13:28:40.69-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]