[
  {
    "Id": "126298",
    "ThreadId": "38070",
    "Html": "Hi,<br>\r\n<br>\r\nI have a situation where I have arbitrary sized two dimensional array (i.e int[][]) which I should show to user using datagrid. So far I've managed to create custom template columns and create bindings so that the data is shown properly. So far the problem with this solution seems to be data manipulation which tends to be a bit messy or tricky.<br>\r\n<br>\r\nI'd like to solve this using VM-M-V pattern and wrap each data cell into ViewModel object which would be something like this:<br>\r\n<br>\r\n<code>\r\nclass MyViewModel : INotifyPropertyChanged<br>\r\n{<br>\r\n&nbsp;&nbsp; int value;<br>\r\n<br>\r\n&nbsp;&nbsp; bool isSelected;<br>\r\n<br>\r\n&nbsp;&nbsp; public int Value<br>\r\n&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get { return value; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set { this.value = value; OnPropertyChanged(&quot;Value&quot;); }<br>\r\n&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp; public bool IsSelected<br>\r\n&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get { return isSelected; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set { isSelected = vale; OnPropertyChanged(&quot;IsSelected&quot;);<br>\r\n&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp; ....<br>\r\n}<br>\r\n</code>\r\n<br>\r\nIs it possible to bind ViewModel's IsSelected property to DataGridCell's IsSelected property somehow so that I could easily iterate all the selected cells without using DataGrid's API?<br>\r\n",
    "PostedDate": "2008-10-20T08:15:02.38-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "157594",
    "ThreadId": "38070",
    "Html": "I know this post is a bit old but I did find a way to do this:<br>\r\n<br>\r\n&lt;my:DataGrid.ItemContainerStyle&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Style TargetType=&quot;{x:Type my:DataGridRow}&quot;&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter Property=&quot;IsSelected&quot; Value=&quot;{Binding IsSelected, Mode=TwoWay}&quot; /&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter Property=&quot;FontWeight&quot; Value=&quot;Normal&quot; /&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Style.Triggers&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Trigger Property=&quot;IsSelected&quot; Value=&quot;True&quot;&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter Property=&quot;FontWeight&quot; Value=&quot;Bold&quot; /&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Trigger&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Style.Triggers&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Style&gt;<br>\r\n&lt;/my:DataGrid.ItemContainerStyle&gt;<br>\r\n<br>\r\nI hope this is helpful to someone.&nbsp; This is really handy when doing MVVM.<br>\r\n",
    "PostedDate": "2009-02-13T16:18:25.907-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]