[
  {
    "Id": "222877",
    "ThreadId": "65439",
    "Html": "<p>I have created a simple DataGridUnboundedColumn class that is derived from DataGridBoundColumn and can be used to supply custom text of FrameworkElement for the cell.<br><br>You simply subscribe to the CellFormating event and set the CellElement in the EventArgs to the custom element that will be show. It also possible to set just CellText in the EventArgs - in this case the TextBlock with the CellText will be shown in the Grid.<br><br>The following examples shows how to use it:<br><br>XAML:<br><br>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">dg</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DataGrid</span> <span style=\"color:Red\">Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">DataGrid1</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">AutoGenerateColumns</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">False</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">dg</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DataGrid.Columns</span><span style=\"color:Blue\">&gt;</span>\r\n            <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">dg</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DataGridTextColumn</span> <span style=\"color:Red\">Header</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Name</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Binding</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Path=Name}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n            <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">myColumn</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DataGridUnboundedColumn</span> <span style=\"color:Red\">x:Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">AddressColumn</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Header</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Address</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n        <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">dg</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DataGrid.Columns</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">dg</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DataGrid</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<br><br>CODE:<br><br>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>       <span style=\"color:Blue\">public</span> MyPage()\r\n        {\r\n            InitializeComponent();\r\n    \r\n            AddressColumn.CellFormating += <span style=\"color:Blue\">new</span> UnboundedColumnEventHandler(AddressColumn_CellFormating);\r\n        }\r\n    \r\n        <span style=\"color:Blue\">void</span> AddressColumn_CellFormating(<span style=\"color:Blue\">object</span> sender, UnboundedColumnEventArgs e)\r\n        {\r\n            IPerson person;\r\n    \r\n            person= e.DataItem <span style=\"color:Blue\">as</span> IPerson;\r\n    \r\n            <span style=\"color:Blue\">if</span> (person!= <span style=\"color:Blue\">null</span>)\r\n                e.CellText = <span style=\"color:Blue\">string</span>.Format(<span style=\"color:#A31515\">&quot;{0}, {1} {2}&quot;</span>, person.Address, person.PostalCode, person.City);\r\n        }\r\n</pre>\r\n</div>\r\n<br><br>The DataGridUnboundedColumn&nbsp; implementation is here:<br><br>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>    <span style=\"color:Blue\">class</span><span style=\"color:MediumTurquoise\"> DataGridUnboundedColumn : DataGridBoundColumn\r\n    </span>{\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">event</span> UnboundedColumnEventHandler CellFormating;\r\n    \r\n        <span style=\"color:Blue\">public</span> DataGridUnboundedColumn()\r\n        {\r\n            <span style=\"color:Blue\">this</span>.IsReadOnly = <span style=\"color:Blue\">true</span>;\r\n        }\r\n    \r\n        <span style=\"color:Blue\">protected</span> <span style=\"color:Blue\">override</span> FrameworkElement GenerateEditingElement(DataGridCell cell, <span style=\"color:Blue\">object</span> dataItem)\r\n        {\r\n            <span style=\"color:Blue\">return</span> <span style=\"color:Blue\">null</span>;\r\n        }\r\n    \r\n        <span style=\"color:Blue\">protected</span> <span style=\"color:Blue\">override</span> FrameworkElement GenerateElement(DataGridCell cell, <span style=\"color:Blue\">object</span> dataItem)\r\n        {\r\n            FrameworkElement shownElement;\r\n            UnboundedColumnEventArgs eventArgs;\r\n    \r\n            <span style=\"color:Blue\">if</span> (CellFormating == <span style=\"color:Blue\">null</span>)\r\n                <span style=\"color:Blue\">return</span> <span style=\"color:Blue\">null</span>;\r\n    \r\n    \r\n            eventArgs = <span style=\"color:Blue\">new</span> UnboundedColumnEventArgs(cell, dataItem);\r\n    \r\n            <span style=\"color:Green\">// call the event</span>\r\n            CellFormating(<span style=\"color:Blue\">this</span>, eventArgs);\r\n    \r\n            shownElement = <span style=\"color:Blue\">null</span>;\r\n    \r\n            <span style=\"color:Green\">// check the data set in the eventArgs</span>\r\n            <span style=\"color:Blue\">if</span> (eventArgs.CellElement != <span style=\"color:Blue\">null</span>)\r\n            {\r\n                <span style=\"color:Green\">// show the set eventArgs.CellElement</span>\r\n                shownElement = eventArgs.CellElement;\r\n            }\r\n            <span style=\"color:Blue\">else</span> <span style=\"color:Blue\">if</span> (eventArgs.CellText != <span style=\"color:Blue\">null</span>)\r\n            {\r\n                <span style=\"color:Green\">// show the CellText in TextBlock</span>\r\n                TextBlock textBlock = <span style=\"color:Blue\">new</span> TextBlock();\r\n                textBlock.Text = eventArgs.CellText;\r\n    \r\n                shownElement = textBlock;\r\n            }\r\n            <span style=\"color:Blue\">else</span>\r\n            {\r\n                <span style=\"color:Green\">// nothing set</span>\r\n            }\r\n    \r\n            <span style=\"color:Blue\">return</span> shownElement;\r\n        }\r\n    }\r\n    \r\n    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">delegate</span> <span style=\"color:Blue\">void</span> UnboundedColumnEventHandler(<span style=\"color:Blue\">object</span> sender, UnboundedColumnEventArgs e);\r\n    \r\n    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">class</span><span style=\"color:MediumTurquoise\"> UnboundedColumnEventArgs : EventArgs\r\n    </span>{\r\n        <span style=\"color:Blue\">public</span> DataGridCell Cell { <span style=\"color:Blue\">get</span>; <span style=\"color:Blue\">set</span>; }\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">object</span> DataItem { <span style=\"color:Blue\">get</span>; <span style=\"color:Blue\">set</span>; }\r\n    \r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> The subscriber of the event can set the CellText.</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> In this case the TextBlock is used to display the text.</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> NOTE that if CellElement is not null, the CellText will not be used but insted a CellElement will be shown</span>\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">string</span> CellText { <span style=\"color:Blue\">get</span>; <span style=\"color:Blue\">set</span>; }\r\n    \r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> The subscribed can set the FrameworkElement that will be shown for this cell.</span>\r\n        <span style=\"color:Gray\">///</span><span style=\"color:Green\"> If the CellElement is null, the CellText will be used to show the TextBlock</span>\r\n        <span style=\"color:Gray\">///</span> <span style=\"color:Gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:Blue\">public</span> FrameworkElement CellElement { <span style=\"color:Blue\">get</span>; <span style=\"color:Blue\">set</span>; }\r\n    \r\n        <span style=\"color:Blue\">public</span> UnboundedColumnEventArgs()\r\n            : <span style=\"color:Blue\">base</span>()\r\n        { }\r\n    \r\n        <span style=\"color:Blue\">public</span> UnboundedColumnEventArgs(DataGridCell cell, <span style=\"color:Blue\">object</span> dataItem)\r\n            : <span style=\"color:Blue\">base</span>()\r\n        {\r\n            Cell = cell;\r\n            DataItem = dataItem;\r\n        }\r\n    }\r\n</pre>\r\n</div>\r\n</p>",
    "PostedDate": "2009-08-13T02:13:16.713-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]