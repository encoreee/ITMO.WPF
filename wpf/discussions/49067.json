[
  {
    "Id": "163928",
    "ThreadId": "49067",
    "Html": "Hello,<br>\r\n<br>\r\n I have a list of objects say recipients, where each object - recipient, contains a property wich is another list of objects say products. Each product has its own properties like description and quantity.  products are added to all the recipients in the list by checking products out in a separate checkboxlist. What I wnat to do is: bind the list of recipeints to a datagrid in a way that the datagrid would dispaly basic information about recipients (name, surname, address) in the firs few columns, the rest of the columns would be created dynamically as one would checkout different products in checkboxlist. the column's header would be bound to product's  description, and the values presented in the column to quantity of the product. <br>\r\n<br>\r\nI can't find a way how to do this kind of binding. <br>\r\n<br>\r\nThank you for your help.<br>\r\nBest regards <br>\r\nJurij\r\n",
    "PostedDate": "2009-03-03T08:45:06.783-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "163989",
    "ThreadId": "49067",
    "Html": "Hello Jurij,<br>\r\n<br>\r\nThere is no XAML only solution for this. You need to handle CheckBox.IsChecked change of the checkbox list and add/removes columns to/from DataGrid accordingly.<br>\r\n<br>\r\nFollowing is an example for adding such a column....<br>\r\n<br>\r\nDataGridTextColumn dgtc = new DataGridTextColumn();<br>\r\n//Set all the needed properties like width etc.<br>\r\n//Let 'index' be the index of object in products list for which to create the column<br>\r\ndgtc.Header = products[index].Description;<br>\r\ndgtc.Binding = new Binding(&quot;products[&quot; + index + &quot;].Quantity&quot;);<br>\r\n//set display index if needed<br>\r\ndataGrid.Columns.Add(dgtc);<br>\r\n<br>\r\nFor perf reasons it would be good if you could batch adding of these columns.\r\n",
    "PostedDate": "2009-03-03T11:01:38.21-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "164006",
    "ThreadId": "49067",
    "Html": "Hello!<br>\r\n<br>\r\n<strong>Thank you for a quick reply</strong>. <br>\r\n<br>\r\nI have done almost the same in my code. However I don't see exactly how your solution solves my problem. I don't see how does your list of products relates to products that recipients have asigned to their list property products. I don't know how to get the list products out of the recipients and bind it to the created columns. Each recipient has a list of products, The list of products is the same for all recipients displayed in my datagrid. I add/remove a products to each recipient's list of products as checkboxes get checked/unchecked (I iterate through the list of recipients and add/remove products). The problem I find is that I want to display these reciepents with their products in the same  datagrid and be able to edit the quantity properyt for each product for each recipient. I want my row in the datagrid to look like this:<br>\r\n<br>\r\n|name|surename|address|quantity of product1|quantity of product2|...|quantity of productN|<br>\r\n<br>\r\n<br>\r\n|.| represents columns, whereas number of products can vary.<br>\r\n<br>\r\n<br>\r\nBest regards<br>\r\nJurij\r\n",
    "PostedDate": "2009-03-03T11:24:09.953-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "164405",
    "ThreadId": "49067",
    "Html": "If the index of the product in productlist is known and will remain same during the life time of DataGrid, you can bind to elements of the list using its index. The following binding should work for you...<br>\r\n<br>\r\ndgtc.Binding = new Binding(<strong>&quot;products[&quot; + index + &quot;].Quantity&quot;</strong>); //where index is 0 for product1, 1 for product2 etc.<br>\r\n<br>\r\nSo effectively the path of binding would be &quot;products[0].Quantity&quot; for 1st element and so on.\r\n",
    "PostedDate": "2009-03-04T09:42:41.52-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "164472",
    "ThreadId": "49067",
    "Html": "Hello,<br>\r\n<br>\r\nI have tried your solution. I paste the source code below. I can get different products displayed, I can enter a values to a cell, but when that cell looses focus all the cells in that column get updated to that cell.<br>\r\n<br>\r\nHere is my solution:<br>\r\n<br>\r\nI add Name, surname and checkbox column in my XAML code like this:<br>\r\n <span style=\"color:#0000ff;font-size:13px\">&lt;</span><span style=\"color:#a31515;font-size:13px\">my</span><span style=\"color:#0000ff;font-size:13px\">:</span><span style=\"color:#a31515;font-size:13px\">DataGrid</span><span style=\"color:#ff0000;font-size:13px\"> Name</span><span style=\"color:#0000ff;font-size:13px\">=&quot;dgvProductsWPF&quot;</span><span style=\"color:#ff0000;font-size:13px\"> Margin</span><span style=\"color:#0000ff;font-size:13px\">=&quot;10,0,10,0&quot;</span><span style=\"color:#ff0000;font-size:13px\"> Background</span><span style=\"color:#0000ff;font-size:13px\">=&quot;White&quot;</span><span style=\"color:#ff0000;font-size:13px\"> CanUserAddRows</span><span style=\"color:#0000ff;font-size:13px\">=&quot;False&quot;</span><span style=\"font-size:13px\"> </span><span style=\"color:#ff0000;font-size:13px\">RowHeaderWidth</span><span style=\"color:#0000ff;font-size:13px\">=&quot;21&quot;</span><span style=\"color:#ff0000;font-size:13px\"> AutoGenerateColumns</span><span style=\"color:#0000ff;font-size:13px\">=&quot;False&quot;</span><span style=\"color:#ff0000;font-size:13px\"> AlternatingRowBackground</span><span style=\"color:#0000ff;font-size:13px\">=&quot;LightGray&quot;</span><span style=\"font-size:13px\"> </span><span style=\"color:#ff0000;font-size:13px\">EnableColumnVirtualization</span><span style=\"color:#0000ff;font-size:13px\">=&quot;True&quot;&gt;<br>\r\n    </span><span style=\"color:#0000ff;font-size:13px\">&lt;</span><span style=\"color:#a31515;font-size:13px\">my</span><span style=\"color:#0000ff;font-size:13px\">:</span><span style=\"color:#a31515;font-size:13px\">DataGrid.Columns</span><span style=\"color:#0000ff;font-size:13px\">&gt;<br>\r\n</span><span style=\"color:#0000ff;font-size:13px\">        &lt;</span><span style=\"color:#a31515;font-size:13px\">my</span><span style=\"color:#0000ff;font-size:13px\">:</span><span style=\"color:#a31515;font-size:13px\">DataGridTextColumn</span><span style=\"color:#ff0000;font-size:13px\"> Width</span><span style=\"color:#0000ff;font-size:13px\">=&quot;SizeToCells&quot;</span><span style=\"color:#ff0000;font-size:13px\"> Header</span><span style=\"color:#0000ff;font-size:13px\">=&quot;Name&quot;</span><span style=\"color:#ff0000;font-size:13px\"> Binding</span><span style=\"color:#0000ff;font-size:13px\">=&quot;{</span><span style=\"color:#a31515;font-size:13px\">Binding</span><span style=\"color:#ff0000;font-size:13px\"> Name</span><span style=\"color:#0000ff;font-size:13px\">}&quot;/&gt;<br>\r\n</span><span style=\"color:#0000ff;font-size:13px\">        &lt;</span><span style=\"color:#a31515;font-size:13px\">my</span><span style=\"color:#0000ff;font-size:13px\">:</span><span style=\"color:#a31515;font-size:13px\">DataGridTextColumn</span><span style=\"color:#ff0000;font-size:13px\"> Width</span><span style=\"color:#0000ff;font-size:13px\">=&quot;SizeToCells&quot;</span><span style=\"color:#ff0000;font-size:13px\"> Header</span><span style=\"color:#0000ff;font-size:13px\">=&quot;Surename&quot;</span><span style=\"color:#ff0000;font-size:13px\"> Binding</span><span style=\"color:#0000ff;font-size:13px\">=&quot;{</span><span style=\"color:#a31515;font-size:13px\">Binding</span><span style=\"color:#ff0000;font-size:13px\"> Surename</span><span style=\"color:#0000ff;font-size:13px\">}&quot;/&gt;<br>\r\n</span><span style=\"color:#0000ff;font-size:13px\">        &lt;</span><span style=\"color:#a31515;font-size:13px\">my</span><span style=\"color:#0000ff;font-size:13px\">:</span><span style=\"color:#a31515;font-size:13px\">DataGridCheckBoxColumn</span><span style=\"color:#ff0000;font-size:13px\"> Width</span><span style=\"color:#0000ff;font-size:13px\">=&quot;SizeToCells&quot;</span><span style=\"color:#ff0000;font-size:13px\"> Header</span><span style=\"color:#0000ff;font-size:13px\">=&quot;Chosen&quot;</span><span style=\"color:#ff0000;font-size:13px\"> Binding</span><span style=\"color:#0000ff;font-size:13px\">=&quot;{</span><span style=\"color:#a31515;font-size:13px\">Binding</span><span style=\"color:#ff0000;font-size:13px\">Chosen</span><span style=\"color:#0000ff;font-size:13px\">}&quot;/&gt;<br>\r\n</span><span style=\"color:#0000ff;font-size:13px\">    &lt;/</span><span style=\"color:#a31515;font-size:13px\">my</span><span style=\"color:#0000ff;font-size:13px\">:</span><span style=\"color:#a31515;font-size:13px\">DataGrid.Columns</span><span style=\"color:#0000ff;font-size:13px\">&gt;<br>\r\n</span><span style=\"color:#0000ff;font-size:13px\">&lt;/</span><span style=\"color:#a31515;font-size:13px\">my</span><span style=\"color:#0000ff;font-size:13px\">:</span><span style=\"color:#a31515;font-size:13px\">DataGrid</span><span style=\"color:#0000ff;font-size:13px\">&gt;<br>\r\n<br>\r\n<span style=\"font-size:13px\"><strong>Than in my </strong><span style=\"font-size:13px\"><strong>cb_Checked event handler I handel a chekcbox checked event:<br>\r\n</strong><span style=\"font-size:13px\">\r\n<p><span style=\"color:#0000ff;font-size:13px\">void</span><span style=\"font-size:13px\"> cb_Checked(</span><span style=\"color:#0000ff;font-size:13px\">object</span><span style=\"font-size:13px\"> sender, </span><span style=\"color:#2b91af;font-size:13px\">RoutedEventArgs</span><span style=\"font-size:13px\"> e)<br>\r\n{<br>\r\n</span><span style=\"color:#0000ff;font-size:13px\">    try<br>\r\n</span><span style=\"font-size:13px\">    {<br>\r\n</span><span style=\"color:#2b91af;font-size:13px\">        </span><span style=\"font-size:13px\"><br>\r\n</span><span style=\"color:#2b91af;font-size:13px\">        Product</span><span style=\"font-size:13px\"> productBinding = </span><span style=\"color:#0000ff;font-size:13px\">new</span><span style=\"font-size:13px\"> Product</span><span style=\"font-size:13px\">() { Quantity = 0, Description = sender.Tag.toString() }; </span><span style=\"color:#008000;font-size:13px\">// create new instance of a product to add. This instance created just to keep track of products added to the recipient. The list is kept in a separate list lstproducts<br>\r\n</span><span style=\"font-size:13px\">        lstProducts.Add(productBinding); <span style=\"color:#008000\">//add the newly checked product to the list od products whcih has a private scope for wpf form I work on.</span><br>\r\n</span><span style=\"color:#0000ff;font-size:13px\">        int</span><span style=\"font-size:13px\"> i = lstNarocil.IndexOf(productBinding); </span><span style=\"color:#008000;font-size:13px\">// check the index of the added product. The order of the added products is kept the same as in the list belonding to each recipient<br>\r\n</span><span style=\"color:#0000ff;font-size:13px\"><br>\r\n        foreach</span><span style=\"font-size:13px\"> (</span><span style=\"color:#2b91af;font-size:13px\">Recipient</span><span style=\"font-size:13px\"> recipient1 </span><span style=\"color:#0000ff;font-size:13px\">in</span><span style=\"font-size:13px\"> lstRecipients) </span><span style=\"color:#008000;font-size:13px\">// iterate through the list of recipients to add them a new product<br>\r\n</span><span style=\"font-size:13px\">        {<br>\r\n</span><span style=\"color:#2b91af;font-size:13px\">            <span style=\"color:#2b91af\">  Product </span></span><span style=\"font-size:13px\">product1 = </span><span style=\"color:#0000ff;font-size:13px\">new</span><span style=\"font-size:13px\"> </span><span style=\"color:#2b91af;font-size:13px\">Product</span><span style=\"font-size:13px\">() { Quantity = 0, Produkt = produkt }; <span style=\"color:#008000\">//for each recipient create a new instance of the newly added product</span><br>\r\n             recipient1..ListProducts.Add(product1); <span style=\"color:#008000\">//add the instance of product to the recipient</span><br>\r\n        }<br>\r\n<br>\r\n         dgvNarocilaWPF.ItemsSource = <span style=\"color:#0000ff;font-size:13px\">null</span><span style=\"font-size:13px\">;  <span style=\"color:#008000\">//remove the old datasource for the datagrid </span></span><br>\r\n</span><span style=\"color:#2b91af;font-size:13px\"><br>\r\n        Binding</span><span style=\"font-size:13px\"> myBinding = </span><span style=\"color:#0000ff;font-size:13px\">new</span><span style=\"font-size:13px\"> </span><span style=\"color:#2b91af;font-size:13px\">Binding</span><span style=\"font-size:13px\">(</span><span style=\"color:#a31515;font-size:13px\">&quot;ListProducts[&quot;</span><span style=\"font-size:13px\"> + i + </span><span style=\"color:#a31515;font-size:13px\">&quot;].Quantity&quot;</span><span style=\"font-size:13px\">); <span style=\"color:#008000\">//set  the property to bind to</span><br>\r\n        myBinding.Mode = </span><span style=\"color:#2b91af;font-size:13px\">BindingMode</span><span style=\"font-size:13px\">.TwoWay;  <span style=\"color:#008000\">//allow datagrid to transmit updates back to the datasource<br>\r\n</span>        myBinding.Source = lstRecipients;  <span style=\"color:#008000\">//define the datasource - list of recipients<br>\r\n</span></span><span style=\"color:#2b91af;font-size:13px\">        <br>\r\n        DataGridTextColumn</span><span style=\"font-size:13px\"> clm = </span><span style=\"color:#0000ff;font-size:13px\">new</span><span style=\"font-size:13px\"> </span><span style=\"color:#2b91af;font-size:13px\">DataGridTextColumn</span><span style=\"font-size:13px\">();  <span style=\"color:#008000\">//create new column</span><br>\r\n        clm.Binding = myBinding;  <span style=\"color:#008000\">//define binding for the new column<br>\r\n        </span>clm.Header = productBinding.Description; <span style=\"color:#008000\">//name the new column </span><br>\r\n        dgvNarocilaWPF.Columns.Add(clm); <span style=\"color:#008000\">//add the new column </span><br>\r\n        <br>\r\n       </span><span style=\"font-size:13px\"><br>\r\n       dgvNarocilaWPF.ItemsSource = lstPrejemnikov;  <span style=\"color:#008000\">//to update the look of the datagrid<br>\r\n</span></span><span style=\"font-size:13px\">    }<br>\r\n</span><span style=\"color:#0000ff;font-size:13px\">    catch</span><span style=\"font-size:13px\"> (</span><span style=\"color:#2b91af;font-size:13px\">Exception</span><span style=\"font-size:13px\">)<br>\r\n    {<br>\r\n</span><span style=\"color:#008000;font-size:13px\">        //throw;<br>\r\n</span><span style=\"font-size:13px\">     }<br>\r\n}<br>\r\n<br>\r\nThnak you for your advice.<br>\r\nJurij\r\n<p>&nbsp;</p>\r\n</span></p>\r\n</span></span></span></span>\r\n",
    "PostedDate": "2009-03-04T11:37:51.823-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "165045",
    "ThreadId": "49067",
    "Html": "You should not set myBinding.Source to lstRecipients. myBinding will use DataContext (i.e, Recipient of that row). Hence no need to set any Source.\r\n",
    "PostedDate": "2009-03-05T14:02:05.303-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "165072",
    "ThreadId": "49067",
    "Html": "wooow!!!!!<br>\r\n<br>\r\nI just can not believe it!!! I comment one line - THE line and it works!!! :)<br>\r\n<br>\r\nBest Regards<br>\r\nJurij<br>\r\n<br>\r\n",
    "PostedDate": "2009-03-05T15:05:15.34-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]