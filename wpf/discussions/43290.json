[
  {
    "Id": "143864",
    "ThreadId": "43290",
    "Html": "Is it possible to iterate over the rows over a datagrid programmatically?<br>\r\n<br>\r\n(I need it for unit tests of a data grid.  Both for testing the displayed contents, and for actually selecting a row)\r\n",
    "PostedDate": "2009-01-01T08:59:03.45-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "145017",
    "ThreadId": "43290",
    "Html": "You can use the GetRow helper function that is described on this thread, <a href=\"http://www.codeplex.com/wpf/Thread/View.aspx?ThreadId=34065\">http://www.codeplex.com/wpf/Thread/View.aspx?ThreadId=34065</a>.\r\n",
    "PostedDate": "2009-01-07T05:29:07.79-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "145162",
    "ThreadId": "43290",
    "Html": "Synchronicity!  I've started using both the GetRow() and GetCell() helper functions described in the thread you're referring to... today.<br>\r\n<br>\r\nBut I am getting some strange NullReferenceExceptions, that i didn't get with the old approach (selecting everything and using the SelectedCells property, to find the cell values).<br>\r\n<br>\r\nHere's the stack trace:<br>\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.<br>\r\nat System.Windows.Controls.VirtualizingStackPanel.InsertContainer(Int32 childIndex, UIElement container, Boolean isRecycled)<br>\r\nat System.Windows.Controls.VirtualizingStackPanel.AddContainerFromGenerator(Int32 childIndex, UIElement child, Boolean newlyRealized)<br>\r\nat System.Windows.Controls.VirtualizingStackPanel.BringIndexIntoView(Int32 index)<br>\r\nat Microsoft.Windows.Controls.Primitives.DataGridRowsPresenter.InternalBringIndexIntoView(Int32 index) in DataGridRowsPresenter.cs: line 48<br>\r\nat Microsoft.Windows.Controls.DataGrid.ScrollRowIntoView(Object item) in DataGrid.cs: line 1617<br>\r\nat Microsoft.Windows.Controls.DataGrid.ScrollIntoView(Object item) in DataGrid.cs: line 1506<br>\r\nat Common.DataGridExtensions.GetRow(DataGrid dataGrid, Int32 index) in DataGridExtensions.cs: line 51<br>\r\nat StandardDevices.Test.SorterConfigurationPanelTest.GetSortDefinitionFromGridRow(DataGrid grid, Int32 rowIndex) in SorterConfigurationPanelTest.cs: line 415<br>\r\nat StandardDevices.Test.SorterConfigurationPanelTest.&lt;TestUpAndDownButtons&gt;b__12() in SorterConfigurationPanelTest.cs: line 218<br>\r\nat TestUtilities.CrossThreadTestRunner.&lt;&gt;c__DisplayClass1.&lt;RunSingleThreadedApartment&gt;b__0() in CrossThreadTestRunner.cs: line 34<br>\r\nat TestUtilities.CrossThreadTestRunner.ThrowExceptionPreservingStack(Exception exception) in CrossThreadTestRunner.cs: line 62<br>\r\nat TestUtilities.CrossThreadTestRunner.RunSingleThreadedApartment(ThreadStart userDelegate) in CrossThreadTestRunner.cs: line 51<br>\r\nat StandardDevices.Test.SorterConfigurationPanelTest.TestUpAndDownButtons() in SorterConfigurationPanelTest.cs: line 163 <br>\r\n<br>\r\nWhat I've done here is to manipulate the model collection in the click handlers for the up and down buttons, and then call UpdateTarget() on the binding expression.<br>\r\n<br>\r\nBut this is perhaps not the recommended way to move rows (and add and delete rows) in a WPF DataGrid...?\r\n",
    "PostedDate": "2009-01-07T11:30:04.093-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "198955",
    "ThreadId": "43290",
    "Html": "<p>Please call DataGrid.UpdateLayout() before calling DataGrid.ScrollIntoView(...) inside the GetRow() and GetCell()</p>",
    "PostedDate": "2009-06-08T03:33:22.713-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "462162",
    "ThreadId": "43290",
    "Html": "<h1><span style=\"font-size:14pt\">// to interate through all the rows&nbsp;, all the cells and alert the cell value</span></h1>\r\n<h1><span style=\"font-size:14pt\">&nbsp;</span></h1>\r\n<p>&nbsp;var row = GetDataGridRows(DataGrid_Standard);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// go through each row in the datagrid <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (Microsoft.Windows.Controls.DataGridRow r in row)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataRowView rv = (DataRowView)r.Item;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (DataGridColumn column in DataGrid_Standard.Columns)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (column.GetCellContent(r) is TextBlock)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TextBlock cellContent = column.GetCellContent(r) as TextBlock;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MessageBox.Show(cellContent.Text);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else if (column.GetCellContent(r) is CheckBox)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CheckBox chk = column.GetCellContent(r) as CheckBox;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MessageBox .Show (chk.IsChecked.ToString());<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;</p>\r\n<p>public IEnumerable&lt;Microsoft.Windows.Controls.DataGridRow&gt; GetDataGridRows(Microsoft.Windows.Controls.DataGrid grid)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var itemsSource = grid.ItemsSource as IEnumerable;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (null == itemsSource) yield return null;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (var item in itemsSource)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var row = grid.ItemContainerGenerator.ContainerFromItem(item) as Microsoft.Windows.Controls.DataGridRow;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (null != row) yield return row;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>",
    "PostedDate": "2010-07-01T05:57:37.85-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1074952",
    "ThreadId": "43290",
    "Html": "I am getting following error<br />\n<blockquote>\nThe type or namespace name 'Controls' does not exist in the namespace 'Microsoft.Windows' (are you missing an assembly reference?)<br />\n</blockquote>\n",
    "PostedDate": "2013-07-30T22:43:48.417-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]