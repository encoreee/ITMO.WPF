[
  {
    "Id": "152379",
    "ThreadId": "45658",
    "Html": "How do you automatically update WPF DataGrid control if an object's value was changed that bound (DataGrid1.ItemsSource = lstMyValues) to it?  Let's say I have a list of a items ( shown below ).<br>\r\n<br>\r\npublic class MyValues<br>\r\n{<br>\r\n    public string One { get; set; }<br>\r\n    public string Two { get; set; }<br>\r\n    public string Three { get; set; }<br>\r\n}<br>\r\n<br>\r\nOne of values changes.  Two = ( new value ).  How do get the displayed info in datagrid to automatically update?<br>\r\n<br>\r\nAlso, what if I wanted to add another to list.  How could you add to list and update in datagrid?  Same for deleting an item from list?<br>\r\n<br>\r\nThanks in advance.\r\n",
    "PostedDate": "2009-01-29T17:58:49.06-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "152394",
    "ThreadId": "45658",
    "Html": "You'll need to have your MyValues class implement INotifyPropertyChanged and add the associated plumbing.<br>\r\nCheck out the following tutorial:&nbsp; <a href=\"http://coredotnet.blogspot.com/2006/05/wpf-data-binding-tutorial.html\">http://coredotnet.blogspot.com/2006/05/wpf-data-binding-tutorial.html</a><br>\r\n<br>\r\nListing #4 should guide you in the direction you want as far your class.<br>\r\n<br>\r\nAs for your DataGrid, have a look at some of these for some in depth info:<br>\r\nhttp://blogs.msdn.com/jaimer/archive/2008/08/13/dabbling-around-the-new-wpf-datagrid-part-1.aspx<br>\r\nhttp://blogs.msdn.com/jaimer/archive/2008/08/13/datagrid-part-2-show-me-some-code.aspx<br>\r\n<br>\r\nHowever, once you've implemented INotifyPropertyChanged, your data grid should start seeing the value updates automatically.<br>\r\n<br>\r\npublic class MyValues : INotifyPropertyChanged {<br>\r\n&nbsp;&nbsp;&nbsp; private string one;<br>\r\n&nbsp;&nbsp;&nbsp; private string two;<br>\r\n&nbsp;&nbsp;&nbsp; private string three;<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public event PropertyChangedEventHandler PropertyChanged;<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public string One {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get { return one; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set { one = value; OnPropertyChanged(new PropertyChangedEventArgs(&quot;One &quot;)); }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public string Two {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get { return two; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set { two= value; OnPropertyChanged(new PropertyChangedEventArgs(&quot;Two&quot;)); }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public string Three{<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get { return three; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set { three= value; OnPropertyChanged(new PropertyChangedEventArgs(&quot;Three&quot;)); }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void OnPropertyChanged(PropertyChangedEventArgs e) {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (PropertyChanged != null) {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PropertyChanged(this, e);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n}<br>\r\n<br>\r\nin your XAML for your DataGrid's column definitions:<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &lt;custom:DataGrid&nbsp; x:Name=&quot;DataGrid1&quot;&gt;<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;custom:DataGrid.Columns&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;custom:DataGridTextColumn Header=&quot;One&quot; Binding=&quot;{Binding Path=One}&quot; /&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;custom:DataGridTextColumn Header=&quot;Two&quot; Binding=&quot;{Binding Path=Two}&quot; /&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;custom:DataGridTextColumn Header=&quot;Three&quot; Binding=&quot;{Binding Path=Three}&quot; /&gt;<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &lt;/custom:DataGrid.Columns&gt;<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/custom:DataGrid&gt;<br>\r\n<br>\r\nHope that gets you going.<br>\r\n<br>\r\n<br>\r\n",
    "PostedDate": "2009-01-29T19:55:35.633-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "152523",
    "ThreadId": "45658",
    "Html": "That did the trick.  Thanks for the info.\r\n",
    "PostedDate": "2009-01-30T06:54:26.8-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]