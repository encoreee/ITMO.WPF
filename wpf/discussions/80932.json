[
  {
    "Id": "277519",
    "ThreadId": "80932",
    "Html": "<p>I'm trying to have a RibbonWindow as a Region, but I'm having some problems. I'm creating an UserControl to be a View, and it contains a RibbonBar, but when I add it to the RibbonWindow, it get's over the window title bar, not allowing the user to move, resize, maximize, etc...</p>\r\n<p>Can someone help me?</p>\r\n<p>Tks.</p>",
    "PostedDate": "2010-01-15T03:02:26.787-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "279253",
    "ThreadId": "80932",
    "Html": "<p>I'm&nbsp;also&nbsp;trying to&nbsp;know that!</p>\r\n<p>Please anybody help me!</p>\r\n<p>Thanks.</p>",
    "PostedDate": "2010-01-19T17:34:03.7-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "279952",
    "ThreadId": "80932",
    "Html": "<p>Try having a look here:<br><br>http://blog.joachim.at/?p=44</p>\r\n<p>http://bartekszafko.pl/2008/11/29/en-wpf-ribbon-in-prism-applications/</p>\r\n<p>http://stalamoni.blogspot.com/2009/02/creating-ribbontab-programatically.html</p>\r\n<p>&nbsp;</p>\r\n<p>GE</p>",
    "PostedDate": "2010-01-21T02:20:03.897-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "279971",
    "ThreadId": "80932",
    "Html": "<p>OK heres how I've been able to do this:</p>\r\n<p>Shell.xaml:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">r</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">Ribbon</span> <span style=\"color:Red\">DockPanel.Dock</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Top</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">cal:RegionManager.RegionName</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{x:Static Constants:RegionNames.Ribbon}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n            <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">r</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">RibbonTab</span> <span style=\"color:Red\">Label</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Test Tab</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">cal:RegionManager.RegionName</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{x:Static Constants:RegionNames.RibbonTab}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">r</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">Ribbon</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>Bootstrapper.cs</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&nbsp;</span><div style=\"color:Black;background-color:White\"><pre><div style=\"color:Black;background-color:White\"><pre>        <span style=\"color:Blue\">protected</span> <span style=\"color:Blue\">override</span> RegionAdapterMappings ConfigureRegionAdapterMappings()\r\n        {\r\n            <span style=\"color:Blue\">base</span>.ConfigureRegionAdapterMappings();\r\n            <span style=\"color:Blue\">var</span> mappings = Container.TryResolve&lt;RegionAdapterMappings&gt;();\r\n            <span style=\"color:Blue\">if</span> (mappings != <span style=\"color:Blue\">null</span>)\r\n            {\r\n                mappings.RegisterMapping(<span style=\"color:Blue\">typeof</span>(Ribbon), Container.Resolve&lt;IRibbonRegionAdapter&gt;());\r\n                mappings.RegisterMapping(<span style=\"color:Blue\">typeof</span>(RibbonTab), Container.Resolve&lt;IRibbonTabRegionAdapter&gt;());\r\n            }\r\n            <span style=\"color:Blue\">return</span> mappings;\r\n        }\r\n</pre>\r\n</div>\r\n</pre>\r\n</div>\r\n</pre>\r\n</div>\r\n<p>RibbonRegionAdapter.cs</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> <span style=\"color:Blue\">class</span> RibbonRegionAdapter : RegionAdapterBase&lt;Ribbon&gt;, IRibbonRegionAdapter\r\n    {\r\n        \r\n        <span style=\"color:Blue\">public</span> RibbonRegionAdapter(IRegionBehaviorFactory regionBehaviorFactory) \r\n            : <span style=\"color:Blue\">base</span>(regionBehaviorFactory)\r\n        {\r\n        }\r\n\r\n        <span style=\"color:Blue\">protected</span> <span style=\"color:Blue\">override</span> <span style=\"color:Blue\">void</span> Adapt(IRegion region, Ribbon regionTarget)\r\n        {\r\n            region.Views.CollectionChanged += <span style=\"color:Blue\">delegate</span>\r\n            {\r\n\r\n                region.Views.ToList().ForEach(item =&gt;\r\n                                                  {\r\n                                                      \r\n                                                      <span style=\"color:Blue\">if</span>(item <span style=\"color:Blue\">is</span> RibbonTab)\r\n                                                      {\r\n                                                          <span style=\"color:Blue\">var</span> ribbanTab = item <span style=\"color:Blue\">as</span> RibbonTab;\r\n                                                          <span style=\"color:Blue\">if</span> (<span style=\"color:Blue\">string</span>.IsNullOrEmpty(ribbanTab.Name)) <span style=\"color:Blue\">return</span>;\r\n\r\n                                                          <span style=\"color:Blue\">if</span> (!regionTarget.Tabs.Contains(ribbanTab))\r\n                                                          {\r\n                                                              regionTarget.Tabs.Add(ribbanTab);\r\n                                                          }                                                          \r\n                                                      }\r\n\r\n                                                  });              \r\n\r\n            };\r\n        }\r\n\r\n        <span style=\"color:Blue\">protected</span> <span style=\"color:Blue\">override</span> IRegion CreateRegion()\r\n        {\r\n            <span style=\"color:Blue\">return</span> <span style=\"color:Blue\">new</span> SingleActiveRegion();\r\n        }\r\n\r\n    }\r\n</pre>\r\n</div>\r\n<p>IRibbonRegionAdapter.cs</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> <span style=\"color:Blue\">interface</span> IRibbonRegionAdapter : IRegionAdapter\r\n    {\r\n    }\r\n</pre>\r\n</div>\r\n<pre>RibbonTabRegionAdapter.cs</pre>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> <span style=\"color:Blue\">class</span> RibbonTabRegionAdapter : RegionAdapterBase&lt;RibbonTab&gt;, IRibbonTabRegionAdapter\r\n    {\r\n\r\n        <span style=\"color:Blue\">public</span> RibbonTabRegionAdapter(IRegionBehaviorFactory regionBehaviorFactory)\r\n            : <span style=\"color:Blue\">base</span>(regionBehaviorFactory)\r\n        {\r\n        }\r\n\r\n        <span style=\"color:Blue\">protected</span> <span style=\"color:Blue\">override</span> <span style=\"color:Blue\">void</span> Adapt(IRegion region, RibbonTab regionTarget)\r\n        {\r\n            region.Views.CollectionChanged += <span style=\"color:Blue\">delegate</span>\r\n            {\r\n\r\n              region.Views.ToList().ForEach(item =&gt;\r\n                                            {\r\n\r\n                                                <span style=\"color:Blue\">if</span> (item <span style=\"color:Blue\">is</span> RibbonGroup)\r\n                                                {\r\n\r\n                                                    <span style=\"color:Blue\">var</span> ribbonGroup = item <span style=\"color:Blue\">as</span> RibbonGroup;\r\n\r\n                                                    <span style=\"color:Blue\">if</span> (regionTarget.Groups.Count() == 0) <span style=\"color:Blue\">return</span>;\r\n                                                    <span style=\"color:Blue\">if</span> (<span style=\"color:Blue\">string</span>.IsNullOrEmpty(ribbonGroup.Name)) <span style=\"color:Blue\">return</span>;\r\n\r\n                                                    <span style=\"color:Blue\">if</span> (!regionTarget.Groups.Where(a =&gt; a.Name == ribbonGroup.Name).Any())\r\n                                                    {\r\n                                                        regionTarget.Groups.Add(ribbonGroup);\r\n                                                    }\r\n\r\n                                                }                                                                                            \r\n\r\n                                            });\r\n\r\n                };\r\n        }\r\n\r\n        <span style=\"color:Blue\">protected</span> <span style=\"color:Blue\">override</span> IRegion CreateRegion()\r\n        {\r\n            <span style=\"color:Blue\">return</span> <span style=\"color:Blue\">new</span> SingleActiveRegion();\r\n        }\r\n\r\n    }\r\n<br></pre>\r\n</div>\r\n<pre>IRibbonTabRegionAdapter.cs<br>&nbsp;<br><span style=\"color:Blue\">public</span> <span style=\"color:Blue\">interface</span> IRibbonTabRegionAdapter : IRegionAdapter\r\n    {\r\n    }\r\n</pre>\r\n<p>Register your interface with the UnityContainer:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>.RegisterType&lt;IRibbonRegionAdapter, RibbonRegionAdapter&gt;()<br>.RegisterType&lt;IRibbonTabRegionAdapter, RibbonTabRegionAdapter&gt;()</pre>\r\n</div>\r\n<p>Within your module:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">var</span> ribbonTab2 = <span style=\"color:Blue\">new</span> RibbonTab\r\n                                 {\r\n                                     Name = <span style=\"color:#A31515\">&quot;RibbonTab&quot;</span>,\r\n                                     Label = <span style=\"color:#A31515\">&quot;Ribbon Tab&quot;</span>\r\n                                 };\r\n\r\n            <span style=\"color:Blue\">var</span> ribbonGroup2 = <span style=\"color:Blue\">new</span> RibbonGroup\r\n                                   {\r\n                                       Name = <span style=\"color:#A31515\">&quot;RibbonGroup&quot;</span>\r\n                                   };\r\n\r\n            <span style=\"color:Blue\">var</span> ribbonButton2 = <span style=\"color:Blue\">new</span> RibbonButton\r\n                                    {\r\n                                        Name = <span style=\"color:#A31515\">&quot;RibbonButton&quot;</span>,\r\n                                        Command = <span style=\"color:Blue\">new</span> RibbonCommand\r\n                                                      {\r\n                                                          LabelTitle = <span style=\"color:#A31515\">&quot;Ribbon Command&quot;</span>\r\n                                                      },\r\n                                        ToolTip = <span style=\"color:#A31515\">&quot;test test test&quot;</span>\r\n                                    };\r\n\r\n            ribbonGroup2.Controls.Add(ribbonButton2);\r\n\r\n            ribbonTab2.Groups.Add(ribbonGroup2);\r\n\r\n            RegionManager.Regions[RegionNames.Ribbon].Add(ribbonTab2);\r\n\r\n            <span style=\"color:Green\">//var ribbonTab = new RibbonTab</span>\r\n            <span style=\"color:Green\">//                    {</span>\r\n            <span style=\"color:Green\">//                        Name = &quot;RibbonTab&quot;,</span>\r\n            <span style=\"color:Green\">//                        Label = &quot;Ribbon Tab&quot;</span>\r\n            <span style=\"color:Green\">//                    };</span>\r\n\r\n            <span style=\"color:Blue\">var</span> ribbonGroup = <span style=\"color:Blue\">new</span> RibbonGroup\r\n                                  {\r\n                                      Name = <span style=\"color:#A31515\">&quot;RibbonGroup&quot;</span>\r\n                                  };\r\n\r\n            <span style=\"color:Blue\">var</span> ribbonGroup3 = <span style=\"color:Blue\">new</span> RibbonGroup\r\n                                   {\r\n                                       Name = <span style=\"color:#A31515\">&quot;RibbonGroup3&quot;</span>\r\n                                   };\r\n            \r\n            <span style=\"color:Blue\">var</span> ribbonButton = <span style=\"color:Blue\">new</span> RibbonButton\r\n                                   {\r\n                                       Name = <span style=\"color:#A31515\">&quot;RibbonButton&quot;</span>,\r\n                                       Command = <span style=\"color:Blue\">new</span> RibbonCommand\r\n                                                     {\r\n                                                         LabelTitle = <span style=\"color:#A31515\">&quot;Ribbon Command&quot;</span>\r\n                                                     },\r\n                                       ToolTip = <span style=\"color:#A31515\">&quot;test test test&quot;</span>\r\n                                   };\r\n\r\n            <span style=\"color:Blue\">var</span> ribbonButton3 = <span style=\"color:Blue\">new</span> RibbonButton\r\n                                    {\r\n                                        Name = <span style=\"color:#A31515\">&quot;RibbonButton3&quot;</span>,\r\n                                        Command = <span style=\"color:Blue\">new</span> RibbonCommand\r\n                                                      {\r\n                                                          LabelTitle = <span style=\"color:#A31515\">&quot;Ribbon Command 2&quot;</span>\r\n                                                      }\r\n                                    };\r\n\r\n            ribbonGroup.Controls.Add(ribbonButton);\r\n            ribbonGroup.Controls.Add(ribbonButton3);\r\n\r\n            <span style=\"color:Green\">//ribbonTab.Groups.Add(ribbonGroup);</span>\r\n\r\n            RegionManager.Regions[RegionNames.RibbonTab].Add(ribbonGroup);\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>Changing RegionNames.RibbonTab and RegionNames.Ribbon to be your region names (mine are stored in a static class).</p>\r\n<p>and away you go...</p>\r\n<p>GE</p>",
    "PostedDate": "2010-01-21T03:35:39.43-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]