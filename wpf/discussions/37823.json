[
  {
    "Id": "125402",
    "ThreadId": "37823",
    "Html": "Hi,<br>\r\n<br>\r\nI have the DataGrid CTP and I update the ObservableCollection that it is associated with by adding and removing items to it.&nbsp; What I am seeing is that the grid always sets the selectedindex to zero any time any items are added or removed.<br>\r\n<br>\r\nIs there any way to keep the selected index (or selected item the same - even when items are added / removed from the underlying collection)?<br>\r\n<br>\r\nThanks,<br>\r\nJon<br>\r\n<br>\r\n",
    "PostedDate": "2008-10-15T12:32:52.08-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "125933",
    "ThreadId": "37823",
    "Html": "I'm not seeing this issue at all.&nbsp; Could you explain more on how you are setting the ItemsSource and how you are doing the add/remove.<br>\r\n",
    "PostedDate": "2008-10-17T15:04:39.673-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "136568",
    "ThreadId": "37823",
    "Html": "Hi! I see the same thing in my app.<div><br></div><div>I've bound the Itemssource to DataTable.DefaultView. When I refresh the datatable the selected index jumps back to the first line. How should I prevent the DataGrid from selecting index 0 after a refresh, or even better, keep the old index?</div><div>(SelectionUnit=FullRow)</div><div><br></div><div>Larsi </div>",
    "PostedDate": "2008-12-01T05:16:12.613-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "136577",
    "ThreadId": "37823",
    "Html": "Hi,<br>\r\n<br>\r\nThe WPF binding framework constructs a view which wraps your data, adding functionality like sorting, grouping and currency (i.e. selected items). Certain operations will destroy the state held in teh view, such as deleting the data that is wrapped then reconstructing it.<br>\r\n<br>\r\nAs Vincent mentioned above, how are you refreshing your data?<br>\r\n<br>\r\nColin E.<br>\r\n--<br>\r\nhttp://wpfadventures.wordpress.com/ - my WPF blog<br>\r\nhttp://www.codeproject.com/KB/WPF/WPFDataGridExamples.aspx - WPF DataGrid Practical Examples <br>\r\n",
    "PostedDate": "2008-12-01T05:40:58.01-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "136600",
    "ThreadId": "37823",
    "Html": "Replacing the entire DataTable.<div><br></div><div>void UpdateDate(DataTable myNewDataTable)</div><div>{</div><div>MyDataView =  (BindingListCollectionView)CollectionViewSource.GetDefaultView(myNewDataTable.DefaultView);</div><div>}</div>",
    "PostedDate": "2008-12-01T07:05:57.34-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "136603",
    "ThreadId": "37823",
    "Html": "Hi,<br>\r\n<br>\r\nWell ... that's your problem. How is the binding framework supposed to know that you have replaced the binding with a refreshed copy of the same data? <br>\r\n<br>\r\nIf you are going to do this - you will have to record the selection state before your replace the DataTable, then re-apply it afterwards.<br>\r\n<br>\r\nRegards,<br>\r\nColin E.<br>\r\n--<br>\r\nhttp://wpfadventures.wordpress.com/ - my WPF blog<br>\r\nhttp://www.codeproject.com/KB/WPF/WPFDataGridExamples.aspx - WPF DataGrid Practical Examples <br>\r\n",
    "PostedDate": "2008-12-01T07:18:03.093-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "136605",
    "ThreadId": "37823",
    "Html": "Hi Thanks for answering. I see the problem. What is the recommend way to do it? The update is done regulary fromn a background thread.<br>\r\n<br>\r\nIf I should record the selection state - How to do it? Thanks for your help!<br>\r\n",
    "PostedDate": "2008-12-01T07:28:18.733-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "136629",
    "ThreadId": "37823",
    "Html": "Hmmm ... thats a tricky one.<br>\r\n<br>\r\nIf you have SelectionMode=FullRow the following will work:<br>\r\n<br>\r\nprivate List&lt;string&gt; selectedPrimaryKeys = null;<br>\r\n<br>\r\nprivate void Button_Click(object sender, RoutedEventArgs e)<br>\r\n{<br>\r\n&nbsp;&nbsp;&nbsp; // record the primary key values for all selected rows<br>\r\n&nbsp;&nbsp;&nbsp; selectedPrimaryKeys = new List&lt;string&gt;();<br>\r\n&nbsp;&nbsp;&nbsp; foreach (DataRowView row in dataGrid.SelectedItems)<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; selectedPrimaryKeys.Add((string)row[&quot;CustomerID&quot;]);<br>\r\n&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; dataGrid.LoadingRow += new EventHandler&lt;DataGridRowEventArgs&gt;(dataGrid_LoadingRow);<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; // refresh the table<br>\r\n&nbsp;&nbsp;&nbsp; CustomerDataProvider provider = new CustomerDataProvider();<br>\r\n&nbsp;&nbsp;&nbsp; this.DataContext = provider.GetCustomers();<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; dataGrid.LoadingRow -= new EventHandler&lt;DataGridRowEventArgs&gt;(dataGrid_LoadingRow);<br>\r\n&nbsp;&nbsp;&nbsp; selectedPrimaryKeys = null;<br>\r\n<br>\r\n}<br>\r\n<br>\r\nvoid dataGrid_LoadingRow(object sender, DataGridRowEventArgs e)<br>\r\n{<br>\r\n&nbsp;&nbsp;&nbsp; if (selectedPrimaryKeys == null)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; // find the DataTable row that this DataGrid row is assocaited with<br>\r\n&nbsp;&nbsp;&nbsp; DataRowView rowView = e.Row.Item as DataRowView;<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; // find its PK<br>\r\n&nbsp;&nbsp;&nbsp; string pk = (string)rowView[&quot;CustomerID&quot;];<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; // determien whether it shoudl be selected<br>\r\n&nbsp;&nbsp;&nbsp; if (selectedPrimaryKeys.Contains(pk))<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.Row.IsSelected = true;<br>\r\n&nbsp;&nbsp;&nbsp; }<br>\r\n}<br>\r\n<br>\r\nBasically, it iterates over the SelectedItems collection to record the primary keys of the selected items. We then refresh the data, as each new row is added to the DataGrid, we inspect its associated bound DataRowView to see whether it should be selected or not.<br>\r\n<br>\r\nHope that helps,<br>\r\nRegards,<br>\r\nColin E.<br>\r\n--<br>\r\nhttp://wpfadventures.wordpress.com/ - my WPF blog<br>\r\nhttp://www.codeproject.com/KB/WPF/WPFDataGridExamples.aspx - WPF DataGrid Practical Examples <br>\r\n<br>\r\n<br>\r\n",
    "PostedDate": "2008-12-01T08:09:05.23-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]