[
  {
    "Id": "187863",
    "ThreadId": "55630",
    "Html": "Hi there.<div><br></div><div>I'm trying to add some columns to a data grid that is defined in the RowDetailsTemplate of an outer grid.</div><div><br></div><div>I see there is a method on the dataGrid.RowDetailsTemplate.LoadContent  that will return the nested dataGrid.  I can get ahold of the nested grid and programmatically, .NET allows me to add new columns however, when displayed, the new columns don't show.</div><div><br></div><div>When this loop is completed, I can see the new columns added to the datagrid.....   what steps do I need to take to update the datagrid defn in the RowDetailsTemplate?</div><div><br></div><div><br></div><div>Here is a snippet:</div><div><div> //get the datagrid from the RowDetailsTemplate   which is the nested Grid</div><div>                Microsoft.Windows.Controls.DataGrid dataGridOrders = dataGridCutomers.RowDetailsTemplate.LoadContent() as DataGrid;</div><div>                if (dataGridOrders != null)</div><div>                {</div><div>                    #region dynamically create the columns that need to bind to  child attribute</div><div>                    //use the first element as a template to create the columns</div><div>                    //the Assumption is that there will always be the same number of columns for any grid </div><div>                    //or nested grid (though the parent grid and child grid may not need the same #)</div><div>                    //</div><div>                    for (int count = 0; count &lt; Model[0].Orders[0].OrderDetails.Count; count++)</div><div>                    {</div><div><br></div><div>                        DataGridTextColumn newColumnX = new DataGridTextColumn();</div><div>                        //The header can come from somewhere else...this is for example purposes</div><div><br></div><div>                        newColumnX.Header = &quot;OrderDetails.Quantity &quot; + count.ToString();</div><div>                        Binding bindingX = new Binding(&quot;OrderDetails[&quot; + count.ToString() + &quot;].Quantity&quot;);</div><div>                        bindingX.Mode = System.Windows.Data.BindingMode.TwoWay;</div><div>                        newColumnX.Binding = bindingX;</div><div>                        dataGridOrders.Columns.Add(newColumnX);</div><div>                    }</div><div>                    #endregion</div><div>                }</div><div><br></div><div><br></div><div>Thanks!</div></div>",
    "PostedDate": "2009-05-07T13:16:26.937-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "195426",
    "ThreadId": "55630",
    "Html": "<p>To update everyone:</p>\r\n<p>To make this work... we can't use the&nbsp;<span style=\"color:#30332d\">dataGridCutomers.RowDetailsTemplate.LoadContent(). &nbsp;It only provides is a copy of the template and doesn't impact the actual RowDetailsTemplate.</span></p>\r\n<p><span style=\"color:#30332d\">Instead, I have an event delegate to the grid's&nbsp;LoadingRowDetails event and moved the code above, &nbsp;to that event.</span></p>\r\n<p><span style=\"color:#30332d\">Thanks for the pointer Samantha!</span></p>\r\n<p><span style=\"color:#30332d\">Tracy</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"color:#30332d\"><br></span></p>",
    "PostedDate": "2009-05-28T14:08:36.283-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]