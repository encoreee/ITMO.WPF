[
  {
    "Id": "483251",
    "ThreadId": "224402",
    "Html": "<p>I have a DataGrid with conditional formating for the Background using a Converter (xaml below).<br>When a Cell is selected the background&nbsp;I set with the converter is over the blue background of the selection. So the user doesn't know if the&nbsp;Cell is selected or not.<br>How can I do to&nbsp;return null from the converter if the Cell is selected?<br>And how can I do to assure that the converter is invoked when selection change?</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">DataGridTemplateColumn</span> <span style=\"color:red\">Header</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Price</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">DataGridTemplateColumn.CellTemplate</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">DataTemplate</span><span style=\"color:blue\">&gt;</span>\r\n            <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">TextBlock</span> <span style=\"color:red\">Background</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{Binding Price, Converter={StaticResource myConverter}}</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">Text</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{Binding Price}</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n        <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">DataTemplate</span><span style=\"color:blue\">&gt;</span>\r\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">DataGridTemplateColumn.CellTemplate</span><span style=\"color:blue\">&gt;</span>\r\n<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">DataGridTemplateColumn</span><span style=\"color:blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-08-22T06:31:10.85-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "483369",
    "ThreadId": "224402",
    "Html": "<p>I'm using a PriorityBinding for the background, with the first binding linked to the ancestor DataGridCell, property IsSelected.<br>The second binding paint the background dependent on data items.<br>So if the cell is selected ther first binding returns a value and the second binding isn't used. If the cell is not selected the first binding returns DependencyProperty.UnsetValue and the second binding is in charge.<br>It seems to be working very nicely.<br><br>xaml</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">DataGridTemplateColumn</span> <span style=\"color:red\">Header</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Price</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">DataGridTemplateColumn.CellTemplate</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">DataTemplate</span><span style=\"color:blue\">&gt;</span>\r\n            <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">TextBlock</span> <span style=\"color:red\">Text</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{Binding Price}</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n                <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">TextBlock.Background</span><span style=\"color:blue\">&gt;</span>\r\n                    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">PriorityBinding</span><span style=\"color:blue\">&gt;</span>\r\n                        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">PriorityBinding.Bindings</span><span style=\"color:blue\">&gt;</span>\r\n                            <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Binding</span> <span style=\"color:red\">Path</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">IsSelected</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">RelativeSource</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridCell}}</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">Converter</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{StaticResource selConverter}</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n                            <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Binding</span> <span style=\"color:red\">Path</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Price</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">Converter</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{StaticResource myConverter}</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">/&gt;</span>\r\n                        <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">PriorityBinding.Bindings</span><span style=\"color:blue\">&gt;</span>\r\n                    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">PriorityBinding</span><span style=\"color:blue\">&gt;</span>\r\n                <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">TextBlock.Background</span><span style=\"color:blue\">&gt;</span>\r\n            <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">TextBlock</span><span style=\"color:blue\">&gt;</span>\r\n        <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">DataTemplate</span><span style=\"color:blue\">&gt;</span>\r\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">DataGridTemplateColumn.CellTemplate</span><span style=\"color:blue\">&gt;</span>\r\n<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">DataGridTemplateColumn</span><span style=\"color:blue\">&gt;</span>\r\n</pre>\r\n<pre><br></pre>\r\n<pre>selConverter<br><div style=\"color:black;background-color:white\"><pre>    <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> SelConverter : IValueConverter\r\n    {\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">object</span> Convert(<span style=\"color:blue\">object</span> value, Type targetType, <span style=\"color:blue\">object</span> parameter, System.Globalization.CultureInfo culture)\r\n        {\r\n            <span style=\"color:blue\">if</span> (value != <span style=\"color:blue\">null</span> &amp;&amp; value.GetType() == <span style=\"color:blue\">typeof</span>(<span style=\"color:blue\">bool</span>))\r\n            {\r\n                <span style=\"color:blue\">if</span> (((<span style=\"color:blue\">bool</span>)value))\r\n                    <span style=\"color:blue\">return</span> <span style=\"color:blue\">null</span>; <span style=\"color:green\">//Background of the TextBlock is transparent, the background of the selection below (blue) will be visible</span>\r\n                <span style=\"color:blue\">else</span>\r\n                    <span style=\"color:blue\">return</span> DependencyProperty.UnsetValue;\r\n            }\r\n            <span style=\"color:blue\">return</span> DependencyProperty.UnsetValue;\r\n        }\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">object</span> ConvertBack(<span style=\"color:blue\">object</span> value, Type targetType, <span style=\"color:blue\">object</span> parameter, System.Globalization.CultureInfo culture)\r\n        {\r\n            <span style=\"color:blue\">throw</span> <span style=\"color:blue\">new</span> NotImplementedException();\r\n        }\r\n    }\r\n</pre>\r\n</div>\r\n<br><br></pre>\r\n</div>",
    "PostedDate": "2010-08-22T18:09:49.5-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]