[
  {
    "Id": "156111",
    "ThreadId": "46704",
    "Html": "Hi all, I have a DataGrid that I use to display object data with.  Everything seems to be working fine, however the application sometimes does not need to display the full objects data just a few of the fields instead of all of them.  The problem is that I have no way of knowing ahead of time which fields until the user selects them.  Is there any way to either hide columns or create an ad-hoc object at runtime?<br>\r\n<br>\r\nThank you,<br>\r\n-jupiter \r\n",
    "PostedDate": "2009-02-09T21:10:56.047-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "156124",
    "ThreadId": "46704",
    "Html": "Hi,<br>\r\n<br>\r\nTry setting Visibility=&quot;Hidden&quot; on the columns you wish to hide.<br>\r\n<br>\r\nRegards,<br>\r\nColin E.<br>\r\n--<br>\r\nhttp://www.scottlogic.co.uk/blog/wpf/ - my WPF blog<br>\r\nhttp://www.codeproject.com/KB/WPF/WPFDataGridExamples.aspx - WPF DataGrid Practical Examples <br>\r\n",
    "PostedDate": "2009-02-09T22:06:08.96-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "156128",
    "ThreadId": "46704",
    "Html": "Thanks Colin, heres the wiered thing though.  After I set the ItemsSource property of the DataGrid I see no columns when I step through the debugger.  In fact I put in a foreach loop to iterate through the column collection and it skips right over it.  Here's a snippet.<br>\r\n<br>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#008000\">// get a DataGrid control and populate with data\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#2b91af\">DataGrid</span><span style=\"font-size:13px\"> dataGrid = </span><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">DataGrid</span><span style=\"font-size:13px\">();\r\n<p>&nbsp;</p>\r\n<p>dataGrid.ItemsSource = selectedFile.CreateRunInstances();</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#008000\">// add the DataGrid to the TabItem\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>dataTab.Content = dataGrid;</p>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">foreach</span><span style=\"font-size:13px\"> (</span><span style=\"font-size:13px;color:#2b91af\">DataGridColumn</span><span style=\"font-size:13px\"> col </span><span style=\"font-size:13px;color:#0000ff\">in</span><span style=\"font-size:13px\"> dataGrid.Columns)\r\n<p>&nbsp;</p>\r\n<p>{</p>\r\n<p>col.Visibility = </p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#2b91af\">Visibility</span><span style=\"font-size:13px\">.Collapsed;\r\n<p>&nbsp;</p>\r\n<p>}</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#008000\">// add the TabItem to the TabControl<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\"><br>\r\nthis</span><span style=\"font-size:13px\">.myTabControl.Items.Add(dataTab);\r\n<p>&nbsp;</p>\r\n</span></p>\r\n",
    "PostedDate": "2009-02-09T23:11:39.62-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "156144",
    "ThreadId": "46704",
    "Html": "Hi,<br>\r\n<br>\r\nHow about handling the Loaded event of the DataGrid, the iterating over the columns collection? The visual components of a control are not fully constructed when you first create an instance of a control. From MSDN, the Loaded event &quot;Occurs when the element is laid out, rendered, and ready for interaction.&quot;<br>\r\n<br>\r\nThis might help.<br>\r\n<br>\r\nRegards,<br>\r\nColin E.<br>\r\n--<br>\r\nhttp://www.scottlogic.co.uk/blog/wpf/ - my WPF blog<br>\r\nhttp://www.codeproject.com/KB/WPF/WPFDataGridExamples.aspx - WPF DataGrid Practical Examples <br>\r\n",
    "PostedDate": "2009-02-10T00:29:14.267-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]