[
  {
    "Id": "138899",
    "ThreadId": "41852",
    "Html": "At the moment the DataGridComboBoxColumn will get the value for the ItemsSource property and set that on the generated ComboBox.<div>This method has the big disadvantage that it will only support StaticResources, since it wasn't possible for me to use StaticResouces I found the following workarround.</div><div><br></div><div>Original problem: http://www.codeplex.com/wpf/WorkItem/View.aspx?WorkItemId=8153</div><div><br></div><div>Inherited DataGridComboBoxColumn and copy the original ItemsSource binding to the generated ComboBox.</div><div>This will allow all bindings to work since the ComboBox is in the visual true (RelativeSource, ElementName,...) and the current StaticResources should also work.</div><div><br></div><div>My implementation (in C#):</div><div><div><div>using System.Windows;</div><div>using System.Windows.Controls;</div><div>using System.Windows.Data;</div><div>using Microsoft.Windows.Controls;</div><div><br></div><div><div>    public class DataGridComboBoxColumnEx : DataGridComboBoxColumn</div><div>    {</div><div>        protected override FrameworkElement GenerateEditingElement(DataGridCell cell, object dataItem)</div><div>        {</div><div>            FrameworkElement element = base.GenerateEditingElement(cell, dataItem);</div><div>            CopyItemsSource(element);</div><div>            return element;</div><div>        }</div><div><br></div><div>        protected override FrameworkElement GenerateElement(DataGridCell cell, object dataItem)</div><div>        {</div><div>            FrameworkElement element = base.GenerateElement(cell, dataItem);</div><div>            CopyItemsSource(element);</div><div>            return element;</div><div>        }</div><div><br></div><div>        private void CopyItemsSource(FrameworkElement element)</div><div>        {</div><div>            BindingOperations.SetBinding(element, ComboBox.ItemsSourceProperty, BindingOperations.GetBinding(this, ComboBox.ItemsSourceProperty));</div><div>        }</div><div>    }</div><div><br></div><div>The current ApplyColumnProperties method uses:</div><div><div>            DataGridHelper.SyncColumnProperty(this, comboBox, ComboBox.ItemsSourceProperty, ItemsSourceProperty);</div><div><br></div></div></div></div></div>",
    "PostedDate": "2008-12-09T03:53:16.933-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "141655",
    "ThreadId": "41852",
    "Html": "If you don't want to go through the exercise of subclassing, you can set the binding in the ElementStyle and EditingElementStyle.  See the example here, <a href=\"http://blogs.msdn.com/vinsibal/archive/2008/12/17/wpf-datagrid-dynamically-updating-datagridcomboboxcolumn.aspx\">http://blogs.msdn.com/vinsibal/archive/2008/12/17/wpf-datagrid-dynamically-updating-datagridcomboboxcolumn.aspx</a>.\r\n",
    "PostedDate": "2008-12-18T11:57:46.96-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]