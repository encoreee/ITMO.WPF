[
  {
    "Id": "186260",
    "ThreadId": "55178",
    "Html": "I have a DataGrid and a button which called a command. The command looks like this:<br>\r\n<br>\r\n<pre>if(dgResources.SelectedValue == null)<br>  return;<br>string selectedValue = dgResources.SelectedValue.ToString();<br>foreach(SomeObjectType res in anObservableCollection) {<br>    if(res.Name == selectedValue) {<br>        resources.Remove(res);<br>        break;<br>    }<br>}<br>dgResources.ItemsSource = resources;</pre>\r\nBut when I change the SelectionUnit to Cell, neither the button nor the Del key delete the current row any more. If I could get the index of the row, or the cell I could probably delete it another way but all of the SelectedValue/SelectedIndex etc properties are null.<br>\r\n",
    "PostedDate": "2009-05-03T06:45:44.02-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "186268",
    "ThreadId": "55178",
    "Html": "That is by design.  The DeleteCommand for DataGrid works when a row is selected.  One way to work around this is to intercept the delete key press and do the delete yourself based on the row of the selected cell (similar to what you are doing above).\r\n",
    "PostedDate": "2009-05-03T07:34:02.627-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "186302",
    "ThreadId": "55178",
    "Html": "I just needed to use the right properties. The SelectedCell's item can be removed from the DataSource:<br>\r\n<br>\r\n<pre>if(dgResources.SelectedCells.Count == 0)<br>  return;<br>SomeObject selectedValue = dgResources.SelectedCells[0].Item as SomeObject;<br>anObservableCollection.Remove(selectedValue);</pre>\r\n",
    "PostedDate": "2009-05-03T10:35:24.763-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]