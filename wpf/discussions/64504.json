[
  {
    "Id": "219573",
    "ThreadId": "64504",
    "Html": "<p>I'm trying to use the datagrid for some bulk data entry - for this to be usable, I need a few things which don't seem to be supported natively:</p>\r\n<ol>\r\n<li>I need cells to switch to edit mode as soon as the user selects them, or to be in edit mode already.</li>\r\n<li>I need the user to be able to tab between cells entering data, specifically I need them to be able to enter a _new_ row and then tab off the end to create another new row.</li>\r\n</ol>\r\n<p>This doesn't seem like a big ask, but I'm struggling to get this working without introducing bugs.&nbsp;</p>\r\n<p>For 1, I can call 'BeginEdit()', but the only place this seems to work from is a Focus handler added on the DataGridCell, this has a side-effect that whenever I right click on the row header, the first cell in the table gets focus for a moment and will flicker to editing mode and back to view mode. And cells no longer commit and move to the cell below when I press 'enter'. All other places I've tried to add a 'BeginEdit()' have failed for various reasons, usually the DataGrid sets the cell IsEditing to false somewhere later on in the chain of event handling or it creates an infinite loop where beginedit causes the event to fire again.&nbsp;</p>\r\n<p>So, what's the correct way to get a cell to automatically switch to editing mode when selected?</p>\r\n<p>For 2, the problem is that the placeholder item at the bottom of the table is removed when you start editing and not put back until the row is committed, which is _after_ the user has tabbed off the last cell in the row. I can override the datagrid's &quot;OnExecutedCommitEdit&quot; to force the commit to commit the whole row:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>        <span style=\"color:Blue\">protected</span> <span style=\"color:Blue\">override</span> <span style=\"color:Blue\">void</span> OnExecutedCommitEdit(ExecutedRoutedEventArgs e)\r\n        {\r\n            <span style=\"color:Blue\">if</span> ((e.Parameter <span style=\"color:Blue\">is</span> DataGridEditingUnit) &amp;&amp; (DataGridEditingUnit)e.Parameter == DataGridEditingUnit.Row)\r\n            {\r\n                <span style=\"color:Blue\">base</span>.OnExecutedCommitEdit(e);\r\n            }\r\n            <span style=\"color:Blue\">else</span>\r\n            {\r\n                DataGrid.CommitEditCommand.Execute(DataGridEditingUnit.Row, <span style=\"color:Blue\">this</span>);\r\n            }\r\n        }\r\n</pre>\r\n</div>\r\n<p>but I'm a bit worried that this might introduce some bugs that I just haven't noticed yet.</p>\r\n<p>Cheers,</p>\r\n<p>Leighton...</p>",
    "PostedDate": "2009-08-04T23:58:01.703-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]