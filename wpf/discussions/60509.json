[
  {
    "Id": "204907",
    "ThreadId": "60509",
    "Html": "<p>Hi all,</p>\r\n<p>I want to implement an DataGridColumn which can auto show the&nbsp;ellipsis text if&nbsp;content is beyond the width of the&nbsp;column. I use TextBlock in the DataGridTemplateColum, I know TextBlock have a property TextTrimming=&quot;CharacterEllipsis&quot;, but I need use the ellipsis in the middle of the string. Since the content is a path of file. It needs show the filename and the driver, so anyone has the expierience on that please give me some suggestion? And when drag the column and extend the width of the column, it needs also extend the strings to show?</p>\r\n<p>Thanks very much</p>\r\n<p>Dan<span style=\"font-size:x-small;color:#a31515\"></span></p>",
    "PostedDate": "2009-06-24T03:49:41.153-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "205382",
    "ThreadId": "60509",
    "Html": "<p><span style=\"font-size:x-small;color:#008000\"><span style=\"font-size:x-small;color:#008000\"><span style=\"font-size:x-small\">\r\n<p>Here I use DataBinding and ValueConverter to do it, it can somehow work for English text, but in case the other unicode text, for example Chinese, it will have the problem, and looks the Converter will not be called. Anyone know the reason and solution, thanks very much.</p>\r\n</span></span></span></p>\r\n<p><span style=\"font-size:x-small\"><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>                            <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">TextBlock</span> <span style=\"color:Red\">Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">txtOutput</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">HorizontalAlignment</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Stretch</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">TextAlignment</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Justify</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">ToolTip</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Path=Output}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n                                <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">TextBlock.Text</span><span style=\"color:Blue\">&gt;</span>\r\n                                    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">MultiBinding</span> <span style=\"color:Red\">Converter</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{StaticResource OutputToEllipsisDisplayConverter}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">ConverterParameter</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">FontSize</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n                                        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Binding</span> <span style=\"color:Red\">Path</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Output</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n                                        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Binding</span> <span style=\"color:Red\">Path</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">ActualWidth</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">ElementName</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">txtOutput</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n                                        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Binding</span> <span style=\"color:Red\">Path</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">FontSize</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">ElementName</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">txtOutput</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n                                    <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">MultiBinding</span><span style=\"color:Blue\">&gt;</span>\r\n                                <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">TextBlock.Text</span><span style=\"color:Blue\">&gt;</span>\r\n                            <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">TextBlock</span><span style=\"color:Blue\">&gt;</span></pre>\r\n<pre>\r\n<div style=\"color:Black;background-color:White\"><pre>    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">class</span><span style=\"color:MediumTurquoise\"> OutputToEllipsisDisplayConverter : IMultiValueConverter\r\n    </span>{\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">object</span> Convert(<span style=\"color:Blue\">object</span>[] values, Type targetType, <span style=\"color:Blue\">object</span> parameter, CultureInfo culture)\r\n        {\r\n            <span style=\"color:Blue\">const</span> String Ellipsis = <span style=\"color:Green\">/*MSG0*/</span><span style=\"color:#A31515\">@&quot;...\\&quot;</span>;\r\n\r\n            String displayText = String.Empty;\r\n            String path = values[0] <span style=\"color:Blue\">as</span> String;\r\n\r\n            <span style=\"color:Blue\">if</span> (String.IsNullOrEmpty(path)) \r\n                <span style=\"color:Blue\">return</span> displayText;\r\n\r\n            <span style=\"color:Blue\">double</span> actualWidth = (<span style=\"color:Blue\">double</span>)values[1];\r\n            <span style=\"color:Blue\">double</span> fontSize = (<span style=\"color:Blue\">double</span>)values[2];\r\n            <span style=\"color:Blue\">int</span> charCapacity = (<span style=\"color:Blue\">int</span>)((actualWidth) / (fontSize/2));\r\n            <span style=\"color:Blue\">string</span> prefix = Path.GetDirectoryName(path) + <span style=\"color:#A31515\">&quot;\\\\&quot;</span>;\r\n            String filename = Path.GetFileName(path);\r\n\r\n            <span style=\"color:Blue\">int</span> leftCharNum = 0;\r\n            <span style=\"color:Blue\">if</span> (charCapacity &gt;= path.Length)\r\n                displayText = path;\r\n            <span style=\"color:Blue\">else</span> <span style=\"color:Blue\">if</span> (charCapacity &gt;= Ellipsis.Length + filename.Length)\r\n            {\r\n                leftCharNum = charCapacity - filename.Length - Ellipsis.Length;\r\n                <span style=\"color:Blue\">string</span> subPrefix = prefix.Substring(0, leftCharNum);\r\n                displayText = subPrefix + Ellipsis + filename;\r\n            }\r\n            <span style=\"color:Blue\">else</span>\r\n            {\r\n                displayText = path;\r\n            }\r\n            <span style=\"color:Blue\">return</span> displayText;\r\n        }\r\n\r\n        <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">object</span>[] ConvertBack(<span style=\"color:Blue\">object</span> value, Type[] targetTypes, <span style=\"color:Blue\">object</span> parameter, CultureInfo culture)\r\n        {\r\n            <span style=\"color:Blue\">throw</span> <span style=\"color:Blue\">new</span> NotSupportedException();\r\n        }\r\n    }\r\n\r\n</pre>\r\n</div>\r\n</pre>\r\n</div>\r\n</span></span></span></p>",
    "PostedDate": "2009-06-25T05:20:03.74-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]