[
  {
    "Id": "262349",
    "ThreadId": "76726",
    "Html": "<p>Hello,</p>\r\n<p>I've been using the chart component, and I've noticed that when I generate a chart with a non-trivial amount of data, the rendering take sa fair amount of time. E.g. if I have 5 line series each with about 3 years worth of daily observations (i.e., around 1000 data poitns per series), generating the chart takes about 8-12 seconds on my system, during which time my app's UI freezes up.</p>\r\n<p>In my current scenario this delay in itself is not a problem, but I'd like to at least show some appropriate UI during this time -- say, a wait cursor -- and I'm having trouble detecting when the rendering is complete, so I don't know when to remove the wait cursor. The code that generates the data and sets up the chart runs very fast, so I can't just wrap a wait cursor around that. But I haven't been able to find any event etc. on any of the chart components that indicates when the rendering is done, so I don't know when to remove my wait cursor. Is there some way to detect that, either through the chart or through WPF itself?</p>\r\n<p>Also, some very superficial profiling suggests that the delays might be at least partly due to the data point animations. Is there an easy way (i.e. without recompiling the toolkit) to disable these animations? I haven't been able to find anything in the templates for this, it looks like all the animation is done in code. Or have I missed something? In fact I don't even need the data points at all -- I'm only displaying the plot lines, and I've styled the data points to be invisible -- so if there were a way to suppress data points altogether that might help too.</p>\r\n<p>Any thoughts on any of this would be much appreciated.</p>\r\n<p>Thanks in advance for any help!</p>",
    "PostedDate": "2009-12-01T09:03:45.023-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "262395",
    "ThreadId": "76726",
    "Html": "<p>UPDATE: After posting this I looked around some more, and it looks like this is a general WPF issue -- WPF rendering happens on a special rendering thread, and there's no documented way to detect &quot;rendering complete.&quot;</p>\r\n<p>A few sources (see below) suggested using Dispatcher.Invoke with a low priority (I used Background, but presumably any priority lower than Render would work), and this seems to do the trick, and appears to be the best approach that's currently available.</p>\r\n<p><a href=\"http://social.msdn.microsoft.com/Forums/en-US/wpf/thread/0ca98da1-446f-4b2a-b2e9-bd9f2d8b3003\">http://social.msdn.microsoft.com/Forums/en-US/wpf/thread/0ca98da1-446f-4b2a-b2e9-bd9f2d8b3003</a><br><a href=\"http://social.msdn.microsoft.com/Forums/en-US/wpf/thread/157a2852-fac9-4791-a1d3-395fe702d13c\">http://social.msdn.microsoft.com/Forums/en-US/wpf/thread/157a2852-fac9-4791-a1d3-395fe702d13c</a></p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-12-01T10:52:24.68-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]