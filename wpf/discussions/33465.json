[
  {
    "Id": "110926",
    "ThreadId": "33465",
    "Html": "<span style=\"font-size:11pt;font-family:'Calibri','sans-serif'\">One feature that I need on the Grid&nbsp;does not appear to be&nbsp;there yet.&nbsp; I wonder if it&nbsp;is planned? &nbsp; It's called &quot;Merge Rows&quot;&nbsp; and it allows one column to have a &quot;virtual row height&quot; based on the number of rows that have the same repeated data in the column.&nbsp; So let's say in the&nbsp;DataGrid Sample (The very nice one that you can download to learn more about the DatGrid) that you sorted the First Name column on First name and then looked at the rows with the First Name of &quot;James&quot;.&nbsp; Instead of repeating &quot;James&quot; 5 times for the 5 rows that start with a first name of &quot;James&quot;,&nbsp; If we had a Merge rows feature,&nbsp;In&nbsp;the Name&nbsp;column the row would be 5 rows high and &quot;James&quot; would only appear once, in the middle of the&nbsp; viewable portion of the row height.&nbsp; Do you have any suggestions about how best to accomplish this?&nbsp; I may have to write this feature for&nbsp;my Grid myself, but otherwise the Grid looks like a winner for my work.</span>\r\n",
    "PostedDate": "2008-08-13T11:38:13.957-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "111249",
    "ThreadId": "33465",
    "Html": "<span style=\"font-family:Calibri\">\r\n<p style=\"margin:0in 0in 10pt\"><span style=\"font-family:Calibri\">Hi,</span></p>\r\n<p style=\"margin:0in 0in 10pt\"><span style=\"font-family:Calibri\">As you have already found, this is a feature we do not support. Here is a suggestion to achieve this effect with the current DataGrid implementation. The end goal is to have the look that excel has for this scenario. i.e &quot;James&quot; appears on the last row of the group of rows that have &quot;James&quot; as the First Name. I know this is slightly different from what you asked for but this is the simplest to explain and so I am going to go with this for now. I will explain the hardships in achieving what you asked for towards this end of this response.</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span><span style=\"font-family:Calibri\">1.</span><span style=\"font:7pt 'Times New Roman'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-family:Calibri\">Do your own sorting by listening to DataGrid.Sorting event and marking the event handled when done.</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span><span style=\"font-family:Calibri\">2.</span><span style=\"font:7pt 'Times New Roman'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-family:Calibri\">Create an intermediate collection that can store the items in your original DataSource in sorted order. </span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span><span style=\"font-family:Calibri\">3.</span><span style=\"font:7pt 'Times New Roman'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-family:Calibri\">Additionally manipulate the data in this intermediate collection such that only the last row in the sorted range of rows with identical FirstNames has a non-empty value for the FirstName property. All the rest of the rows in that range have an empty string in its place.</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span><span style=\"font-family:Calibri\">4.</span><span style=\"font:7pt 'Times New Roman'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-family:Calibri\">Now connect the intermediate collection as the ItemsSource for the DataGrid. On displaying this information, you will see that the each duplicate first name appear only once on the last row in the range. The rest of the cells in that column are empty.</span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span><span style=\"font-family:Calibri\">5.</span><span style=\"font:7pt 'Times New Roman'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-family:Calibri\">Now you need to control the visibility of the GridLines so that they do not show the bottom edges for those cells in the FirstName column that are empty. To do this, you will first need to turn off the default Gridlines implementation by setting GridLinesVisibility=”None” on the DataGrid.</span></p>\r\n<p style=\"margin:0in 0in 10pt 0.5in\"><span><span style=\"font-family:Calibri\">6.</span><span style=\"font:7pt 'Times New Roman'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-family:Calibri\">You can then use Borders around your cells to draw the bottom and right edges to simulate GridLines. Note that you will need to use some Triggers/TypeConverters to ensure that the bottom edges aren’t drawn for those cells in the FirstName column that are empty.</span></p>\r\n<p style=\"margin:0in 0in 10pt\"><span style=\"font-family:Calibri\">About centering the contents of the cell in FirstName column spanning rows, </span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span><span style=\"font-family:Calibri\">1.</span><span style=\"font:7pt 'Times New Roman'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-family:Calibri\">What does this mean for row selection? </span></p>\r\n<p style=\"margin:0in 0in 0pt 0.5in\"><span><span style=\"font-family:Calibri\">2.</span><span style=\"font:7pt 'Times New Roman'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-family:Calibri\">How do you edit that cell?</span></p>\r\n<p style=\"margin:0in 0in 10pt 0.5in\"><span><span style=\"font-family:Calibri\">3.</span><span style=\"font:7pt 'Times New Roman'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-family:Calibri\">Lastly, this is very hard to achieve with our current layout model, which of using a single dimensional panel to layout the rows and a nested single dimensional panel per row that lays out cells. This row spanning behavior could be slightly better enabled with a 2D layout, but there are other challenges in that space that caused us to pick the former.</span></p>\r\n<p style=\"margin:0in 0in 10pt\"><span style=\"font-family:Calibri\">&nbsp;</span></p>\r\n<p style=\"margin:0in 0in 10pt\"><span style=\"font-family:Calibri\">Hope this helps.</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:Calibri\">Thanks</span></p>\r\n<p style=\"margin:0in 0in 0pt\"><span style=\"font-family:Calibri\">Varsha (MSFT)</span></p>\r\n</span>\r\n",
    "PostedDate": "2008-08-14T18:19:44.053-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "111314",
    "ThreadId": "33465",
    "Html": "<p>Hi Varshal<br>\r\n<br>\r\nI kind of figured that it would not be supported and that I would have to do it my self.&nbsp; While it would have been nice if Microsoft added the function, (I'm sure that one of the pro's would do a better job at this than I would) the really great thing is that you expose the source which will allow me to add this custom function.&nbsp; Merge Rows is a commonly needed function, and it would be good&nbsp;for Microsoft to re-consider adding the implementation that you suggest, without&nbsp;making&nbsp;any basic changes to the datagrid design.<br>\r\n<br>\r\nTo answer your questions, my view is:<br>\r\n<br>\r\n1.) &nbsp;In other grids that I have used, I have even seen row selection unavailable if you clicked in the &quot;virtual row&quot;.&nbsp; The OrchidGrid offered by SpringSys does better however.&nbsp; A better solution for the Microsoft datagrid would be to use multiselect for the range in the intermediate collection.<br>\r\n<br>\r\n2.)&nbsp; Cell editing is just to complex to consider in a merged row column.&nbsp; If&nbsp;we allow an edit, the intermediate collection could be used to produce an edit for each of its common rows, but changing all first names from James to Robert, would just not make any sense.&nbsp; Merge Rows is a&nbsp;function that is really more of a viewing funtion to improve the experience of the user,&nbsp; when examining complex data from a database.&nbsp; If I do this I am not going to allow editing of the merge rows in the merge column.</p>\r\n<p>&nbsp;</p>\r\n<p>I think of two other issues, that have come up in the past:</p>\r\n<p>A.) When using alternating row background colors, some grids determine the background of the merged row&nbsp;by the first row that forms the intermediate collection. (This leads to consective rows in the merged column with no alternation of color.)&nbsp; It is far better to simply apply alternating colors to the virtural rows.&nbsp;&nbsp;For a better UX the important thing is the user gets to easily&nbsp;visualize the &quot;break&quot; in common data in the merge columns rows.<br>\r\n<br>\r\nB.)I have to think of one other thing that I don't think you covered.&nbsp; Say the grid's viewable size exposes 10 Rows, but the data called for a &quot;virtual row&quot; height of 18 rows.&nbsp; The old True Grid, that shipped with early Visual Basic,&nbsp;had a nice solution.&nbsp; It centered the&nbsp; data in the 18 rows, however if the viewable area was less, when you scrolled, the merge row data would move to the top or the bottom of the &quot;view&quot; but never go off the screen.<br>\r\n<br>\r\nWell, I have a gift for you, As you might have noted, I work (and think) in Visual Basic (as a legion of other professional developers do as well).&nbsp; Since the datagrid sample was in C#, the first thing I had to do was translate it to English so that I could understand the concepts.&nbsp; Since I have done the conversion to VB, I would be happy to send it to you so you could make it available to others.&nbsp; It has a couple of snags that I did not figure out yet in the syntax. (For example in the Function FindByPartName Result = produces an error).&nbsp; However, most of the compex problems in syntax have all been taken care of in y version.&nbsp; So, it would need a quick review by a VB expert to clean up the remaing details.<br>\r\n<br>\r\nIf you want it -give me instructions on how to upload it.<br>\r\n<br>\r\nBob</p>\r\n",
    "PostedDate": "2008-08-15T03:58:37.743-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "112033",
    "ThreadId": "33465",
    "Html": "<p>Hi Bob,<br>\r\n<br>\r\nThanks for your insights on this feature. We will keep this in mind for future enhancements that we plan for the WPF DataGrid. As for your offer on sharing your solution, we are not accepting any external contributions through this channel at this time. Hence I would recommend that you blog about your solution and send across a link to it. Some of the regular bloggers in WPF could then add a pointer to your solution to bring it some additional attention.</p>\r\n<p>Thanks</p>\r\n<p>Varsha (MSFT)</p>\r\n",
    "PostedDate": "2008-08-19T06:21:04.927-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "195402",
    "ThreadId": "33465",
    "Html": "<p>Has anyone successfully accomplished this as &nbsp;a demo or sample? &nbsp;I am being asked is this is possible. &nbsp;I'm making the initial assumption is that the &quot;merged&quot; data would be read only.</p>\r\n<p>&nbsp;</p>\r\n<p>Let me know,</p>\r\n<p>Tracy</p>",
    "PostedDate": "2009-05-28T13:25:53.273-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]