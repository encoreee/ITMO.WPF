[
  {
    "Id": "136666",
    "ThreadId": "41209",
    "Html": "I'm in desperate need of some help. I am trying to use the new WPF data grid to display some records from a database table. Firstly I added the DataSet to the DataContext of the Grid and set the ItemsSource path. Set Auto create columns to true and result we have a populated DataGrid, so far so good. So lets try and expand this a little further I've added a DataGridComboBoxColumn. The ItemsSource of the combobox column is set to a lookup table from the same dataset as the DataGrid. I've set the DisplayMemberPath, SelectedValuePath and SelectedValueBinding properties. When the Grid is now displayed the combobox fields are initialy empty. If I select a field to edit the ComboBox is populated correctly and I can select a value. Then the selected value is dispayed in the combobox field. Also I have added the same field as Tex column and I can see that the value selected from the combo box is accepted. How do I get the combobox to display the initial values from the data table.<br>\r\nI'm obviously missing something quite straight forward and will feel suitably sheepish when the answer is pointed out to me.<br>\r\n<br>\r\nCode snippets follow<br>\r\n<br>\r\nThis is the XAML for the DataGrid<br>\r\n<br>\r\n<span style=\"font-size:13px;color:#0000ff\">\r\n<p>&lt;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#a31515\">dg</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">DataGrid</span><span style=\"font-size:13px;color:#ff0000\"> Name</span><span style=\"font-size:13px;color:#0000ff\">=&quot;dgIndex&quot;</span><span style=\"font-size:13px;color:#ff0000\"> ItemsSource</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">Binding</span><span style=\"font-size:13px;color:#ff0000\"> Path</span><span style=\"font-size:13px;color:#0000ff\">=Index}&quot; &gt; <br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">    &lt;</span><span style=\"font-size:13px;color:#a31515\">dg</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">DataGrid.Columns</span><span style=\"font-size:13px;color:#0000ff\">&gt; <br>\r\n        </span><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">dg</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">DataGridTextColumn</span><span style=\"font-size:13px;color:#ff0000\"> Header</span><span style=\"font-size:13px;color:#0000ff\">=&quot;Name&quot;</span><span style=\"font-size:13px;color:#ff0000\"> Binding</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">Binding</span><span style=\"font-size:13px;color:#ff0000\"> Path</span><span style=\"font-size:13px;color:#0000ff\">=Name}&quot; /&gt; <br>\r\n        </span><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">dg</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">DataGridComboBoxColumn</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#ff0000\">x</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#ff0000\">Name</span><span style=\"font-size:13px;color:#0000ff\">=&quot;indexProductCol&quot;</span><span style=\"font-size:13px;color:#ff0000\"> DisplayMemberPath</span><span style=\"font-size:13px;color:#0000ff\">=&quot;Product&quot;</span><span style=\"font-size:13px;color:#ff0000\"> Header</span><span style=\"font-size:13px;color:#0000ff\">=&quot;Product&quot;</span><span style=\"font-size:13px;color:#ff0000\"> SelectedValueBinding</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">Binding</span><span style=\"font-size:13px;color:#ff0000\"> Path</span><span style=\"font-size:13px;color:#0000ff\">=Product}&quot; <span style=\"font-size:13px;color:#ff0000\">SelectedValuePath<span style=\"font-size:13px;color:#0000ff\">=&quot;Product&quot;</span></span> /&gt; <br>\r\n    </span><span style=\"font-size:13px;color:#0000ff\">&lt;/</span><span style=\"font-size:13px;color:#a31515\">dg</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">DataGrid.Columns</span><span style=\"font-size:13px;color:#0000ff\">&gt; <br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">&lt;/</span><span style=\"font-size:13px;color:#a31515\">dg</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">DataGrid</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p> </p>\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p>This is C# code that initialises the DataSet and assigns the DataContext and ItemsSource<br>\r\n<br>\r\n<span style=\"font-size:13px\">priceStagingDS = </span><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">PriceStaging</span><span style=\"font-size:13px\">(); <br>\r\n<br>\r\nindexTableAdapter = </span><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> PACT_Config.PriceStagingTableAdapters.</span><span style=\"font-size:13px;color:#2b91af\">IndexTableAdapter</span><span style=\"font-size:13px\">(); <br>\r\nindexTableAdapter.Fill(priceStagingDS.Index);<br>\r\n<br>\r\nproductTableAdapter = </span><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> PACT_Config.PriceStagingTableAdapters.</span><span style=\"font-size:13px;color:#2b91af\">ProductTableAdapter</span><span style=\"font-size:13px\">(); <br>\r\nproductTableAdapter.Fill(priceStagingDS.Product);<br>\r\n<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">this</span><span style=\"font-size:13px\">.indexProductCol.ItemsSource = priceStagingDS.Product.Rows; <br>\r\ndgIndex.DataContext = priceStagingDS;<br>\r\n<br>\r\n<br>\r\nAny help greatly appreciated.\r\n<p> </p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p> </p>\r\n",
    "PostedDate": "2008-12-01T09:43:29.763-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "136856",
    "ThreadId": "41209",
    "Html": "OK after doing some more digging I noticed a couple of solutions using the IValueConverter interface and Combo boxes. I created a converter and plugged it in to see what was being delivered t and from the cells. It seems it was a problem with the way strings weere being dealt with. The field in question is a nvar(50). The value stored in the table is trimmed so for example power is stored as &quot;Power&quot; the values in the look up table did not appear to be trimmed e.g &quot;Power     &quot;. I write a value converter to trim the field and every thing is now working, see below. After some further digging I found out that the lookup table had original been coded as char(10) and then the field was altered after the values were entered. The data in the table was fixed and the logic worked without the data converter. So in summary the combo box column works exactly as I would expect it too. Remeber to check the data you are using before you drive yourself round the bend. At least I learnt how to use a IValueConvertor. And I was right I said I'd feel sheepish when the answer was found.<br>\r\n<br>\r\n<span style=\"font-size:13px;color:#0000ff\">\r\n<p>class</p>\r\n</span>\r\n<p><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">ProductConverter</span><span style=\"font-size:13px\"> : </span><span style=\"font-size:13px;color:#2b91af\">IValueConverter<br>\r\n</span><span style=\"font-size:13px\">{<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\"><br>\r\nprivate</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">PriceStaging</span><span style=\"font-size:13px\">.</span><span style=\"font-size:13px;color:#2b91af\">ProductDataTable</span><span style=\"font-size:13px\"> products;<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\"><br>\r\npublic</span><span style=\"font-size:13px\"> ProductConverter(</span><span style=\"font-size:13px;color:#2b91af\">PriceStaging</span><span style=\"font-size:13px\">.</span><span style=\"font-size:13px;color:#2b91af\">ProductDataTable</span><span style=\"font-size:13px\"> products)<br>\r\n{<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">this</span><span style=\"font-size:13px\">.products = products;<br>\r\n}<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\"><br>\r\n#region</span><span style=\"font-size:13px\"> IValueConverter Members<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\"><br>\r\npublic</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> Convert(</span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> value, </span><span style=\"font-size:13px;color:#2b91af\">Type</span><span style=\"font-size:13px\"> targetType, </span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> parameter, System.Globalization.</span><span style=\"font-size:13px;color:#2b91af\">CultureInfo</span><span style=\"font-size:13px\"> culture)<br>\r\n{<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">    object</span><span style=\"font-size:13px\"> result = </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">;<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">    foreach</span><span style=\"font-size:13px\"> (System.Data.</span><span style=\"font-size:13px;color:#2b91af\">DataRow</span><span style=\"font-size:13px\"> row </span><span style=\"font-size:13px;color:#0000ff\">in</span><span style=\"font-size:13px\"> products.Rows)<br>\r\n    {<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\">        PriceStaging</span><span style=\"font-size:13px\">.</span><span style=\"font-size:13px;color:#2b91af\">ProductRow</span><span style=\"font-size:13px\"> prow = row </span><span style=\"font-size:13px;color:#0000ff\">as</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">PriceStaging</span><span style=\"font-size:13px\">.</span><span style=\"font-size:13px;color:#2b91af\">ProductRow</span><span style=\"font-size:13px\">;<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">        if</span><span style=\"font-size:13px\"> (prow != </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">)<br>\r\n        {<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">            if</span><span style=\"font-size:13px\"> (prow[</span><span style=\"font-size:13px;color:#a31515\">&quot;Product&quot;</span><span style=\"font-size:13px\">].ToString().Trim() == value.ToString())<br>\r\n            {<br>\r\n                result = prow[</span><span style=\"font-size:13px;color:#a31515\">&quot;Product&quot;</span><span style=\"font-size:13px\">];<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">                break</span><span style=\"font-size:13px\">;<br>\r\n            }<br>\r\n        }<br>\r\n    }<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\"><br>\r\n    return</span><span style=\"font-size:13px\"> result;<br>\r\n}\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">public</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> ConvertBack(</span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> value, </span><span style=\"font-size:13px;color:#2b91af\">Type</span><span style=\"font-size:13px\"> targetType, </span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> parameter, System.Globalization.</span><span style=\"font-size:13px;color:#2b91af\">CultureInfo</span><span style=\"font-size:13px\"> culture)<br>\r\n{<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">    return</span><span style=\"font-size:13px\"> value.ToString().Trim();<br>\r\n}<br>\r\n<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">#endregion<br>\r\n</span><span style=\"font-size:13px\">}\r\n<p>&nbsp;</p>\r\n</span></p>\r\n",
    "PostedDate": "2008-12-02T02:24:23.54-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]