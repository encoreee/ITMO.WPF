[
  {
    "Id": "289829",
    "ThreadId": "85038",
    "Html": "<p>Hi -</p>\r\n<p>If I perform a copy of a DataGrid row to the clipboard, and the DataGridTextBoxColumn Binding (or ClipboardContentBinding) has a StringFormat in it, it is ignored in the data placed on the clipboard.&nbsp; Converters in the binding, however, are respected, so I can work around the problem by using a StringFormatConverter, much as I would do before 3.5 SP1.&nbsp; Obviously, though, that's not ideal.</p>\r\n<p>Is this by design?&nbsp; It doesn't seem like an intuitive behavior.</p>\r\n<p>Thanks,</p>\r\n<p>Daniel</p>",
    "PostedDate": "2010-02-11T12:26:06.2-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "561373",
    "ThreadId": "85038",
    "Html": "\r\n<p>We are having the same issue.&nbsp; Another option is to use the following event handler CopyingCellClipboardContent</p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"color:#0000ff\"><span style=\"color:blue\">private</span></span> <span style=\"color:#0000ff\">\r\n<span style=\"color:blue\">void</span></span> DataGridTextColumn_CopyingCellClipboardContent(<span style=\"color:#0000ff\"><span style=\"color:blue\">object</span></span> sender,\r\n<span style=\"color:#2b91af\"><span style=\"color:#2b91af\">DataGridCellClipboardEventArgs</span></span> e)</p>\r\n<p><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-size:9.5pt\">&nbsp;{</span></span></p>\r\n<p><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-size:9.5pt\">&nbsp;&nbsp;<span style=\"color:#0000ff\"><span style=\"color:blue\">if</span></span> (<span style=\"color:#0000ff\"><span style=\"color:blue\">null</span></span> != e.Column.ClipboardContentBinding\r\n &amp;&amp; !<span style=\"color:#0000ff\"><span style=\"color:blue\">string</span></span>.IsNullOrEmpty(e.Column.ClipboardContentBinding.StringFormat))</span></span></p>\r\n<p><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-size:9.5pt\">&nbsp;&nbsp;&nbsp; {</span></span></p>\r\n<p><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-size:9.5pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.Content =\r\n<span style=\"color:#0000ff\"><span style=\"color:blue\">string</span></span>.Format(<span style=\"color:#a31515\"><span style=\"color:#a31515\">e.Column.ClipboardContentBinding.StringFormat, e.Content);</span></span></span></span></p>\r\n<p><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-size:9.5pt\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></p>\r\n<p><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-size:9.5pt\">&nbsp;}</span></span></p>\r\n<p><span style=\"font-family:Arial; color:#000080; font-size:x-small\"><span style=\"color:navy; font-size:10pt\">Also, note that for the below to work, the StringFormat for the binding has to be in the following format:</span></span></p>\r\n<p><span style=\"font-family:Arial; color:#000080; font-size:x-small\"><span style=\"color:navy; font-size:10pt\">{\\{0:xx\\}}, where xx is the format string, like {\\{0:C\\}}.&nbsp; You can&rsquo;t just use StringFormat=C like you can with the grid, or else the code\r\n behind on the string.Format doesn&rsquo;t work.&nbsp; The format {}{0:C} might also work, although I did not check that.</span></span></p>\r\n<p><span style=\"font-family:Arial; color:#000080; font-size:x-small\"><span style=\"color:navy; font-size:10pt\">We are looking at putting this into an attached behavior rather than having to add the handler to each column of the datagrid.&nbsp; Of course, I'd\r\n much rather see the datagrid handle this for us, and if you wanted some control, you could specify, at the datagrid level, whether you wanted the copytoclipboard functionality to use the stringformat or not.&nbsp; If anyone knows any different, please let\r\n me know.&nbsp; We are using the June 2009 datagrid right now.&nbsp; </span></span></p>\r\n<p><span style=\"font-family:Arial; color:#000080; font-size:x-small\"><span style=\"color:navy; font-size:10pt\">Jonathan</span></span></p>\r\n",
    "PostedDate": "2011-02-05T19:09:22.293-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]