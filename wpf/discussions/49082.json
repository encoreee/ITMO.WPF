[
  {
    "Id": "163964",
    "ThreadId": "49082",
    "Html": "Hi,<br>\r\n<br>\r\nI'm currently using the WPF toolkit datagrid and binding it to a list&lt;&gt; of objects..<br>\r\n<br>\r\nWhen I insert data in the datagrid (during the execution) the list is correctly updated (execpted the reported Bug?? of having to start with at least one item in the list)<br>\r\n<br>\r\nThe thing is: when I change the data of an item in the list (in code) the datagrid is not updated (unless I sort a column or something similar)... is there a way to do it.. or is it a reported bug?<br>\r\n<br>\r\nThanks in advance \r\n",
    "PostedDate": "2009-03-03T10:12:05.197-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "163969",
    "ThreadId": "49082",
    "Html": "<p>DataGrid should get updated in one of the following cases...</p>\r\n<ol>\r\n    <li>Your item object implements INotifyPropertyChanged</li>\r\n    <li>The concerned property of your item object is backed by a DependencyProperty.</li>\r\n</ol>\r\n<p>If none of the above than DataGrid will not get updated automatically.</p>\r\n",
    "PostedDate": "2009-03-03T10:18:57.857-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "163978",
    "ThreadId": "49082",
    "Html": "Thanks for the reply..<br>\r\n<br>\r\nI've seen other posts mentioning the INotifyPropertyChanged.. but I can seem to access it in my class... What is the required namespace?<br>\r\n<br>\r\nI would also like to know about the second hipothesis you mentioned.. is there a discusion already on the subject?<br>\r\n<br>\r\nThanks in advance<br>\r\n",
    "PostedDate": "2009-03-03T10:37:35.407-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "164254",
    "ThreadId": "49082",
    "Html": "It's System.ComponentModel.INotifyPropertyChanged.<br>\r\n<br>\r\nAs for your other question, a usable workaround is to make your collection class itself a generic with the type of your business object as its type argument. \r\n",
    "PostedDate": "2009-03-04T04:00:17.807-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "164430",
    "ThreadId": "49082",
    "Html": "Thanks for your input...<br>\r\n<br>\r\n:P (I know these are trully rookie questions)....<br>\r\n<br>\r\nI'm staring to figure it out... still I believe the datagrid should do that automatically, or recurring to Binding mode... for instance.. like I mentioned earlier.. if I sort the data the itemsource is updated.. even without the INotifyPropertyChanged..<br>\r\n<br>\r\nDo you know if this will be fixed in a next version of the datagrid?<br>\r\n<br>\r\nthanks in advance<br>\r\n",
    "PostedDate": "2009-03-04T10:23:46.72-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "164447",
    "ThreadId": "49082",
    "Html": "The DataBinding engine in WPF works on the basis of either INotifyPropertyChanged or DependencyProperty. The conceptual problem is to know when the value of property changed so that other things can be  updated. Normal CLR properties doesnt provide any notification when a property changes. Hence there is no way the DataBinding engine could know about the property value change. Hence no updates in the control either. The reason why it works on sorting is because on such operations entire DataGrid (itemscontrol) gets refreshed, reevaluating the bindings and hence picking up the property changes.\r\n",
    "PostedDate": "2009-03-04T11:02:05.047-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "186651",
    "ThreadId": "49082",
    "Html": "I bind an ObservableCollection&lt;T&gt; to the grid. T has a few DependencyPoperty. When I update the object, the grid doesn't refresh the change until I scroll the row out of the view and scroll back. It seems the grid still doesn't know the value being updated.<br>\r\nIs there anything I missed?<br>\r\n<br>\r\nThanks.<br>\r\n",
    "PostedDate": "2009-05-04T12:39:09.347-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "189341",
    "ThreadId": "49082",
    "Html": "<p>Hello,</p>\r\n<p>I'm also trying to make this two way binding, but implementing&nbsp;the <span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\">INotifyPropertyChanged <span style=\"color:#000000\">interface. But the datagrid is still not being update also, as reported by &quot;depend&quot; on the previous post.</span></span></span></p>\r\n<p><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#2b91af;font-size:x-small\"><span style=\"color:#000000\">I'm binding a derivated class from ObservableCollection&lt;T&gt; to the grid, and T implements the INotifyPropertyChanged as mentioned and also IEditableObject. Debugging I can see that the PropertyChanged event is fired when I change the specific cell, but the datagrid is not updated.</span></span></span></p>\r\n<p>What can be missing? What else could I try?</p>\r\n<p>Thanks in Advance for any suggestions.<span style=\"color:#2b91af;font-size:x-small\"></span></p>",
    "PostedDate": "2009-05-12T08:38:17.593-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "189347",
    "ThreadId": "49082",
    "Html": "<p>OK,</p>\r\n<p>Please don't waste your time trying to help me on this topice. I just found out my silly mistake.</p>\r\n<p>I was firing the PropertyChanged event BEFORE actually updateing the object value. Now I'm doing something like:</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>\r\n<p>public bool Use<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return _use;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (_use != value &amp;&amp; this.PropertyChanged != null)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _use = value;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.PropertyChanged(this, new PropertyChangedEventArgs(&quot;Use&quot;));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _use = value;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n</p>",
    "PostedDate": "2009-05-12T08:43:20.8-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]