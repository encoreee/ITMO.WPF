[
  {
    "Id": "290913",
    "ThreadId": "85404",
    "Html": "<p>This may be helpful to others so I am posting it here. &nbsp;These are the changes I needed to make to build the February 2010 release of the toolkit to completion.</p>\r\n<div id=\"_mcePaste\" style=\"overflow-x:hidden;overflow-y:hidden;width:1px;height:1px;top:0px;left:-10000px\">(6) Rebuild again, you should have 0 errors and 0 warnings on all projects, ending up with</div>\r\n<p>\r\n<p>[ Steps ]</p>\r\n<p>(1) Build everything first to identify projects with errors.</p>\r\n<p>(2) Build result should be:</p>\r\n<p>========== Build: 11 succeeded or up-to-date, 3 failed, 0 skipped ==========</p>\r\n<p>(3) Correct Project -&gt; Controls.DataVisualization.Toolkit.VisualStudio.Design</p>\r\n<p>as follows:</p>\r\n<p>Remove Reference -&gt; Microsoft.Windows.Design.Extensibility</p>\r\n<p>Add Reference -&gt; Microsoft.Windows.Design.Extensibility</p>\r\n<p>From -&gt; C:\\Program Files\\Microsoft Visual Studio 9.0\\Common7\\IDE\\PublicAssemblies</p>\r\n<p>(4) Correct Project -&gt; Controls.Input.Toolkit.Design</p>\r\n<p>as follows:</p>\r\n<p>Remove Reference -&gt; Microsoft.Windows.Design.Extensibility</p>\r\n<p>Remove Reference -&gt; Microsoft.Windows.Design.Interaction</p>\r\n<p>Add Reference -&gt; Microsoft.Windows.Design.Extensibility</p>\r\n<p>Add Reference -&gt; Microsoft.Windows.Design.Interaction</p>\r\n<p>From -&gt; C:\\Program Files\\Microsoft Visual Studio 9.0\\Common7\\IDE\\PublicAssemblies</p>\r\n<p>(5) Correct Project -&gt; Controls.Layout.Toolkit.Design</p>\r\n<p>as follows:</p>\r\n<p>Remove Reference -&gt; Microsoft.Windows.Design.Extensibility</p>\r\n<p>Remove Reference -&gt; Microsoft.Windows.Design.Interaction</p>\r\n<p>Add Reference -&gt; Microsoft.Windows.Design.Extensibility</p>\r\n<p>Add Reference -&gt; Microsoft.Windows.Design.Interaction</p>\r\n<p>From -&gt; C:\\Program Files\\Microsoft Visual Studio 9.0\\Common7\\IDE\\PublicAssemblies</p>\r\n<p>(6) Rebuild again, you should have 0 errors and 0 warnings on all projects, ending up with</p>\r\n<p>========== Rebuild All: 14 succeeded, 0 failed, 0 skipped ==========</p>\r\n<div>[&nbsp;Comments&nbsp;]</div>\r\n<div>I changed my startup project to WPFToolkitSamples. &nbsp;The samples are helpful, but seem to only incorporate examples for more recent enhancements rather than a general set of examples. &nbsp;It would be nice to have an examples project that did full coverage of the toolkit. &nbsp;As mentioned in other posts, having a change/issues log would be most helpful. &nbsp;Especially given that we presently have to hunt around for breaking changes to get the requisite information (http://blogs.msdn.com/delay/default.aspx is the only place they appear to be posted).</div>\r\n<div>This toolkit release does appear to be close to a production level version. &nbsp;My impression is that the quality of the code base has firmed up nicely.</div>\r\n<div>WPFToolkit needs its own equivalent of the Silverlight Gallery sample, incorporating themes and leveraging the enhanced capabilities of WPF, not just duplicating what the Silverlight equivalent provides. &nbsp;This would go a long way to making it easy to sell WPF to clients, given the rich set of services provided by the latest incarnation of the toolkit. &nbsp;It really does have some gems that dramatically speed up the development process if you leverage the provided code base.</div>\r\n<div>Lastly, I hope Microsoft continues VS2008 support for the toolkit. &nbsp;There has been a tendency to push new product releases onto developers by dropping support for earlier products. &nbsp;Sometimes this is necessary to get us to move. &nbsp;However, in this case, we've only really had SP1 and a couple the subsequent releases of supported tools to get our product development going. &nbsp;Speaking only for myself, it will not be practical to switch to VS2010 for about a year. &nbsp;Projects will be gradually moved over when the dust settles with 2010. &nbsp;The &quot;settling&quot; period has become a reality of Microsoft product releases that is now incorporated into product development decisions.</div>\r\n<div>It's no longer fun to be an early adopter.</div>\r\n</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-02-15T09:45:08.303-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "291240",
    "ThreadId": "85404",
    "Html": "<p>Despite the modified assembly references in changeset <a id=ChangeSetLink0 style=\"font-weight:bold\" title=\"Browse change set 39793\" href=\"http://wpf.codeplex.com/SourceControl/changeset/view/39793\">39793</a>&nbsp;the build still fails in the same way as before without the above adjustments.&nbsp; The assembly path now points to the Blend 3 installation directory, however these assemblies cause build errors.&nbsp; On all of my client VS2008 installations, I have to make the above changes to resolve build problems even after installing Blend 3.</p>\r\n<p>The above change seems more generic, since it does not require the installation of Blend.&nbsp; Is there an issue with the assemblies used above?</p>\r\n<p>If Blend is to be a requisite component of the build process, why not incorporate the required elements into the Blend SDK, so that we're not forced into installing all of Blend just to build the toolkit.&nbsp; The Blend SDK makes much more sense as a dependency for the toolkit for a variety of reasons.</p>",
    "PostedDate": "2010-02-16T07:02:33.323-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]