[
  {
    "Id": "116141",
    "ThreadId": "34948",
    "Html": "Hi<br>\r\n<br>\r\nI am searching for a flexible localization possibility and found one from Sacha Barber&nbsp;&nbsp;<a href=\"http://sachabarber.net/?p=286\">http://sachabarber.net/?p=286</a>&nbsp;(using satelite resource DLLs in WPF).<br>\r\n<br>\r\nIt basically binds labels to assembly items using a DynamicResource like this&nbsp;<br>\r\n<span style=\"font-size:13px;color:#a31515\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">Application.Resources</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px;color:#a31515\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">ResourceDictionary</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px;color:#a31515\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">ResourceDictionary.MergedDictionaries</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px;color:#a31515\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">ResourceDictionary</span><span style=\"font-size:13px;color:#ff0000\"> Source</span><span style=\"font-size:13px;color:#0000ff\">=&quot;Dictionary_en-US.xaml&quot; /&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px;color:#a31515\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;/</span><span style=\"font-size:13px;color:#a31515\">ResourceDictionary.MergedDictionaries</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px;color:#a31515\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;/</span><span style=\"font-size:13px;color:#a31515\">ResourceDictionary</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px;color:#a31515\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;/</span><span style=\"font-size:13px;color:#a31515\">Application.Resources</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\nin Xaml (for a textblock text)<br>\r\n<br>\r\n<span style=\"font-size:13px;color:#a31515\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">TextBlock</span><span style=\"font-size:13px;color:#ff0000\"> Text</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">DynamicResource</span><span style=\"font-size:13px;color:#ff0000\"> label1</span><span style=\"font-size:13px;color:#0000ff\">}&quot;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#ff0000\">Margin</span><span style=\"font-size:13px;color:#0000ff\">=&quot;5&quot;&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<br>\r\nThe resource looks like this<br>\r\n<span style=\"font-size:13px;color:#0000ff\">\r\n<p>&lt;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#a31515\">ResourceDictionary</span><span style=\"font-size:13px;color:#ff0000\"> xmlns</span><span style=\"font-size:13px;color:#0000ff\">=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#ff0000\">xmlns</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#ff0000\">x</span><span style=\"font-size:13px;color:#0000ff\">=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#ff0000\">xmlns</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#ff0000\">system</span><span style=\"font-size:13px;color:#0000ff\">=&quot;clr-namespace:System;assembly=mscorlib&quot;&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px;color:#a31515\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">system</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">String</span><span style=\"font-size:13px;color:#ff0000\"> x</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#ff0000\">Key</span><span style=\"font-size:13px;color:#0000ff\">=&quot;label1&quot;&gt;</span><span style=\"font-size:13px;color:#a31515\">en-us label1</span><span style=\"font-size:13px;color:#0000ff\">&lt;/</span><span style=\"font-size:13px;color:#a31515\">system</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">String</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px;color:#a31515\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">system</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">String</span><span style=\"font-size:13px;color:#ff0000\"> x</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#ff0000\">Key</span><span style=\"font-size:13px;color:#0000ff\">=&quot;label2&quot;&gt;</span><span style=\"font-size:13px;color:#a31515\">en-us label2</span><span style=\"font-size:13px;color:#0000ff\">&lt;/</span><span style=\"font-size:13px;color:#a31515\">system</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">String</span><span style=\"font-size:13px;color:#0000ff\">&gt;...<br>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<br>\r\n<br>\r\nThe column headers are bound the same way&nbsp;<br>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">dg</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">DataGrid.Columns</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px;color:#a31515\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">dg</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">DataGridTextColumn</span><span style=\"font-size:13px;color:#ff0000\"> Header</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">DynamicResource</span><span style=\"font-size:13px;color:#ff0000\"> label1</span><span style=\"font-size:13px;color:#0000ff\">}&quot;</span><span style=\"font-size:13px;color:#ff0000\"> DataFieldBinding</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">Binding</span><span style=\"font-size:13px;color:#ff0000\"> Path</span><span style=\"font-size:13px;color:#0000ff\">=ModuleName}&quot; /&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<br>\r\nWhen starting the application all seems well, both the TextBlock and the column header get the label from the initial ressource.<br>\r\n<br>\r\nBut after switching the assembly the labels will only be refreshed for the TextBlock, although the resource entry is the&nbsp;same for both<br>\r\n<br>\r\n&nbsp;The switch is done using this routine:<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">Public</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">Sub</span><span style=\"font-size:13px\"> ApplyCultureDictionary(</span><span style=\"font-size:13px;color:#0000ff\">ByVal</span><span style=\"font-size:13px\"> cultureDictionaryUri </span><span style=\"font-size:13px;color:#0000ff\">As</span><span style=\"font-size:13px\"> Uri)\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#008000\">' Load the ResourceDictionary into memory.\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">Dim</span><span style=\"font-size:13px\"> cultureDict </span><span style=\"font-size:13px;color:#0000ff\">As</span><span style=\"font-size:13px\"> ResourceDictionary = </span><span style=\"font-size:13px;color:#0000ff\">TryCast</span><span style=\"font-size:13px\">(Application.LoadComponent(cultureDictionaryUri), ResourceDictionary)\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">Dim</span><span style=\"font-size:13px\"> mergedDicts </span><span style=\"font-size:13px;color:#0000ff\">As</span><span style=\"font-size:13px\"> Collection(</span><span style=\"font-size:13px;color:#0000ff\">Of</span><span style=\"font-size:13px\"> ResourceDictionary) = </span><span style=\"font-size:13px;color:#0000ff\">MyBase</span><span style=\"font-size:13px\">.Resources.MergedDictionaries\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#008000\">' Remove the existing skin dictionary, if one exists.\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#008000\">' NOTE: In a real application, this logic might need\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#008000\">' to be more complex, because there might be dictionaries\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#008000\">' which should not be removed.\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">If</span><span style=\"font-size:13px\"> mergedDicts.Count &gt; 0 </span><span style=\"font-size:13px;color:#0000ff\">Then\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>mergedDicts.Clear()</p>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">End</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">If\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#008000\">' Apply the selected skin so that all elements in the\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#008000\">' application will honor the new look and feel.\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<span style=\"font-size:13px\">\r\n<p>mergedDicts.Add(cultureDict)</p>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\">End</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">Sub\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<br>\r\n&nbsp;Unfortunately, this does not work for the Header-Property&nbsp;<br>\r\n<br>\r\nAm I completely wrong here?<br>\r\n<br>\r\nRegards<br>\r\nKlaus<br>\r\n",
    "PostedDate": "2008-09-04T13:15:37.08-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "116152",
    "ThreadId": "34948",
    "Html": "Hi<br>\r\n<br>\r\nI missed one detail:<br>\r\n<br>\r\nIn Sachas solution, there was a problem that controls (a button) build at runtime won't get refreshed.<br>\r\nThis may be the same here.<br>\r\n<br>\r\nThe following helped for the button<br>\r\n<br>\r\nButton dynbtn = new Button();<br>\r\ndynbtn.SetResourceReference(Button.ContentProperty, “label1″);<br>\r\ndynPanel.Children.Add(dynbtn);<br>\r\n<br>\r\nMaybe there is one such line for the gridcols, too?<br>\r\nRegards<br>\r\nKlaus\r\n",
    "PostedDate": "2008-09-04T13:34:24.6-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]