[
  {
    "Id": "143972",
    "ThreadId": "43322",
    "Html": "I have a bool property that when false means ascending sort order, and when true means descending sort order.<br>\r\nI would like this to be represented in a DataGrid column as a combo box with the entries &quot;Ascending&quot; and &quot;Descending&quot;.<br>\r\n<br>\r\nI've read vinsibal's article <a href=\"http://blogs.msdn.com/vinsibal/archive/2008/10/31/wpf-datagrid-datagridcomboboxcolumn-v1-intro.aspx\">http://blogs.msdn.com/vinsibal/archive/2008/10/31/wpf-datagrid-datagridcomboboxcolumn-v1-intro.aspx</a><br>\r\nwhich states &quot;<span style=\"font-family:calibri\">When the column is bound to a primitive data type such as int, string, or bool, and you want the ComboBox to have a list of similar items to choose from, you can use SelectedItemBinding like so:</span>&quot; so I've tried the following (with the hope that boolean was handled like the integers 0 and 1 and everything would be automagically translated):<br>\r\n<span style=\"font-size:13px;color:#0000ff\">                &lt;dg:DataGridComboBoxColumn Header=&quot;Order&quot; SelectedValueBinding=&quot;{Binding Path=NaturalOrder}&quot;&gt;<br>\r\n                    &lt;dg:DataGridComboBoxColumn.ItemsSource&gt;<br>\r\n                        &lt;Collections:ArrayList&gt;<br>\r\n                            &lt;System:String&gt;Ascending&lt;/System:String&gt;<br>\r\n                            &lt;System:String&gt;Descending&lt;/System:String&gt;<br>\r\n                        &lt;/Collections:ArrayList&gt;<br>\r\n                    &lt;/dg:DataGridComboBoxColumn.ItemsSource&gt;<br>\r\n                &lt;/dg:DataGridComboBoxColumn&gt;<br>\r\n<br>\r\n<span style=\"font-family:calibri\">The expected behaviour was that when opening the second column would be set to either Ascending or Descending, and that changing the value using the combo box would affect the true or false setting e source object property.<br>\r\n<br>\r\nWhat happens is that the column is initially shown as empty.  Clicking in a cell brings up the combo drop down, but selecting an item in the drop down has no effect.  The selected value is shown after selecting, but disappears when leaving the cell, and is not preserved when closing and opening the dialog holding the datagrid, which means that the source object hasn't been updated.<br>\r\n<br>\r\nDo I need a custom value converter?  If so, where should I put it?  Do I need an ArrayList of something other than String?  I.e. elements that hold both a boolean value and a String presentation?  Or do I need a different collection than ArrayList for the combo content?<br>\r\n<br>\r\nThanx!<br>\r\n<br>\r\n<br>\r\n- Steinar</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n",
    "PostedDate": "2009-01-02T03:54:18.157-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "143999",
    "ThreadId": "43322",
    "Html": "Looks like a custom value converter between bool values and the strings used in the combo, may be the way to go.<br>\r\nI'll post back here if (and if not) I get it to work.\r\n",
    "PostedDate": "2009-01-02T06:47:29.813-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "145011",
    "ThreadId": "43322",
    "Html": "<p>Here's what I did:<br>\r\n - Wrote a value converter (I put it in the MyPanel.xaml.cs file, of the panel where it would be used, but outside of the class)<br>\r\n - Added the following at the start of the .xaml file (as the first element inside the top level element)<br>\r\n    &lt;UserControl.Resources&gt;<br>\r\n        &lt;Devices:BoolAndSortTypeNameValueConverter x:Key=&quot;BoolConverter&quot; /&gt;<br>\r\n    &lt;/UserControl.Resources&gt;<br>\r\n - The Devices namespace is defined as<br>\r\n    xmlns:Devices=&quot;clr-namespace:StandardDevices.Devices&quot;<br>\r\n   where what follows &quot;clr-namespace:&quot; is the C# namespace the BoolAndSortTypeNameConverter class resides in<br>\r\n - Then finally, the binding on the column corresponding to the bool property, is defined as<br>\r\n    &lt;dg:DataGridComboBoxColumn Header=&quot;Order&quot; SelectedValueBinding=&quot;{Binding Path=NaturalOrder, Converter={StaticResource BoolConverter}}&quot;&gt;</p>\r\n<p>The value converter class is defined like this:<br>\r\nnamespace StandardDevices.Devices<br>\r\n{<br>\r\n    internal class BoolAndSortTypeNameValueConverter : IValueConverter<br>\r\n    {<br>\r\n        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)<br>\r\n        {<br>\r\n            return (bool) value ? &quot;Descending&quot; : &quot;Ascending&quot;;<br>\r\n        }</p>\r\n<p>        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)<br>\r\n        {<br>\r\n            string stringValue = (string) value;<br>\r\n            if (string.Compare(&quot;Ascending&quot;, stringValue, StringComparison.Ordinal) == 0)<br>\r\n            {<br>\r\n                return false;<br>\r\n            }</p>\r\n<p>            if (string.Compare(&quot;Descending&quot;, stringValue, StringComparison.Ordinal) == 0)<br>\r\n            {<br>\r\n                return true;<br>\r\n            }</p>\r\n<p>            return null; // create an exception<br>\r\n        }<br>\r\n    }<br>\r\n}</p>\r\n",
    "PostedDate": "2009-01-07T04:34:21.48-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]