[
  {
    "Id": "130552",
    "ThreadId": "39356",
    "Html": "I'm using the DataGrid and need to call a method after a value has been edited via the cell. For most WPF controls I would set NotifyOnTargetUpdated=True in the binding and hook the TargetUpdated event in my Control. Unfortunately the DataGrid does not have a TargetUpdated event that I can see ( is there documentation somewhere? ). There is a CellEditEnding event but that apparently gets called immediately before the Binding Target value is changed. Is there a way to register a callback which is called after the Binding Target is updated?",
    "PostedDate": "2008-11-06T08:52:31.62-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "130574",
    "ThreadId": "39356",
    "Html": "If all your care about is to have a method or operation fire after CellEditEnding or RowEditEnding, you can use the Dispatcher.BeginInvoke method in your Cell/RowEditEnding handler.\r\n",
    "PostedDate": "2008-11-06T10:20:11.9-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "130581",
    "ThreadId": "39356",
    "Html": "Also if you want to execute code immediately after binding update then you can use the NotifyOnSourceUpdated approach ( I guess this is what you meant when you said NotifyOnTargetUpdate, because here the target is the cell's control and source is data object's property). Here are the details of this approach....<br>\r\n<br>\r\nSet NotifyOnSourceUpdated to true on which ever binding you want to hook up to.<br>\r\n<br>\r\nIn code behind include the following line in constructor...<br>\r\n    Binding.AddSourceUpdatedHandler(&lt;DataGridInstance&gt;,OnDataGridSourceUpdated);<br>\r\n<br>\r\nFollowing is the implementation of the eventhandler<br>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\">        void OnDataGridSourceUpdated(object sender, DataTransferEventArgs e)</p>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\">        {</p>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\">            DataGridCell cell = FindVisualParent&lt;DataGridCell&gt;(e.TargetObject as UIElement);<br>\r\n            // Now you have the cell you are dealing with, so you can do what ever you want from here</p>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\">        }</p>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\"> </p>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\">        static T FindVisualParent&lt;T&gt;(UIElement element) where T : UIElement</p>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\">        {</p>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\">            UIElement parent = element;</p>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\">            while (parent != null)</p>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\">            {</p>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\">                T correctlyTyped = parent as T;</p>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\">                if (correctlyTyped != null)</p>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\">                {</p>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\">                    return correctlyTyped;</p>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\">                }</p>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\"> </p>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\">                parent = VisualTreeHelper.GetParent(parent) as UIElement;</p>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\">            }</p>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\"> </p>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\">            return null;</p>\r\n<p style=\"font-size:11pt;margin:0in;font-family:calibri\">        }</p>\r\n",
    "PostedDate": "2008-11-06T10:46:26.673-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "130612",
    "ThreadId": "39356",
    "Html": "Thanks, the AddSourceUpdatedHandler approach works fine. Is there a place for feature requests for the DataGrid? I think it would be nice if it worked like the other Controls and had a SourceUpdated event that could be attached to.",
    "PostedDate": "2008-11-06T12:10:23.22-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]