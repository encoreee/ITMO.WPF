[
  {
    "Id": "134298",
    "ThreadId": "40485",
    "Html": "Hi There,<br>\r\n<br>\r\nI am using the new Data Grid from latest release (Oct 2008). I am not achieving correct validation styling. <br>\r\n<br>\r\nI want to turn a data cell belonging to Name column into green when errors occur (e.g. empty value is provided) ... The data context of the grid is an observable collection of Employee class that has a single attribute &quot;Name&quot;<br>\r\n<br>\r\nFollowing is the Data Grid XAML...<br>\r\n<span style=\"font-size:13px;color:#0000ff\">\r\n<p>&lt;my:DataGrid Name=&quot;DataGrid1&quot; ItemsSource=&quot;{Binding}&quot; AutoGenerateColumns=&quot;False&quot; VerticalAlignment=&quot;Top&quot;&gt;</p>\r\n<p>&lt;my:DataGrid.Resources&gt;<br>\r\n   &lt;Style x:Key=&quot;MyGridCell&quot; TargetType=&quot;{x:Type my:DataGridCell}&quot;&gt;<br>\r\n     &lt;Style.Triggers&gt;<br>\r\n       &lt;Trigger Property=&quot;Validation.HasError&quot; Value=&quot;True&quot;&gt;<br>\r\n         &lt;Setter Property=&quot;Background&quot; Value=&quot;Green&quot;/&gt;<br>\r\n       &lt;/Trigger&gt;<br>\r\n     &lt;/Style.Triggers&gt;<br>\r\n   &lt;/Style&gt;<br>\r\n&lt;/my:DataGrid.Resources&gt;</p>\r\n<p>&lt;my:DataGrid.Columns&gt;<br>\r\n   &lt;my:DataGridTextColumn Header=&quot;Name&quot; CellStyle=&quot;{StaticResource MyGridCell}&quot;&gt;<br>\r\n       &lt;my:DataGridTextColumn.Binding&gt;<br>\r\n         &lt;Binding Path=&quot;Name&quot; UpdateSourceTrigger=&quot;PropertyChanged&quot; ValidatesOnDataErrors=&quot;True&quot;&gt;<br>\r\n            &lt;Binding.ValidationRules&gt;<br>\r\n               &lt;DataErrorValidationRule/&gt;<br>\r\n            &lt;/Binding.ValidationRules&gt;<br>\r\n         &lt;/Binding&gt;<br>\r\n         &lt;/my:DataGridTextColumn.Binding&gt;<br>\r\n       &lt;/my:DataGridTextColumn&gt;<br>\r\n&lt;/my:DataGrid.Columns&gt;</p>\r\n<p>&lt;/my:DataGrid&gt;</p>\r\n<p><strong>Following is the Employee Class...</strong></p>\r\n</span>\r\n<p><span style=\"font-size:13px;color:#0000ff\"><br>\r\nClass Employee    <br>\r\n    Implements System.ComponentModel.INotifyPropertyChanged, IDataErrorInfo\r\n<p>    Private _name As String</p>\r\n<p>    Public Property Name() As String<br>\r\n        Get<br>\r\n            Return _name<br>\r\n        End Get<br>\r\n        Set(ByVal value As String)<br>\r\n            _name = value<br>\r\n            RaiseEvent PropertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(&quot;Name&quot;))<br>\r\n        End Set<br>\r\n    End Property</p>\r\n<p>    Public Event PropertyChanged(ByVal sender As Object, ByVal e As System.ComponentModel.PropertyChangedEventArgs) Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged</p>\r\n<p>    Default Public Overloads ReadOnly Property Item(ByVal columnName As String) As String Implements System.ComponentModel.IDataErrorInfo.Item<br>\r\n        Get<br>\r\n            Dim result As String = String.Empty<br>\r\n            If (columnName = &quot;Name&quot;) Then<br>\r\n                If String.IsNullOrEmpty(Me.Name) Then<br>\r\n                    result = &quot;Name cannot be blank!&quot;<br>\r\n                End If<br>\r\n            End If<br>\r\n            Return result<br>\r\n        End Get<br>\r\n    End Property</p>\r\n<p>    Public ReadOnly Property [Error]() As String Implements System.ComponentModel.IDataErrorInfo.Error<br>\r\n        Get<br>\r\n            Return Me(String.Empty)<br>\r\n        End Get<br>\r\n    End Property<br>\r\nEnd Class</p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n<p> </p>\r\n",
    "PostedDate": "2008-11-21T09:16:21.233-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "137985",
    "ThreadId": "40485",
    "Html": "Take a look at the sample on this post, <a href=\"http://blogs.msdn.com/vinsibal/archive/2008/10/22/wpf-datagrid-and-the-wpftoolkit-have-released.aspx\">http://blogs.msdn.com/vinsibal/archive/2008/10/22/wpf-datagrid-and-the-wpftoolkit-have-released.aspx</a>.  It shows how cell and item level validation can be achieved.  For your scenario you will want to set the background to green on the TextBox and not the DataGridCell.  There are a couple known issues too to be aware about.  You can read more on that here, <a href=\"http://www.codeplex.com/wpf/Wiki/View.aspx?title=Validation&referringTitle=Tips %26 Tricks\">http://www.codeplex.com/wpf/Wiki/View.aspx?title=Validation&amp;referringTitle=Tips%20%26%20Tricks</a>.\r\n",
    "PostedDate": "2008-12-05T05:53:33.47-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]