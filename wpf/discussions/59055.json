[
  {
    "Id": "199958",
    "ThreadId": "59055",
    "Html": "<p>Hello,</p>\r\n<p>&nbsp;</p>\r\n<p>Could someone tell me if there are any new WPF controls in Visual 2010?&nbsp; And if so what they are?</p>\r\n<p>I have gone to the Visual Studio webpage:&nbsp; http://www.microsoft.com/visualstudio/en-us/default.mspx</p>\r\n<p>But all the info seems to be fairly general there.</p>",
    "PostedDate": "2009-06-10T05:48:43.09-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "200205",
    "ThreadId": "59055",
    "Html": "<p>The new controls in Visual Studio 2010 and .NET 4.0 are the same ones you'll find the Toolkit: DataGrid, DatePicker, and Calendar.</p>",
    "PostedDate": "2009-06-10T15:35:39.32-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "200364",
    "ThreadId": "59055",
    "Html": "<p>Hmm is there a list of potential new future ones?&nbsp; Will the controls always be tested out here before they get incorporated into VS?&nbsp; Is there a way to suggest a control to the team that makes them?</p>\r\n<p>I think there really needs to be a DateTime picker that lets the user select both the date and time at the same time.&nbsp; I find it odd that a DateTime object can store both a date and a time at the same time and that a field in a modern database can store both a date and time at the same time.&nbsp; But there is no WPF control that lets you select both the date and time at the same time.</p>",
    "PostedDate": "2009-06-11T04:33:37.2-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "201017",
    "ThreadId": "59055",
    "Html": "<p>Thanks for this feedback.&nbsp; If you have suggestions for controls, please feel free to post them right on the Discussions on this site.&nbsp; We take all the suggestions that everyone posts and record them in an internal database which we use to decide which features to implement in the next release.&nbsp; If you see suggestions from other people that you agree with, I encourage you to reply back saying &quot;I could use this too!&quot; because the more people that request a certain feature, the more likely we'll be to implement that feature.&nbsp;</p>\r\n<p>We don't have an official&nbsp;list of potential new controls at the moment, besides what's listed in the&nbsp;<a href=\"http://wpf.codeplex.com/Wiki/View.aspx?title=Toolkit Roadmap\"><span style=\"color:#3e62a6\">Toolkit Roadmap</span></a>.&nbsp; We are planning to eventually port most of the controls from the Silverlight Toolkit to WPF, but we don't have a timeline for that yet.&nbsp; Besides that, there are some controls which we plan to release in WPF Futures which could be considered for a future release (check out the&nbsp; <a href=\"http://wpf.codeplex.com/Wiki/View.aspx?title=Futures Roadmap\"><span style=\"color:#3e62a6\">Futures Roadmap</span></a>).&nbsp; Any new controls we introduce will most likely be tested out through the Toolkit and/or Futures&nbsp;before they ship in the .NET Framework, and there likely will be some controls which will only ship in the Toolkit.&nbsp;</p>\r\n<p>If you have any requests for new controls, please do post them on this site!</p>\r\n<p>Thanks,<br>Samantha</p>",
    "PostedDate": "2009-06-12T15:24:35.797-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "201106",
    "ThreadId": "59055",
    "Html": "<p>Controls we should really have soon:</p>\r\n<ul>\r\n<li>DateTime/Time picker (actually, these as well as the DatePicker should have been one control with configurable behavior)</li>\r\n<li>NumericUpDown/DomainUpDown</li>\r\n<li>Accordion</li>\r\n<li>MaskedEdit</li>\r\n</ul>\r\n<p>Many of us have already implemented these ourselves and/or are available from third parties, but they all should really exist in the framework.&nbsp; I'm sure there's plenty of other controls people could list, but I think if you cover these you've done what most would consider the &quot;bare minimum&quot; expected (to be fair, the Accordion might be more than is expected, but in modern UIs it's fairly essential, and it's not that complex of a control).</p>",
    "PostedDate": "2009-06-13T03:52:36.52-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "201133",
    "ThreadId": "59055",
    "Html": "<p>Hi,</p>\r\n<p>&nbsp;</p>\r\n<p>I vote for Numeric Up/down and Masked edit.</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-06-13T07:10:43-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "201490",
    "ThreadId": "59055",
    "Html": "<p>What I really would like to see is the kind of control that is used to show a bar providing information at the top of many application windows these days. Brutally honestly I forget what it's called, but it's often used to display non-modal information that is still more important than to just go into a status bar. Anyone know what I'm talking about? (It's the same kind of control that VS2008 uses, for example, to indicate in the XAML designer that an assembly has been updated and the designer needs to be reloaded.)</p>\r\n<p>Ideally, I'm envisioning just adding it to the window's visual tree, setting the Content property to whatever is needed, and setting Visibility to the appropriate value. It could have some common UI elements (like a close button for the user to hide it) in a default style, support a visibility timeout (such that you can say &quot;automatically hide five seconds after set visible&quot;) and the like. Sure, this can be done by combining what's in WPF already - panels, buttons, labels, animation storyboards, ... - but that seems a lot like reinventing the wheel, especially considering that it is so commonplace in modern UIs.</p>\r\n<p>A nice touch would be if it can easily be set to whether to push other controls out of the way, or cover them, but that wouldn't necessarily need to go into a first version.</p>",
    "PostedDate": "2009-06-15T01:51:55.36-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "201601",
    "ThreadId": "59055",
    "Html": "<p>These are controls that I really could use now.</p>\r\n<p>&nbsp;</p>\r\n<p>DateTime control.&nbsp; I agree with <a id=\"ctl00_ctl00_MasterContent_Content_PostRepeater_ctl08_UserNameLink\" href=\"http://www.codeplex.com/site/users/view/wekempf\"><span style=\"color:#3e62a6\">wekempf</span></a>&nbsp;when he said, &quot;DateTime/Time picker (actually, these as well as the DatePicker should have been one control with configurable behavior) &quot;&nbsp;&nbsp; I used a control that that could do all that&nbsp;a long time ago with another compiler.&nbsp; It&nbsp;gave you the option to allow a time picker to be at the botton of the drop down&nbsp;month-day selector.&nbsp; (In other words when all of the days of the month dropped down you could choose a day and there was a time selector at the bottom of that drop down.&nbsp; Also if you could also prevent the user from selecting certain times that would be great.&nbsp; Like for instance only allow 15 minute time slots to be selected like: 9:00, 9:15, 9:30, 9:45, and so on.</p>\r\n<p>A numeric editor would be nice as well.&nbsp; I made one a long time ago for a different compiler that let you decide if you want to use 2, 4 or 6 buttons to increase/decrease values.&nbsp; You could assign the first two buttons lets say to a value of 1 so&nbsp;the user&nbsp;could increase/decrease by 1.&nbsp; You could also use another pair that you could lets say set to a value of 10 so that if the user pushed those the value could go up or down by 10 and the third set you could also set to whateve value you want as well.&nbsp; (You could also just choose to use just 2 buttons).&nbsp; Hopefully I explained that well enough to be understood.&nbsp; This is great for huge values...you could set the first buttons to a value of 1, the second to a value of lets say 100 and the third set toa&nbsp; value of 1000.&nbsp; Or you could just use 1 set of those buttons and the other 4 would be invisible.</p>\r\n<p>A color editor control - I think I would prefere this to be some sort of control and not a dialog</p>\r\n<p>A font selector control - I think I would prefere this to be some sort of control and not a dialog</p>\r\n<p>I'm also still looking forward to that Ribbon control.</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-06-15T07:55:35.29-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "203865",
    "ThreadId": "59055",
    "Html": "<p>A docking control is a must!!!&nbsp; This would be a standalone control, but would work well with Ribbon.&nbsp; Similar to Infragistics, etc.</p>\r\n<p>I would like to see controls more in-line with the release of SL toolkit controls.&nbsp; It would be nice to see shorter release cycles like SL toolkit, as well.</p>\r\n<p>Hope to see Accordion, DataForm, DataPager, TransitioningContent, etc.</p>\r\n<p>Have theming work with the new controls ( Datagrid, Calendar, DatePicker ).</p>\r\n<p>Still waiting on Ribbon.&nbsp; Need this ASAP!</p>\r\n<p>Hopefully the team can get more focus on controls&nbsp;2010/Q1.&nbsp; Understand you are working hard on VS10 and .NET 4.&nbsp; Keep up the good work.</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-06-21T12:27:34.947-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "216875",
    "ThreadId": "59055",
    "Html": "<p>Here are a list of controls that would have my vote in ascending order from highest need:</p>\r\n<ul>\r\n<li>MDI Container or a window docking container (see <a href=\"http://www.actiprosoftware.com/products/dotnet/wpf/docking/default.aspx\">Actipro Docking</a>)</li>\r\n<li>SplitButton (or DropDownButton)</li>\r\n<li>NumericUpDown (or Spinner) <strong>*</strong></li>\r\n<li>DataGrid <strong>*</strong></li>\r\n<li>TimePicker</li>\r\n</ul>\r\n<p><strong>*</strong> Control is already in the toolkit or otherwise slated for inclusion in .NET 4.0</p>",
    "PostedDate": "2009-07-28T10:11:07.297-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "219195",
    "ThreadId": "59055",
    "Html": "<p>I'm voting for the following controls:</p>\r\n<ul>\r\n<li> DateTimePicker or at least TimePicker</li>\r\n<li>TransitioningContent</li>\r\n<li>DataPager</li>\r\n<li>DataForm</li>\r\n<li>Rating</li>\r\n<li>AutoCompleteBox</li>\r\n<li>Docking</li>\r\n<li>Accordion</li>\r\n</ul>",
    "PostedDate": "2009-08-04T04:19:00.943-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "251067",
    "ThreadId": "59055",
    "Html": "<p>What about multitouch controls like ScatterView? Also existing control should be made &quot;multitouchable&quot;, lile scrollviewer and button. For example button should rise click event only after all contacts are released, in beta 2 it makes it after the first one is released even if there is contacts that are pressed.</p>",
    "PostedDate": "2009-10-29T01:03:31.623-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]