[
  {
    "Id": "136089",
    "ThreadId": "41020",
    "Html": "Hi, When rows are added to my datagrid or underlying datatable I want to indicate they are new by changing the background colour. Currently I have this working by setting the cell background individually, however as soon as the grid is sorted the background colours are lost.<br>\r\n<br>\r\nMy grid has auto generating columns on and the datatable defines the columns. Ideally I'd like a DataTrigger on the row which looks at the underlying RowState and changes colour if its Added? But I can't work out how to do it.<br>\r\n<br>\r\nAny help most appreciated.<br>\r\n<br>\r\n<br>\r\n",
    "PostedDate": "2008-11-28T06:43:58.743-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "136503",
    "ThreadId": "41020",
    "Html": "Hi,<br>\r\n<br>\r\nThis one has been bugging me for a while!<br>\r\n<br>\r\nMy initial thought was - that's easy, the Item associated with each row will be a DataRowView, from here you can navigate to the RowState .... DataRowView.Row.RowState, giving the following style:<br>\r\n<br>\r\n&lt;Style x:Key=&quot;MyCellStyle&quot; TargetType=&quot;{x:Type dg:DataGridCell}&quot;&gt;<br>\r\n&nbsp;&nbsp; &lt;Style.Triggers&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;DataTrigger Binding=&quot;{Binding Path=Row.RowState, Mode=OneWay}&quot; Value=&quot;Modified&quot;&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter Property=&quot;Background&quot; Value=&quot;Yellow&quot;/&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/DataTrigger&gt;<br>\r\n&nbsp;&nbsp;&nbsp; &lt;/Style.Triggers&gt;<br>\r\n&lt;/Style&gt;<br>\r\n<br>\r\nThe problem is changes to DataRow.RowState do not result in any property change notification, therefore when the row state changes the above trigger is not re-evaluates. Teh only solution I could come up with was to 'refresh' the above style by removing it then re-applying to the grid when the current items selection is changed:<br>\r\n<br>\r\n&lt;dg:DataGrid ItemsSource=&quot;{Binding}&quot; CellStyle=&quot;{StaticResource MyCellStyle}&quot; SelectionChanged=&quot;DataGrid_SelectionChanged&quot; /&gt;<br>\r\n<br>\r\nprivate void DataGrid_SelectionChanged(object sender, SelectionChangedEventArgs e)<br>\r\n{<br>\r\n&nbsp;&nbsp;&nbsp; DataGrid grid = sender as DataGrid;<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; Style style = grid.CellStyle;<br>\r\n&nbsp;&nbsp;&nbsp; grid.CellStyle = null;<br>\r\n&nbsp;&nbsp;&nbsp; grid.CellStyle = style;<br>\r\n}<br>\r\n<br>\r\nYuck!<br>\r\n<br>\r\nThis has been bugging me for a while - but I haven't come up with a better solution yet, other than of course managing this entirely programmatically by styling each row as the Selection changes.<br>\r\n<br>\r\nRegards,<br>\r\nColin E.<br>\r\n--<br>\r\nhttp://wpfadventures.wordpress.com/ - my WPF blog<br>\r\nhttp://www.codeproject.com/KB/WPF/WPFDataGridExamples.aspx - WPF DataGrid Practical Examples <br>\r\n<br>\r\n<br>\r\n<br>\r\n\r\n",
    "PostedDate": "2008-12-01T01:14:40.933-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "160949",
    "ThreadId": "41020",
    "Html": "I have another ugly solution to this problem:<br>\r\n<br>\r\n1) Listen to RowChanged on the DataTable<br>\r\n<br>\r\n_dataTable.RowChanged += DataTableOnRowChanged;<br>\r\n<br>\r\n<br>\r\n<br>\r\n2) In the listener, find the UI element that corresponds to the changed row and explicitly update the binding (I'm using the fontweight on a textblock - adjust accordingly):<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private void DataTableOnRowChanged(object sender, DataRowChangeEventArgs args) {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var n = DataGrid.Items.Count;<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(var i = 0; i &lt; n; ++i)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var x = (DataGridRow)DataGrid.ItemContainerGenerator.ContainerFromIndex(i);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(x != null &amp;&amp; ((DataRowView)x.Item).Row == args.Row) {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; UpdateBinding(x);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private static void UpdateBinding(DependencyObject ui) {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var iend = VisualTreeHelper.GetChildrenCount(ui);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(var i = 0; i &lt; iend; ++i) {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var e = (UIElement) VisualTreeHelper.GetChild(ui, i);<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(e is TextBlock) {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var expr = BindingOperations.GetBindingExpression(e, TextBlock.FontWeightProperty);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(expr != null) {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; expr.UpdateTarget();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; UpdateBinding(e);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n<br>\r\n\r\n",
    "PostedDate": "2009-02-23T06:47:40.607-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]