[
  {
    "Id": "185255",
    "ThreadId": "54890",
    "Html": "Hi,<br>\r\n<br>\r\nI'm trying to do something I would have thought was pretty straight-forward.&nbsp; I have some cells within my grid which I want to have disabled.&nbsp; Within each of the business objects which make-up the itemsSource for the grid, I have a property available which will indicate whether the cell should be read-only.&nbsp; I've tried the following things:<br>\r\n<br>\r\n-In the code-behind, I handle the CellEditEnding event, and I tried calling CancelEdit() method on my business object (if the cell should be readonly, that is).&nbsp; I figure this way, I can let the user try entering info, and then give them some sort of helpful msg, saying something like &quot;you can't edit this value b/c reason XYZ.&quot;&nbsp; However, when I did this, CancelEdit() did not refresh the value displayed in the cell.&nbsp; So then I tried manually refreshing the grid after CancelEdit(), and I got the following message: &quot;'Refresh' is not allowed during an AddNew or EditItem transaction.&quot;<br>\r\n<br>\r\n-Instead of handling the edit after-the-fact (as this could lead to some user frustration if they've been typing away, and then the app is telling them that their work is no good), I next tried conditionally disabling the cell to preempt any confusion.&nbsp; I added a new cell style for the column which I want to have this conditional-cell-disable behavior:<br>\r\n<br>\r\n&lt;dg:DataGridTextColumn.CellStyle&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Style&nbsp; TargetType=&quot;{x:Type dg:DataGridCell}&quot;&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Style.Triggers&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;DataTrigger Binding=&quot;{Binding Path=AllowEdit}&quot; Value=&quot;False&quot;&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter&nbsp; Property=&quot;dg:DataGridCell.IsReadOnly&quot; Value=&quot;True&quot; /&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/DataTrigger&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Style.Triggers&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Style&gt;<br>\r\n&lt;/dg:DataGridTextColumn.CellStyle&gt;<br>\r\n<br>\r\nbut I got a compile error on this (understandably) - saying that DataGridCell's IsReadOnly property is read-only.<br>\r\n<br>\r\n-Next, I tried using the same style as before - but set the <em>column's</em> IsReadOnly instead.&nbsp; The problem here is how to refer to the column.&nbsp; I tried using the Setter's ElementName&nbsp; property, but that wasn't allowed.<br>\r\n<br>\r\n-Finally, I abandoned the CellStyle, and tried binding the IsReadOnly property of the column to the property on my business object (which would indicate whether the cell should be read-only), but that didn't work either:<br>\r\n<br>\r\n&lt;dg:DataGridTextColumn Header=&quot;Description&quot; Binding=&quot;{Binding Description}&quot; x:Name=&quot;colDescription&quot; Width=&quot;450&quot; IsReadOnly=&quot;{Binding AllowEdit, Mode=OneWay}&quot;/&gt;<br>\r\n<br>\r\n&nbsp;I got a binding error, which made it seem like the source element in the binding was null.<br>\r\n<br>\r\nSo what's going on here?&nbsp; Am I missing something simple?&nbsp; Much thanks in advance for anyone who can shed some light on this issue.<br>\r\n-Matt \r\n",
    "PostedDate": "2009-04-29T16:12:38.24-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "250291",
    "ThreadId": "54890",
    "Html": "<p>Hi there,</p>\r\n<p>Have you tried using the EditingElementStyle inside your DataGridTextColumn?&nbsp; For my object, I have an IsNew property that is set to true for the new row.&nbsp; Here is how I handle the readonly columns in my situation:</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><div style=\"color:Black;background-color:White\"><pre>&lt;dg:DataGridTextColumn<span style=\"color:#A31515\"></span>&gt;\r\n    &lt;dg:DataGridTextColumn.CellStyle&gt;\r\n        &lt;Style TargetType=<span style=\"color:#A31515\">&quot;{x:Type dg:DataGridCell}&quot;</span>&gt;\r\n            &lt;Style.Triggers&gt;\r\n                &lt;DataTrigger Binding=<span style=\"color:#A31515\">&quot;{Binding Path=IsNew}&quot;</span> Value=<span style=\"color:#A31515\">&quot;False&quot;</span>&gt;\r\n                    &lt;Setter Property=<span style=\"color:#A31515\">&quot;IsEnabled&quot;</span> Value=<span style=\"color:#A31515\">&quot;False&quot;</span> /&gt;\r\n                &lt;/DataTrigger&gt;\r\n            &lt;/Style.Triggers&gt;\r\n        &lt;/Style&gt;\r\n    &lt;/dg:DataGridTextColumn.CellStyle&gt;\r\n    &lt;dg:DataGridTextColumn.EditingElementStyle&gt;\r\n        &lt;Style TargetType=<span style=\"color:#A31515\">&quot;TextBox&quot;</span>&gt;\r\n            &lt;Style.Triggers&gt;\r\n                &lt;DataTrigger Binding=<span style=\"color:#A31515\">&quot;{Binding Path=IsNew}&quot;</span> Value=<span style=\"color:#A31515\">&quot;False&quot;</span>&gt;\r\n                    &lt;Setter Property=<span style=\"color:#A31515\">&quot;IsReadOnly&quot;</span> Value=<span style=\"color:#A31515\">&quot;True&quot;</span> /&gt;\r\n                &lt;/DataTrigger&gt;\r\n            &lt;/Style.Triggers&gt;                            \r\n        &lt;/Style&gt;\r\n    &lt;/dg:DataGridTextColumn.EditingElementStyle&gt;\r\n&lt;/dg:DataGridTextColumn&gt;\r\n</pre>\r\n</div>\r\n</pre>\r\n</div>\r\n</p>",
    "PostedDate": "2009-10-27T11:59:28.83-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]