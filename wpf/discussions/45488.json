[
  {
    "Id": "151782",
    "ThreadId": "45488",
    "Html": "Hi,<br>\r\n<br>\r\nWe are trying to figure out how to get the selected row (event and item) from the DataGrid in our ViewModel in our WPF app. I have searched and not found any examples of this. I would have thought that this would be a common situation to solve. Any help or ideas would be greatly appreciated as we are stuck at this point.<br>\r\n<br>\r\nthanks!<br>\r\nBill\r\n",
    "PostedDate": "2009-01-28T06:57:19.163-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "151869",
    "ThreadId": "45488",
    "Html": "In your ViewModel you can create a property that will represent row selection:<br>\r\n<span style=\"font-size:13px;color:#0000ff\"><span style=\"font-size:13px;color:#0000ff\">\r\n<p>public</p>\r\n</span>\r\n<p>&nbsp;</p>\r\n</span>\r\n<p><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">bool</span><span style=\"font-size:13px\"> IsSelected<br>\r\n{<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">    get</span><span style=\"font-size:13px\"> { </span><span style=\"font-size:13px;color:#0000ff\">return</span><span style=\"font-size:13px\"> _isSelected; }<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">    set<br>\r\n</span><span style=\"font-size:13px\">    {<br>\r\n        _isSelected = </span><span style=\"font-size:13px;color:#0000ff\">value</span><span style=\"font-size:13px\">;<br>\r\n        OnPropertyChanged(</span><span style=\"font-size:13px;color:#a31515\">&quot;IsSelected&quot;</span><span style=\"font-size:13px\">);<br>\r\n    }<br>\r\n}</span><br>\r\n<br>\r\nThen in a DataGridRow Style you can bind the DataGridRow.IsSelected DP with your ViewModel Property.<br>\r\n<br>\r\n<span style=\"font-size:13px;color:#a31515\">&lt;Style</span><span style=\"font-size:13px;color:#ff0000\"> x</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#ff0000\">Key</span><span style=\"font-size:13px;color:#0000ff\">=&quot;RowStyle&quot;</span><span style=\"font-size:13px;color:#ff0000\"> TargetType</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">x</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">Type</span><span style=\"font-size:13px;color:#ff0000\"> toolkit</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#ff0000\">DataGridRow</span><span style=\"font-size:13px;color:#0000ff\">}&quot;&gt;<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">    &lt;</span><span style=\"font-size:13px;color:#a31515\">Setter</span><span style=\"font-size:13px;color:#ff0000\"> Property</span><span style=\"font-size:13px;color:#0000ff\">=&quot;IsSelected&quot;</span><span style=\"font-size:13px;color:#ff0000\"> Value</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">Binding</span><span style=\"font-size:13px;color:#ff0000\"> Path</span><span style=\"font-size:13px;color:#0000ff\">=IsSelected,</span><span style=\"font-size:13px;color:#ff0000\"> Mode</span><span style=\"font-size:13px;color:#0000ff\">=TwoWay}&quot; /&gt;</span><span style=\"font-size:13px;color:#a31515\"> <br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">&lt;/</span><span style=\"font-size:13px;color:#a31515\">Style</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n",
    "PostedDate": "2009-01-28T10:20:53.913-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "151910",
    "ThreadId": "45488",
    "Html": "Hi Vincent,<br>\r\n<br>\r\nThanks for the quick reply! This makes sense to me and I added this to our code but we are never getting a &quot;IsSelected&quot; property occurring. We had to add the OnPropertyChanged method as well. I would think that selecting a row in the DataGrid would cause the set property to get called but I put a breakpoint on both the get and set and it never hit either. Maybe there's something else I am missing. I'm sure it something really simple and unfortunately I'm a newbie and am missing it..<br>\r\n<br>\r\nthanks,<br>\r\nBill\r\n",
    "PostedDate": "2009-01-28T12:17:58.147-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "151919",
    "ThreadId": "45488",
    "Html": "Could you post a code snippet?\r\n",
    "PostedDate": "2009-01-28T12:49:25.617-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "151946",
    "ThreadId": "45488",
    "Html": "Hi, Here we go... public class ShipmentWindowViewModel : DependencyObject, INotifyPropertyChanged { private CollectionView shipment; private bool isSelected; //public ObservableCollection&lt;shipmentobj /&gt; shipment {get; set;} public List&lt;shipmentobj /&gt; modelShipmentList; private ShipmentService shipmentService = new ShipmentService(); private DelegateCommand clickCommand; public event PropertyChangedEventHandler PropertyChanged; public ShipmentWindowViewModel() { this.shipment = new CollectionView(shipmentService.shipmentCollection); this.clickCommand = new DelegateCommand(this.ClickCommandHandler); } public CollectionView Shipment { get { return this.shipment; } } public DelegateCommand ClickCommand { get { return this.clickCommand; } } private void ClickCommandHandler(Object sender, EventArgs e) { ShipmentObj so = this.shipment.CurrentItem as ShipmentObj; MessageBox.Show(so.ShipmentID); } public bool IsSelected { get { return isSelected; } set { //if (value == isSelected) // return; isSelected = value; OnPropertyChanged(&quot;IsSelected&quot;); ShipmentObj so = this.shipment.CurrentItem as ShipmentObj; MessageBox.Show(so.ShipmentID); } } protected void OnPropertyChanged(string name) { PropertyChangedEventHandler handler = PropertyChanged; if (handler != null) { handler(this, new PropertyChangedEventArgs(name)); } } } &lt;custom:DocumentContent title=&quot;StopWindow&quot; xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot; Icon=&quot;images/stop.png&quot; Width=&quot;662&quot; Height=&quot;357&quot; xmlns:col=&quot;clr-namespace:System.Collections;assembly=mscorlib&quot; xmlns:custom=&quot;clr-namespace:DockingLibrary;assembly=DockingLibrary&quot; xmlns:sys=&quot;clr-namespace:System;assembly=mscorlib&quot; xmlns:vRA.WPF.UI=&quot;http://schemas.microsoft.com/wpf/2008/toolkit&quot; xmlns:local=&quot;clr-namespace:vRA.WPF.UI&quot; xmlns:dg=&quot;http://schemas.microsoft.com/wpf/2008/toolkit&quot; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot; x:Class=&quot;vRA.WPF.UI.ShipmentWindow&quot;&gt;&lt;custom:DocumentContent.DataContext&gt;&lt;local:ShipmentWindowViewModel&gt;&lt;/local:ShipmentWindowViewModel&gt;&lt;/custom:DocumentContent.DataContext&gt;&lt;custom:DocumentContent.Resources&gt;\r\n&lt;style TargetType=&quot;{x:Type dg:DataGridRow}&quot; x:Key=&quot;ShipmentItemStyle&quot;&gt;\r\n    &lt;Setter Property=&quot;IsSelected&quot; Value=&quot;{Binding Path=IsSelected, Mode=TwoWay}&quot; /&gt;\r\n&lt;/style&gt;\r\n&lt;/custom:DocumentContent.Resources&gt;&lt;grid Background=&quot;Beige&quot; Name=&quot;stopGrid&quot; /&gt;&lt;grid.columndefinitions /&gt;&lt;columndefinition Width=&quot;*&quot; /&gt;&lt;columndefinition Width=&quot;auto&quot; /&gt;&lt;grid Grid.Column=&quot;0&quot; /&gt;&lt;groupbox Width=&quot;auto&quot; Height=&quot;68&quot; Background=&quot;Beige&quot; Name=&quot;groupBox1&quot; VerticalAlignment=&quot;Top&quot; Foreground=&quot;Black&quot; Margin=&quot;6,0&quot; Header=&quot;Search&quot; /&gt;&lt;grid Width=&quot;auto&quot; Height=&quot;auto&quot; /&gt;&lt;label Width=&quot;77&quot; Name=&quot;lblSearchShipMent&quot; Margin=&quot;11,9,0,11&quot; Content=&quot;Shipment ID:&quot; HorizontalAlignment=&quot;Left&quot;&gt;&lt;/label&gt;&lt;textbox Width=&quot;120&quot; Name=&quot;txtShipmentID&quot; Margin=&quot;90,11,0,14.723&quot; HorizontalAlignment=&quot;Left&quot; TextChanged=&quot;txtShipmentID_TextChanged&quot; /&gt;&lt;button name=&quot;btnSearch&quot; type=&quot;button&quot; Width=&quot;120&quot; Margin=&quot;225,12,0,13.723&quot; HorizontalAlignment=&quot;Left&quot; Click=&quot;btnSearch_Click&quot;&gt;Search&lt;/button&gt; &lt;!--SelectionChanged=&quot;shipmentDataGrid_SelectionChanged&quot;--&gt;&lt;dg:DataGrid Background=&quot;GhostWhite&quot; Margin=&quot;6,74,0,0&quot; ItemContainerStyle=&quot;{StaticResource ShipmentItemStyle}&quot; IsSynchronizedWithCurrentItem=&quot;true&quot; ItemsSource=&quot;{Binding Shipment}&quot; FlowDirection=&quot;LeftToRight&quot; AutoGenerateColumns=&quot;False&quot; x:Name=&quot;shipmentDataGrid&quot;&gt;&lt;dg:DataGrid.Columns&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=DepotID}&quot; Header=&quot;Depot ID&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=OrginID}&quot; Header=&quot;Orgin ID&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=DestID}&quot; Header=&quot;Dest ID&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=Quantity1}&quot; Header=&quot;Q1&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=Quantity2}&quot; Header=&quot;Q2&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=Quantity3}&quot; Header=&quot;Q3&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=ServiceRestrictionFlg}&quot; Header=&quot;Service Restriction Flg&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=ShipmentStatus}&quot; Header=&quot;Shipment Status&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=LoadType}&quot; Header=&quot;Load Type&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=CommodityType}&quot; Header=&quot;Commodity Code&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=StopType}&quot; Header=&quot;Stop Type&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=RouteZone}&quot; Header=&quot;Route Zone&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=ShipmentSCAC}&quot; Header=&quot;SCAC&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=ShipmentPoint}&quot; Header=&quot;Shipment Point&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=Mode}&quot; Header=&quot;Mode&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=PSD}&quot; Header=&quot;PSD&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=ShipmentFrequency}&quot; Header=&quot;Shipment Frequency&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=ServiceCharge}&quot; Header=&quot;Service Charge&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=HelperRequired}&quot; Header=&quot;Helper Assigned&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=Comments}&quot; Header=&quot;Service Comment&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=ShipmentType}&quot; Header=&quot;Shipment Type&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=ServiceCode}&quot; Header=&quot;Service Code&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=ShipmentOpenTime}&quot; Header=&quot;Open Time&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=ShipmentCloseTime}&quot; Header=&quot;Close Time&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=ShipmentID}&quot; Header=&quot;Shipment ID&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Binding=&quot;{Binding Path=ShimentDate}&quot; Header=&quot;Shipment Date&quot;&gt;&lt;/dg:DataGridTextColumn&gt;&lt;/dg:DataGrid.Columns&gt;&lt;/dg:DataGrid&gt;&lt;grid Grid.Column=&quot;1&quot; /&gt;&lt;custom:DockManager Name=&quot;dockManager&quot;&gt;&lt;/custom:DockManager&gt;&lt;/custom:DocumentContent&gt;Thanks! Bill\r\n",
    "PostedDate": "2009-01-28T14:09:36.267-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "151948",
    "ThreadId": "45488",
    "Html": "<p>So sorry - that's sure no good..<br>\r\nWhen I hit the Post it reformatted all the code.</p>\r\n<p>I'm not sure how to keep the code formatted.</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks,</p>\r\n<p>Bill</p>\r\n",
    "PostedDate": "2009-01-28T14:11:32.237-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "152153",
    "ThreadId": "45488",
    "Html": "Hi Vincent:<br>\r\n<br>\r\nXAML file:<br>\r\n<br>\r\n&lt;custom:DocumentContent x:Class=&quot;vRA.WPF.UI.ShipmentWindow&quot;<br>\r\n                        xmlns=&quot;<a href=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</a>&quot;<br>\r\n                        xmlns:x=&quot;<a href=\"http://schemas.microsoft.com/winfx/2006/xaml\">http://schemas.microsoft.com/winfx/2006/xaml</a>&quot;<br>\r\n                        xmlns:dg=&quot;<a href=\"http://schemas.microsoft.com/wpf/2008/toolkit\">http://schemas.microsoft.com/wpf/2008/toolkit</a>&quot;<br>\r\n                        xmlns:local=&quot;clr-namespace:vRA.WPF.UI&quot;<br>\r\n                        xmlns:vRA.WPF.UI=&quot;<a href=\"http://schemas.microsoft.com/wpf/2008/toolkit\">http://schemas.microsoft.com/wpf/2008/toolkit</a>&quot;    <br>\r\n                        xmlns:sys=&quot;clr-namespace:System;assembly=mscorlib&quot; <br>\r\n                        xmlns:custom=&quot;clr-namespace:DockingLibrary;assembly=DockingLibrary&quot; <br>\r\n                        xmlns:col=&quot;clr-namespace:System.Collections;assembly=mscorlib&quot; <br>\r\n                        Title=&quot;StopWindow&quot; <br>\r\n                        Height=&quot;357&quot; <br>\r\n                        Width=&quot;662&quot;  <br>\r\n                        Icon=&quot;images/stop.png&quot;                      <br>\r\n    &gt;    <br>\r\n    <br>\r\n    &lt;custom:DocumentContent.DataContext &gt;<br>\r\n        &lt;local:ShipmentWindowViewModel /&gt;<br>\r\n    &lt;/custom:DocumentContent.DataContext&gt;<br>\r\n    <br>\r\n    &lt;custom:DocumentContent.Resources&gt;<br>\r\n        &lt;Style x:Key=&quot;ShipmentItemStyle&quot; TargetType=&quot;{x:Type dg:DataGridRow}&quot;&gt;<br>\r\n            &lt;Setter Property=&quot;IsSelected&quot; Value=&quot;{Binding Path=IsSelected, Mode=TwoWay}&quot; /&gt;<br>\r\n        &lt;/Style&gt;<br>\r\n    &lt;/custom:DocumentContent.Resources&gt;<br>\r\n    <br>\r\n    &lt;Grid Name=&quot;stopGrid&quot;  Background=&quot;Beige&quot; &gt;<br>\r\n        &lt;Grid.ColumnDefinitions&gt;<br>\r\n            &lt;ColumnDefinition Width=&quot;*&quot; /&gt;<br>\r\n            &lt;ColumnDefinition Width=&quot;auto&quot; /&gt;<br>\r\n        &lt;/Grid.ColumnDefinitions&gt;<br>\r\n        &lt;Grid Grid.Column=&quot;0&quot; &gt;<br>\r\n            &lt;GroupBox Header=&quot;Search&quot; Width=&quot;auto&quot; Height=&quot;68&quot; Margin=&quot;6,0&quot; Foreground=&quot;Black&quot; Background=&quot;Beige&quot; Name=&quot;groupBox1&quot; VerticalAlignment=&quot;Top&quot;&gt;<br>\r\n                 &lt;Grid Width=&quot;auto&quot; Height=&quot;auto&quot;&gt;<br>\r\n                    &lt;Label HorizontalAlignment=&quot;Left&quot; Margin=&quot;11,9,0,11&quot; Name=&quot;lblSearchShipMent&quot;  Width=&quot;77&quot; Content=&quot;Shipment ID:&quot;&gt;&lt;/Label&gt;<br>\r\n                    &lt;TextBox HorizontalAlignment=&quot;Left&quot; Margin=&quot;90,11,0,14.723&quot; Name=&quot;txtShipmentID&quot; Width=&quot;120&quot; TextChanged=&quot;txtShipmentID_TextChanged&quot; /&gt;<br>\r\n                    &lt;Button Width=&quot;120&quot; Margin=&quot;225,12,0,13.723&quot; Name=&quot;btnSearch&quot; HorizontalAlignment=&quot;Left&quot; Click=&quot;btnSearch_Click&quot;&gt;Search&lt;/Button&gt;<br>\r\n                &lt;/Grid&gt;<br>\r\n                    &lt;/GroupBox&gt;<br>\r\n            &lt;!--SelectionChanged=&quot;shipmentDataGrid_SelectionChanged&quot;--&gt;<br>\r\n            <br>\r\n            &lt;dg:DataGrid x:Name=&quot;shipmentDataGrid&quot; AutoGenerateColumns=&quot;False&quot; <br>\r\n                         Margin=&quot;6,74,0,0&quot; FlowDirection=&quot;LeftToRight&quot; Background=&quot;GhostWhite&quot;                          <br>\r\n                         ItemsSource=&quot;{Binding Shipment}&quot;  IsSynchronizedWithCurrentItem=&quot;true&quot; ItemContainerStyle=&quot;{StaticResource ShipmentItemStyle}&quot;&gt;<br>\r\n     <br>\r\n                &lt;dg:DataGrid.Columns&gt;<br>\r\n                    &lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Header=&quot;Depot ID&quot;    Binding=&quot;{Binding Path=DepotID}&quot; &gt;&lt;/dg:DataGridTextColumn&gt;<br>\r\n                    &lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Header=&quot;Orgin ID&quot;    Binding=&quot;{Binding Path=OrginID}&quot;&gt;&lt;/dg:DataGridTextColumn&gt;<br>\r\n                    &lt;dg:DataGridTextColumn Width=&quot;Auto&quot; Header=&quot;Dest ID&quot; Binding=&quot;{Binding Path=DestID}&quot;&gt;&lt;/dg:DataGridTextColumn&gt;<br>\r\n                    ...<br>\r\n<br>\r\nViewModel<br>\r\n<br>\r\n<p>namespace vRA.WPF.UI<br>\r\n{<br>\r\n    public class ShipmentWindowViewModel : DependencyObject, INotifyPropertyChanged<br>\r\n    {<br>\r\n        private CollectionView shipment;<br>\r\n        private bool isSelected;<br>\r\n        //public ObservableCollection&lt;ShipmentObj&gt; shipment {get; set;}<br>\r\n        public List&lt;ShipmentObj&gt; modelShipmentList;<br>\r\n        private ShipmentService shipmentService = new ShipmentService();<br>\r\n        private DelegateCommand clickCommand;</p>\r\n<p>        public event PropertyChangedEventHandler PropertyChanged;        </p>\r\n<p>        public ShipmentWindowViewModel()<br>\r\n        {<br>\r\n            this.shipment = new CollectionView(shipmentService.shipmentCollection);<br>\r\n            this.clickCommand = new DelegateCommand(this.ClickCommandHandler);<br>\r\n        }</p>\r\n<p>        public CollectionView Shipment<br>\r\n        {<br>\r\n            get { return this.shipment; }<br>\r\n        }</p>\r\n<p>        public DelegateCommand ClickCommand<br>\r\n        {<br>\r\n            get { return this.clickCommand; }<br>\r\n        }</p>\r\n<p>        private void ClickCommandHandler(Object sender, EventArgs e)<br>\r\n        {<br>\r\n            ShipmentObj so = this.shipment.CurrentItem as ShipmentObj;</p>\r\n<p>            MessageBox.Show(so.ShipmentID);<br>\r\n        }</p>\r\n<p>        public bool IsSelected<br>\r\n        {<br>\r\n            get { return isSelected; }<br>\r\n            set<br>\r\n            {<br>\r\n                //if (value == isSelected)<br>\r\n                //    return;<br>\r\n                isSelected = value;<br>\r\n               <br>\r\n                OnPropertyChanged(&quot;IsSelected&quot;);<br>\r\n                ShipmentObj so = this.shipment.CurrentItem as ShipmentObj;<br>\r\n                MessageBox.Show(so.ShipmentID);<br>\r\n            }</p>\r\n<p>        }</p>\r\n<p>        protected void OnPropertyChanged(string name)<br>\r\n        {<br>\r\n            PropertyChangedEventHandler handler = PropertyChanged;<br>\r\n            if (handler != null)<br>\r\n            {<br>\r\n                handler(this, new PropertyChangedEventArgs(name));<br>\r\n            }<br>\r\n        }</p>\r\n<p>    }<br>\r\n}</p>\r\n<br>\r\n<br>\r\nI have added the code as you suggested. Do you see anything obvious?<br>\r\n<br>\r\nthanks!<br>\r\nBill\r\n",
    "PostedDate": "2009-01-29T05:42:23.367-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "152495",
    "ThreadId": "45488",
    "Html": "Hi Bill,<br>\r\n<br>\r\nWhy don't you use the CurrentItem of ListCollectionView. You can keep this synchronize with the datagrid by setting the property <span style=\"font-size:13px;color:#ff0000\">IsSynchronizedWithCurrentItem</span><span style=\"font-size:13px;color:#0000ff\">=&quot;True&quot;</span> <br>\r\n<br>\r\nIn your model / presenter you should have no knowledge of your view.<br>\r\n<br>\r\nCees<br>\r\n<br>\r\n",
    "PostedDate": "2009-01-30T05:21:12.68-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "152676",
    "ThreadId": "45488",
    "Html": "<p>I took a look at the code and I don't see anything obvious.  Is ShipmentWindowVM.IsSelected being called when selection is updated on the DataGrid?</p>\r\n<p>CeesVersteeg, for the problem that's being addressed (modeling selection in the viewModel), it does not have any knowledge of the view.  LCV.CurrentItem is not really the same thing as IsSelected.  Let's say you want to to full row selection through your viewModel, you cannot do that with CurrentItem.</p>\r\n",
    "PostedDate": "2009-01-30T12:36:10.56-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "152807",
    "ThreadId": "45488",
    "Html": "<p>Hi,<br>\r\n<br>\r\nThanks Cees for the reply but what Vincent is saying is true. I am using the WPF DataGrid and want to be able to wire up an IsSelected property so that when I select a row in the UI in the DataGrid that I get that notification in the ViewModel. It seems like it should be quite simple, but to your question, Vincent, I never get the ShipmentWindowVM.IsSelected being called. I re-read the latest MSDN article that Josh Smith wrote on MVVM and although he's using a ListView, he is also using IsSelected in a similar fashion and it gets called when you select an item in the list. If I use the code behind I can do all of these things, but the whole idea of using M-V-VM is to get away from having all this code in the code behind where I can't write unit tests for it, etc.</p>\r\n<p>thanks!</p>\r\n<p>Bill</p>\r\n",
    "PostedDate": "2009-01-31T03:15:45.573-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]