[
  {
    "Id": "196353",
    "ThreadId": "58074",
    "Html": "<p>Hi,</p>\r\n<p>&nbsp;</p>\r\n<p>I use the WPF DataGrid bound to a List&lt;List&lt;double&gt;&gt; as ItemsSource. At some points in my program there will be new data loaded and since this needs a few seconds in time I do it with a BackgroundWorker. When I load the data without the BackgroundWorker all works fine (well except the GUI does not respond for a few seconds), but when it is done in background i get a NullReference expection in the DataGridCellItemAutomationPeer class in the OwningCell get-accessor.</p>\r\n<p>&nbsp;</p>\r\n<p>Here is my code used to load the data:</p>\r\n<p>&nbsp;</p>\r\n<p>BackgroundWorker bgw = new BackgroundWorker();<br>bgw.WorkerReportsProgress = true;<br>bgw.DoWork += (o, ev) =&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bgw.ReportProgress(100, LoadData());//Load Data creates the data<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; };</p>\r\n<p>bgw.ProgressChanged += (o, ev) =&gt;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //setting the data in progress changed so that I'm in the GUI thread again</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Data = ev.UserState as List&lt;List&lt;double&gt;&gt;;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FirePropertyChanged(&quot;Data&quot;);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; };<br>bgw.RunWorkerAsync();</p>\r\n<p>&nbsp;</p>\r\n<p>And that is the part where the exception is thrown because this.OwningDataGrid is null.</p>\r\n<p>&nbsp;</p>\r\n<p>// This may be null if the cell is virtualized<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private DataGridCell OwningCell<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return this.OwningDataGrid.TryFindCell(_item, _column);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;</p>\r\n<p>And I can't figure out this behaviour and what I need to change so it will work.</p>\r\n<p>thank you for your help</p>\r\n<p>&nbsp;</p>\r\n<p>ernii</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-06-01T04:06:55.893-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]