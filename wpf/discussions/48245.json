[
  {
    "Id": "160961",
    "ThreadId": "48245",
    "Html": "Hi,<br>\r\n<br>\r\nI'm experiencing some poor performance when I have a datagrid that has one or many combobox columns I see a degredation in performance around sorting the columns and scrolling up/down.<br>\r\n<br>\r\nMy itemsource is a generic.list(of myclass) and can contain anything from 7 to 200 items.<br>\r\n<br>\r\nTo work around this I created my own DataGridComboBoxFastColumn which is a copy of the existing class but using a textblock for the normal element rather than TextBlockComboBox class. This did the trick and performance is great. <br>\r\n<br>\r\nHowever I do have a number of problems after implementing this new column class and wondered if anyone else had seen this problem and done anything about it. The type of problems I see are:-<br>\r\n<br>\r\nWhen I have 100+ rows and scroll down to the bottom the new row has a value for the new column? Also when I page down the column values become out of sync. Pasting also causes problems with the code snippett below which can't find the new row index it returns -1.<br>\r\n<br>\r\n<span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span>\r\n<p>                For Each lobjCell As DataGridCellInfo In Me.SelectedCells<br>\r\n                    If TypeOf lobjCell.Item Is DataRowView Then<br>\r\n                        '<br>\r\n                        ' User the Cell.Item to work out the row in the grid, later we use the items(index) to do this.<br>\r\n                        '<br>\r\n                        Dim lobjDataRowView As DataRowView = DirectCast(lobjCell.Item, DataRowView)<br>\r\n                        Dim lintMinRowIndex As Integer = Items.IndexOf(lobjDataRowView)\r\n<p><span style=\"font-size:13px\">\r\n<p>&nbsp;</p>\r\n</span></p>\r\nMy new class has the minor changes below to the original DataGridComboBoxColumn it inherits from DataGridColumn as well, I defined a new class called TextBlockFast which I create an instance of instead of TextBlockComboBox although I didn't implement the OnDataContextPropertyChanged... could this be one of the reasons I'm seeing the problems above?<br>\r\n<br>\r\n        public class TextBlockFast : TextBlock<br>\r\n        {<br>\r\n            static TextBlockFast()<br>\r\n            {<br>\r\n                DefaultStyleKeyProperty.OverrideMetadata(typeof(TextBlockFast), new FrameworkPropertyMetadata(typeof(TextBlockFast)));<br>\r\n                KeyboardNavigation.IsTabStopProperty.OverrideMetadata(typeof(TextBlockFast), new FrameworkPropertyMetadata(false));<br>\r\n                //DataContextProperty.OverrideMetadata(typeof(TextBlockFast), new FrameworkPropertyMetadata(OnDataContextPropertyChanged));<br>\r\n            }<br>\r\n    }<br>\r\n<span style=\"font-size:13px\"><br>\r\n        protected override FrameworkElement GenerateElement(DataGridCell cell, object dataItem)<br>\r\n        {<br>\r\n            TextBlockFast textBox = new TextBlockFast();\r\n<p>&nbsp;</p>\r\n<p>            ApplyStyle(/* isEditing = */ false, /* defaultToElementStyle = */ false, textBox);<br>\r\n            //ApplyColumnProperties(comboBox);<br>\r\n            ApplyBinding(TextBinding, textBox, TextBlock.TextProperty);</p>\r\n<p>            return textBox;<br>\r\n        }</p>\r\n<p></p>\r\n</span></p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2009-02-23T07:15:34.34-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]