[
  {
    "Id": "172701",
    "ThreadId": "51491",
    "Html": "I'm trying to print a datagrid in WPF and I may be barking up the wrong tree.<br>\r\n<br>\r\nI use the following code, some of which is ruthlesslesly clipboarded off the intarwebs.<br>\r\n<br>\r\nThere are several problems. I use a dedicated, in-memory, control and copy the ItemsSource to it and measure/arrange it (in memory) to its preferred size. This takes a lot of time and eats a *lot* of memory which is never freed again. I then capture it screen by screen and print it. Only the first page is actually printed although it seems it got the number of pages right as it includes them they're just empty. I tried using a FixedDocument with the same pattern with almost the same results.<br>\r\n<br>\r\nDo I *have* to implement a DocumentPaginator to print a datagrid over several pages? You'd think there was some build in trick for such a common task?<br>\r\n<br>\r\nRegards,<br>\r\nS. Bro<br>\r\n<br>\r\n-------------------------<br>\r\n<table style=\"border-top-width:0px;border-left-width:0px;margin:2px 0px;width:99%;border-bottom:#eee 0px solid;border-collapse:collapse;background-color:#fff;border-right-width:0px\" cellspacing=0 cellpadding=0>\r\n    <tbody>\r\n        <tr>\r\n            <td><span style=\"font-size:11px\">        private void MenuItem_Print(object sender, RoutedEventArgs e)  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\">        {  </td>\r\n        </tr>\r\n        <tr>\r\n            <td>            PrintDialog <span style=\"color:red\">printDialog</span><span style=\"font-size:11px\"> = </span><span style=\"color:blue\">new</span><span style=\"font-size:11px\"> PrintDialog();  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\"> </td>\r\n        </tr>\r\n        <tr>\r\n            <td>            if (printDialog.ShowDialog().GetValueOrDefault() == true)  </td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\">            {  </td>\r\n        </tr>\r\n        <tr>\r\n            <td>                ProjectPrintVisual <span style=\"color:red\">printVisual</span><span style=\"font-size:11px\"> = </span><span style=\"color:blue\">new</span><span style=\"font-size:11px\"> ProjectPrintVisual();  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\">                <span style=\"color:red\">printVisual.m_ProjectDataGridVisual.ItemsSource</span><span style=\"font-size:11px\"> = </span><span style=\"color:blue\">m_AssignmentsView</span><span style=\"font-size:11px\">.m_ProjectsDataGrid.ItemsSource;  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td> </td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\"> </td>\r\n        </tr>\r\n        <tr>\r\n            <td>                WriteXps(printVisual, printDialog);  </td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\">            }  </td>\r\n        </tr>\r\n        <tr>\r\n            <td>        }  </td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\"> </td>\r\n        </tr>\r\n        <tr>\r\n            <td>        public static void WriteXps(FrameworkElement visual, PrintDialog printDialog)  </td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\">        {  </td>\r\n        </tr>\r\n        <tr>\r\n            <td>            PrintCapabilities <span style=\"color:red\">capabilities</span><span style=\"font-size:11px\"> = </span><span style=\"color:blue\">printDialog</span><span style=\"font-size:11px\">.PrintQueue.GetPrintCapabilities(printDialog.PrintTicket);  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\">            Size <span style=\"color:red\">pageSize</span><span style=\"font-size:11px\"> = </span><span style=\"color:blue\">new</span><span style=\"font-size:11px\"> Size(printDialog.PrintableAreaWidth, printDialog.PrintableAreaHeight);  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td>            Size <span style=\"color:red\">visibleSize</span><span style=\"font-size:11px\"> = </span><span style=\"color:blue\">new</span><span style=\"font-size:11px\"> Size(capabilities.PageImageableArea.ExtentWidth, capabilities.PageImageableArea.ExtentHeight);  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\"> </td>\r\n        </tr>\r\n        <tr>\r\n            <td>            XpsDocumentWriter <span style=\"color:red\">xpsdw</span><span style=\"font-size:11px\"> = </span><span style=\"color:blue\">PrintQueue</span><span style=\"font-size:11px\">.CreateXpsDocumentWriter(printDialog.PrintQueue);  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\">            VisualsToXpsDocument <span style=\"color:red\">vToXpsD</span><span style=\"font-size:11px\"> = (VisualsToXpsDocument)xpsdw.CreateVisualsCollator();  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td> </td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\">            visual.Measure(new Size(double.PositiveInfinity, double.PositiveInfinity));  </td>\r\n        </tr>\r\n        <tr>\r\n            <td>            visual.Arrange(new Rect(new Point(0, 0), visual.DesiredSize));  </td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\">            visual.UpdateLayout();  </td>\r\n        </tr>\r\n        <tr>\r\n            <td> </td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\">            double <span style=\"color:red\">yOffset</span><span style=\"font-size:11px\"> = </span><span style=\"color:blue\">0</span><span style=\"font-size:11px\">;  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td>            while (yOffset <span style=\"color:blue\">&lt;</span><span style=\"font-size:11px\"> </span><span style=\"font-weight:bold;color:black\">visual.DesiredSize.Height</span><span style=\"font-size:11px\">)  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\">            {  </td>\r\n        </tr>\r\n        <tr>\r\n            <td>                VisualBrush <span style=\"color:red\">brush</span><span style=\"font-size:11px\"> = </span><span style=\"color:blue\">new</span><span style=\"font-size:11px\"> VisualBrush(visual);  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\">                <span style=\"color:red\">brush.Stretch</span><span style=\"font-size:11px\"> = Stretch.None;  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td>                <span style=\"color:red\">brush.AlignmentX</span><span style=\"font-size:11px\"> = AlignmentX.Left;  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\">                <span style=\"color:red\">brush.AlignmentY</span><span style=\"font-size:11px\"> = AlignmentY.Top;  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td>                <span style=\"color:red\">brush.ViewboxUnits</span><span style=\"font-size:11px\"> = </span><span style=\"color:blue\">BrushMappingMode</span><span style=\"font-size:11px\">.Absolute;  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\">                <span style=\"color:red\">brush.TileMode</span><span style=\"font-size:11px\"> = TileMode.None;  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td>                <span style=\"color:red\">brush.Viewbox</span><span style=\"font-size:11px\"> = </span><span style=\"color:blue\">new</span><span style=\"font-size:11px\"> Rect(0, yOffset, visibleSize.Width, visibleSize.Height);  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\"> </td>\r\n        </tr>\r\n        <tr>\r\n            <td>                Canvas <span style=\"color:red\">canvas</span><span style=\"font-size:11px\"> = </span><span style=\"color:blue\">new</span><span style=\"font-size:11px\"> Canvas();  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\">                <span style=\"color:red\">canvas.Width</span><span style=\"font-size:11px\"> = </span><span style=\"color:blue\">visibleSize</span><span style=\"font-size:11px\">.Width;  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td>                <span style=\"color:red\">canvas.Height</span><span style=\"font-size:11px\"> = </span><span style=\"color:blue\">visibleSize</span><span style=\"font-size:11px\">.Height;  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\">                <span style=\"color:red\">canvas.Background</span><span style=\"font-size:11px\"> = </span><span style=\"color:blue\">brush</span><span style=\"font-size:11px\">;  </span></td>\r\n        </tr>\r\n        <tr>\r\n            <td>                vToXpsD.Write(canvas);  </td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\">                yOffset += visibleSize.Height;  </td>\r\n        </tr>\r\n        <tr>\r\n            <td>            }  </td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\"> </td>\r\n        </tr>\r\n        <tr>\r\n            <td>            vToXpsD.EndBatchWrite();  </td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"background-color:#f7f7f7\">        }  </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n",
    "PostedDate": "2009-03-27T03:24:27.77-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "172925",
    "ThreadId": "51491",
    "Html": "Unfortunately we dont have proper support for printing with DataGrid. Yes, you will have to implement a DocumentPaginator to print a datagrid over several pages.\r\n",
    "PostedDate": "2009-03-27T13:49:10.56-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "475417",
    "ThreadId": "51491",
    "Html": "Hi,\r\n\r\nI am trying to print a usercontrol in documentPaginator class. The user control has a datagrid in it. My problem starts that while printing to XPS document, datagrid is populated with data i send but when printing to a physical printer, i can only see blank rows in datagrid. My other fields on user- control are populated but only datagrid is creating an issue.\r\n\r\nCan u point out what mistake am i making or what other measures do I need to take care so that my datagrid prints properly on physical printer too. ",
    "PostedDate": "2010-08-02T06:00:25.74-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]