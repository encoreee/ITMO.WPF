[
  {
    "Id": "132089",
    "ThreadId": "39798",
    "Html": "Hi,<br>\r\n<br>\r\nI am having an issue where if I programmatically remove an item from my DataGrid's ItemsSource, the NewItemPlaceholder  disappears. Specifically, the scenario is that when a user double-clicks the placeholder to add an item to the DataGrid, the control creates a new item in the ItemsSource collection. If the user then hits Escape to cancel the edit, the new item should be deleted from the ItemsSource collection, but it is not. When I attempt to clean up manually by adding a handler on the CellEditEnding event which removes the item from the ItemsSource, the NewItemPlaceholder disappears as soon as I call the Remove method of the ItemsSource. Do you have any ideas on how to fix this? My objects need access to some state information, so I have an InitializingNewItem handler to set this for each new item. Could this be what is preventing the DataGrid control from removing the new item from the ItemsCollection when the user cancels a &quot;new item&quot; edit?<br>\r\n<br>\r\nThanks,<br>\r\n<br>\r\n--Brandon Siegel<br>\r\n<br>\r\n<br>\r\nUPDATE: I tried converting my ItemsSource from an ObservableCollection to a BindingList (which implements the ICancelAddNew interface), but the same issue presents itself. Cancelling the edit by hitting Escape does not automatically call the CancelNew method of my BindingList, and manually calling it from the CellEditEnding handler causes the NewItemPlaceholder to disappear. I'm quickly running out of ideas.<br>\r\n",
    "PostedDate": "2008-11-12T12:05:29.427-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "132277",
    "ThreadId": "39798",
    "Html": "When you press Escape twice it will remove the row.  You do not want that behavior?\r\n",
    "PostedDate": "2008-11-13T05:47:42.36-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "132300",
    "ThreadId": "39798",
    "Html": "(I was bugmenot2 - finally got my activation e-mail)<br>\r\n<br>\r\nFirst off, I am pleased to report that vinsibal's hint works. If I hit Escape to cancel creating a new entry in the DataGrid, and then press Escape again, the second Escape deletes the new item from the ItemsSource. However, this seems extremely unintuitive. If the user types in some data and then presses escape, the data remains visible in the DataGrid. It is only when the user presses Escape a second time does the exteraneous DataGrid line disappear. Is there a way to have this behavior occur with the first press of the Escape key?<br>\r\n<br>\r\nThanks!<br>\r\n<br>\r\n--Brandon Siegel<br>\r\n",
    "PostedDate": "2008-11-13T07:04:33.867-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "132322",
    "ThreadId": "39798",
    "Html": "The reason it involves two escapes instead of one is for cancel cell edits and cancelling row edits.  For example,<br>\r\n<br>\r\n1. edit cell 0<br>\r\n2. tab to the next cell and edit cell 1.<br>\r\n3. press Esc =&gt; cell 1 reverts back, cell 0 remains dirty.<br>\r\n4a. press Esc =&gt; cell 0 reverts back.<br>\r\n4b. press Enter =&gt; cell 0 commits.<br>\r\n<br>\r\nIn the sample on this post, <a href=\"http://blogs.msdn.com/vinsibal/archive/2008/10/22/wpf-datagrid-and-the-wpftoolkit-have-released.aspx\">http://blogs.msdn.com/vinsibal/archive/2008/10/22/wpf-datagrid-and-the-wpftoolkit-have-released.aspx</a>, it highlights the borders of the row and cell when editing.  This should give you a better visualization of the rows and cells when in edit mode.<br>\r\n<br>\r\nAnyway, if you really want to cancel the entire row on the first escape you can listen for the &quot;Esc&quot; key input and call DataGrid.CancelEdit(DataGridEditingUnit.Row).  \r\n",
    "PostedDate": "2008-11-13T07:42:03.973-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "132342",
    "ThreadId": "39798",
    "Html": "Thanks, Vincent! That worked perfectly. My DataGrid has only one column, so that is why I didn't see what was really going on.<br>\r\n<br>\r\n--Brandon Siegel<br>\r\n",
    "PostedDate": "2008-11-13T08:21:28.2-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]