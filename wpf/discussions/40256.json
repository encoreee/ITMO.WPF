[
  {
    "Id": "133586",
    "ThreadId": "40256",
    "Html": "Our application need allow user to change the order of DataGridRows by draging and droping.<br>\r\nWe implemented this function and it works well when the data is not sorted.<br>\r\nBut this does not work when one column&nbsp; header of the DataGrid is clicked, that's it, data is sorted.<br>\r\nThe changing row order by drag&amp;drop will not work, i think it is because the data will be re-sorted immediately after position of the move data items in data source is moved by drag and drop.Which make it look like the drag&amp;drop does not work.<br>\r\n<br>\r\nI know I can cancel the sort by following code.But the order of DataGridRows will restore to its original states. <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.ComponentModel.ICollectionView view = CollectionViewSource.GetDefaultView(dataGrid1.ItemsSource);<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; view.SortDescriptions.Clear();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; view.GroupDescriptions.Clear();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (Microsoft.Windows.Controls.DataGridColumn dgColumn in dataGrid1.Columns)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dgColumn.SortDirection = null;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\nBut what I need is allow user to sort the datagrid, after that, user can also change the row order by drag&amp;drop.<br>\r\nThis means I need figure out a way to stop the sort of SortDescriptions, at the same time keep the current order of rows.<br>\r\nIf I use SortDescriptions.Clear(), the datagrid will return to its original states, but I want it to keep current sort status after stop.<br>\r\nHow can I make datagrid do this?<br>\r\n",
    "PostedDate": "2008-11-19T00:35:32.627-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "133713",
    "ThreadId": "40256",
    "Html": "DataGrid has an event named Sorting, which is raised when the column header is clicked before performing the default sort. This event is passed an instance of DataGridSortingEventArgs as a parameter and if you set Handled boolean of that instance to true, default sorting wouldn't happen. Following is the example...<br>\r\n<br>\r\n&lt;dg:DataGrid Sorting=&quot;MySorting&quot;...&gt;<br>\r\n&lt;/dg:DataGrid&gt;<br>\r\n<br>\r\nvoid MySorting(object sender, DataGridSortingEventArgs e)<br>\r\n{<br>\r\n    // Do the sorting how ever you want to do, the default was to just add the appropriate sort descriptions<br>\r\n    e.Handled =  true;<br>\r\n}\r\n",
    "PostedDate": "2008-11-19T11:08:42.357-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "134655",
    "ThreadId": "40256",
    "Html": "Thank you for your answer.<br>\r\nBut custom sort is not what I want.<br>\r\nI need a way to pause the built-in column sort, at the same time, the sort state of built-in column sort is not restored to data's orginal state.<br>\r\nFor example, I want following data in DataGrid.<br>\r\n<br>\r\nID&nbsp; Name<br>\r\n1&nbsp;&nbsp; Mike<br>\r\n2&nbsp;&nbsp; Tom<br>\r\n3&nbsp;&nbsp; John<br>\r\n<br>\r\nIf the second Column header Name is clicked, the data will be displayed in following order.<br>\r\n<br>\r\nID&nbsp; Name<br>\r\n3&nbsp;&nbsp; John<br>\r\n1&nbsp;&nbsp; Mike<br>\r\n2&nbsp;&nbsp; Tom<br>\r\n<br>\r\nThen I hope the sort can stop work without restore the order to original state, <br>\r\nafter that I want to change the data in the datasource, for example, swap the data in index 1 and 3.<br>\r\nIf the sort is still working, this change in the datasource cannot be noticed on the UI, because the new data is sorted immediately.<br>\r\n<br>\r\n",
    "PostedDate": "2008-11-23T19:09:32.64-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "135385",
    "ThreadId": "40256",
    "Html": "Hi jetsun,<br>\r\n<br>\r\nI understand your problem and custom sort is the only answer for your case. <a href=\"http://www.codeplex.com/wpf/Wiki/View.aspx?title=Custom Sort&referringTitle=Tips %26 Tricks\">http://www.codeplex.com/wpf/Wiki/View.aspx?title=Custom%20Sort&amp;referringTitle=Tips%20%26%20Tricks</a> should provide you into more insight by what I mean by custom sorting (this approach is based on the Sorting event I spoke about earlier). But following is the brief explantion of the solution in your context....<br>\r\n<br>\r\n<ol>\r\n    <li>First of all you cannot use sort descriptions at all, because if you have sort descriptions the CollectionView will try to enforce them and hence your drag-drop wouldnt work. Even if you clear the SortDescriptions the CollectionView will try act as a good samaritan and will try to restore your original order. Hence dont use SortDescriptions at all. Instead use an approach similar to that described in blog post of the above link.</li>\r\n    <li>Now if you dont use SortDescriptions, your rows will not be automatically sorted immediately after the rows are dragged and dropped. But there is a price to pay. You will need to track the sort status and re-initiate sort operation after the drop operation is completed (and you are done with what ever you want to do) if the DataGrid was sorted earlier. You can use SortDirection property of DataGridColumn to track the sort status (the only catch being that it wouldnt work that good when multiple columns are sorted at the same time) or you can track it some where else using some AttachedProperty or some status object.</li>\r\n</ol>\r\n<p>Hope this helps!!</p>\r\n",
    "PostedDate": "2008-11-25T19:54:26.73-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]