[
  {
    "Id": "171694",
    "ThreadId": "51222",
    "Html": "Hi there,<br>\r\n<br>\r\nWhat would be the best approach to make my datagrid's row double click event invoke command (which is bound from my ViewModel ) ?<br>\r\nThe simplest one is to handle event in code-behind file and invoke command explicit from there, but I would like to have 'clean' code behind file <br>\r\n(if it is possible). Any suggestions would be appreciated.<br>\r\n<br>\r\nregards,<br>\r\nj23tom<br>\r\n",
    "PostedDate": "2009-03-24T23:40:03.543-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "171992",
    "ThreadId": "51222",
    "Html": "You can used an attached behavior.<br>\r\n<br>\r\nHere is an example (on a TreeViewItem but can be adapted to a DataGridRow):<br>\r\n<br>\r\n<span style=\"font-size:13px;color:#0000ff\">\r\n<p>public</p>\r\n</span>\r\n<p><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">class</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">ClickBehavior<br>\r\n</span><span style=\"font-size:13px\">{<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">    #region</span><span style=\"font-size:13px\"> DoubleClick<br>\r\n<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">    public</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">static</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">DependencyProperty</span><span style=\"font-size:13px\"> OnDoubleClickProperty = </span><span style=\"font-size:13px;color:#2b91af\">DependencyProperty</span><span style=\"font-size:13px\">.RegisterAttached(<br>\r\n</span><span style=\"font-size:13px;color:#a31515\">        &quot;OnDoubleClick&quot;</span><span style=\"font-size:13px\">,<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">        typeof</span><span style=\"font-size:13px\">(</span><span style=\"font-size:13px;color:#2b91af\">ICommand</span><span style=\"font-size:13px\">),<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">        typeof</span><span style=\"font-size:13px\">(</span><span style=\"font-size:13px;color:#2b91af\">ClickBehavior</span><span style=\"font-size:13px\">),<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">        new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">UIPropertyMetadata</span><span style=\"font-size:13px\">(</span><span style=\"font-size:13px;color:#2b91af\">ClickBehavior</span><span style=\"font-size:13px\">.OnDoubleClick));<br>\r\n<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">    public</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">static</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">void</span><span style=\"font-size:13px\"> SetOnDoubleClick(</span><span style=\"font-size:13px;color:#2b91af\">DependencyObject</span><span style=\"font-size:13px\"> target, </span><span style=\"font-size:13px;color:#2b91af\">ICommand</span><span style=\"font-size:13px\"> value)<br>\r\n    {<br>\r\n        target.SetValue(</span><span style=\"font-size:13px;color:#2b91af\">ClickBehavior</span><span style=\"font-size:13px\">.OnDoubleClickProperty, value);<br>\r\n    }\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">    private</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">static</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">void</span><span style=\"font-size:13px\"> OnDoubleClick(</span><span style=\"font-size:13px;color:#2b91af\">DependencyObject</span><span style=\"font-size:13px\"> target, </span><span style=\"font-size:13px;color:#2b91af\">DependencyPropertyChangedEventArgs</span><span style=\"font-size:13px\"> e)<br>\r\n    {<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">        var</span><span style=\"font-size:13px\"> element = target </span><span style=\"font-size:13px;color:#0000ff\">as</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">Control</span><span style=\"font-size:13px\">;<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">        if</span><span style=\"font-size:13px\"> (element == </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">)<br>\r\n        {<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">            throw</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">new</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#2b91af\">InvalidOperationException</span><span style=\"font-size:13px\">(</span><span style=\"font-size:13px;color:#a31515\">&quot;This behavior can be attached to a Control item only.&quot;</span><span style=\"font-size:13px\">);<br>\r\n        }\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">        if</span><span style=\"font-size:13px\"> ((e.NewValue != </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">) &amp;&amp; (e.OldValue == </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">))<br>\r\n        {<br>\r\n            element.MouseDoubleClick += MouseDoubleClick;<br>\r\n        }<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">        else</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">if</span><span style=\"font-size:13px\"> ((e.NewValue == </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">) &amp;&amp; (e.OldValue != </span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">))<br>\r\n        {<br>\r\n            element.MouseDoubleClick -= MouseDoubleClick;<br>\r\n        }<br>\r\n    }\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<p><span style=\"font-size:13px;color:#0000ff\">    private</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">static</span><span style=\"font-size:13px\"> </span><span style=\"font-size:13px;color:#0000ff\">void</span><span style=\"font-size:13px\"> MouseDoubleClick(</span><span style=\"font-size:13px;color:#0000ff\">object</span><span style=\"font-size:13px\"> sender, </span><span style=\"font-size:13px;color:#2b91af\">MouseButtonEventArgs</span><span style=\"font-size:13px\"> e)<br>\r\n    {<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\">        UIElement</span><span style=\"font-size:13px\"> element = (</span><span style=\"font-size:13px;color:#2b91af\">UIElement</span><span style=\"font-size:13px\">)sender;<br>\r\n</span><span style=\"font-size:13px;color:#2b91af\">        ICommand</span><span style=\"font-size:13px\"> command = (</span><span style=\"font-size:13px;color:#2b91af\">ICommand</span><span style=\"font-size:13px\">)element.GetValue(</span><span style=\"font-size:13px;color:#2b91af\">ClickBehavior</span><span style=\"font-size:13px\">.OnDoubleClickProperty);<br>\r\n        command.Execute(</span><span style=\"font-size:13px;color:#0000ff\">null</span><span style=\"font-size:13px\">);<br>\r\n    }<br>\r\n<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">    #endregion</span><span style=\"font-size:13px\"> DoubleClick<br>\r\n</span><span style=\"font-size:13px\">}<br>\r\n<br>\r\n</span><span style=\"font-size:13px;color:#a31515\"><br>\r\n&lt;Style</span><span style=\"font-size:13px;color:#ff0000\"> TargetType</span><span style=\"font-size:13px;color:#0000ff\">='{</span><span style=\"font-size:13px;color:#a31515\">x</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">Type</span><span style=\"font-size:13px;color:#ff0000\"> TreeViewItem</span><span style=\"font-size:13px;color:#0000ff\">}'&gt;<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">    &lt;</span><span style=\"font-size:13px;color:#a31515\">Setter</span><span style=\"font-size:13px;color:#ff0000\"> Property</span><span style=\"font-size:13px;color:#0000ff\">=&quot;local:ClickBehavior.OnDoubleClick&quot;</span><span style=\"font-size:13px;color:#ff0000\"> Value</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">Binding</span><span style=\"font-size:13px;color:#ff0000\"> OnDoubleClickCommand</span><span style=\"font-size:13px;color:#0000ff\">}&quot; /&gt;<br>\r\n</span><span style=\"font-size:13px;color:#0000ff\">&lt;/</span><span style=\"font-size:13px;color:#a31515\">Style</span><span style=\"font-size:13px;color:#0000ff\">&gt;\r\n<p>&nbsp;</p>\r\n</span></p>\r\n<br>\r\n<br>\r\n",
    "PostedDate": "2009-03-25T12:01:47.763-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "172306",
    "ThreadId": "51222",
    "Html": "This don't work on me!<div>You never use <span style=\"color:rgb(48, 51, 45);font-family:'segoe ui';font-size:13px\">SetOnDoubleClick() method why do you have it?</span></div><div><span style=\"color:rgb(48, 51, 45);font-family:'segoe ui';font-size:13px\">And i have this Error:</span></div><div><span style=\"color:rgb(48, 51, 45);font-family:'segoe ui';font-size:13px\"><div>&quot;Error<span style=\"white-space:pre\">\t</span>1<span style=\"white-space:pre\">\t</span>Value 'local:ClickBehavior.OnDoubleClick' cannot be assigned to property 'Property'. Invalid PropertyDescriptor value.&quot;</div><div>So...what now?</div></span></div>",
    "PostedDate": "2009-03-26T06:45:34.783-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "172485",
    "ThreadId": "51222",
    "Html": "SetOnDoubleClick() is being used.  See this overview for info on how to use attached properties, <a href=\"http://msdn.microsoft.com/en-us/library/ms749011.aspx\">http://msdn.microsoft.com/en-us/library/ms749011.aspx</a>.  <br>\r\n<br>\r\nYou'll have to show a little bit more infor than that.  What does your code look like?\r\n",
    "PostedDate": "2009-03-26T13:23:10.09-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "173029",
    "ThreadId": "51222",
    "Html": "This works ! Thanks <a href=\"http://www.codeplex.com/site/users/view/vinsibal\" id=\"ctl00_ctl00_MasterContent_Content_PostRepeater_ctl06_UserNameLink\">vinsibal</a>! :) (VS2008 view crashes but it work)<br>\r\nBelow working example for datagrid (every item in bound MyItems collection must have 'MyCommand'&nbsp; ICommand property).<br>\r\n<br>\r\n&lt;toolkit:DataGrid ItemsSource=&quot;{Binding MyItems}&quot; <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SelectionMode=&quot;Single&quot; <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SelectedItem=&quot;{Binding Mode=TwoWay,Path=SelectedItem}&quot;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AutoGenerateColumns=&quot;False&quot;&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;toolkit:DataGrid.RowStyle&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Style&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter Property=&quot;controls:ClickBehavior.OnDoubleClick&quot; Value=&quot;{Binding MyCommand}&quot;/&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Style&gt;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/toolkit:DataGrid.RowStyle&gt;<br>\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;toolkit:DataGrid.Columns&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;toolkit:DataGridTextColumn CanUserReorder=&quot;False&quot;&nbsp;&nbsp;&nbsp; IsReadOnly=&quot;True&quot; Header=&quot;Name&quot;&nbsp;&nbsp; Binding=&quot;{Binding Name}&quot;&nbsp; /&gt; &nbsp;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/toolkit:DataGrid.Columns&gt;<br>\r\n&lt;/toolkit:DataGrid &gt;<br>\r\n<br>\r\nPS: I found another intersting solution at:&nbsp; http://www.japf.fr/?p=22<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n",
    "PostedDate": "2009-03-28T02:03:13.907-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "422166",
    "ThreadId": "51222",
    "Html": "<p>Thank you.&nbsp; Worked like a charm.</p>",
    "PostedDate": "2010-03-22T09:28:34.54-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]