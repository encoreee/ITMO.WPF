[
  {
    "Id": "124989",
    "ThreadId": "37693",
    "Html": "Hi,<br>\r\nI'll give a simplified description of what I'd like to do: <br>\r\nI have a DataGrid with a System.Data.DataTable as ItemsSource and I do not want to declare the DataGridColumns explicitly since I'm dynamically adding columns to the DataTable. Each row in the DataTable contains a number of complex objects (of the same type) for which I'd like to show one property. I thought that the following XAML would do the trick:<br>\r\n<br>\r\n<span style=\"font-size:13px\"><span style=\"color:#0000ff\">&lt;</span><span style=\"color:#a31515\">Style</span><span style=\"color:#ff0000\"> TargetType</span></span><span style=\"font-size:13px\"><span style=\"color:#0000ff\">=&quot;dg:DataGridCell&quot;&gt;<br>\r\n</span><span style=\"color:#0000ff\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style=\"color:#a31515\">Setter</span><span style=\"color:#ff0000\"> Property</span></span><span style=\"font-size:13px\"><span style=\"color:#0000ff\">=&quot;ContentTemplate&quot;&gt;<br>\r\n</span><span style=\"color:#0000ff\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style=\"color:#a31515\">Setter.Value</span></span><span style=\"font-size:13px\"><span style=\"color:#0000ff\">&gt;<br>\r\n</span><span style=\"color:#0000ff\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style=\"color:#a31515\">DataTemplate</span></span><span style=\"font-size:13px\"><span style=\"color:#0000ff\">&gt;<br>\r\n</span></span><span style=\"font-size:13px\"><span style=\"color:#0000ff\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;<span style=\"font-size:13px;color:#a31515\">TextBlock</span><span style=\"font-size:13px;color:#ff0000\"> Text</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">Binding</span><span style=\"font-size:13px;color:#ff0000\"> Path</span><span style=\"font-size:13px;color:#0000ff\">=SomeProperty}&quot;</span><span style=\"font-size:13px;color:#ff0000\">&nbsp;</span><span style=\"font-size:13px;color:#0000ff\">/&gt;<br>\r\n</span></span></span><span style=\"font-size:13px\"><span style=\"color:#0000ff\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span style=\"color:#a31515\">DataTemplate</span></span><span style=\"font-size:13px\"><span style=\"color:#0000ff\">&gt;<br>\r\n</span><span style=\"color:#0000ff\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span style=\"color:#a31515\">Setter.Value</span></span><span style=\"font-size:13px\"><span style=\"color:#0000ff\">&gt;<br>\r\n</span><span style=\"color:#0000ff\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span style=\"color:#a31515\">Setter</span></span><span style=\"font-size:13px\"><span style=\"color:#0000ff\">&gt;<br>\r\n</span><span style=\"color:#0000ff\">&lt;/</span><span style=\"color:#a31515\">Style</span><span style=\"color:#0000ff\">&gt;</span></span><br>\r\n...<br>\r\n<span style=\"font-size:13px;color:#0000ff\">&lt;</span><span style=\"font-size:13px;color:#a31515\">dg</span><span style=\"font-size:13px;color:#0000ff\">:</span><span style=\"font-size:13px;color:#a31515\">DataGrid</span><span style=\"font-size:13px;color:#ff0000\"> ItemsSource</span><span style=\"font-size:13px;color:#0000ff\">=&quot;{</span><span style=\"font-size:13px;color:#a31515\">Binding</span><span style=\"font-size:13px;color:#ff0000\"> Path</span><span style=\"font-size:13px;color:#0000ff\">=MyItems}&quot;</span><span style=\"font-size:13px;color:#ff0000\"> IsSynchronizedWithCurrentItem</span><span style=\"font-size:13px;color:#0000ff\">=&quot;True&quot; /&gt;</span><br>\r\n<br>\r\nThis fails&nbsp;since the Content of the DataGridCell&nbsp;seems to be a&nbsp;System.Data.DataRowView rather than the data item itself. The only way I've found to get to the data item through the DataRowView&nbsp;is&nbsp;by using&nbsp;the indexer property with the column name or index (which&nbsp;are not readliy available, I think). How do I do this?\r\n",
    "PostedDate": "2008-10-14T07:07:55.463-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "129499",
    "ThreadId": "37693",
    "Html": "Binding to ItemsSource properties do not work well in this way.  What you can do set the binding on the column as you are adding them dynamically.  Have you tried that already?\r\n",
    "PostedDate": "2008-11-02T08:16:37.763-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "129585",
    "ThreadId": "37693",
    "Html": "No, I haven't tried that. <br>\r\n<br>\r\nWhat I did was to use an ugly workaround where I first generate the DataGridColumns in code behind, as needed, and expose the DataTable column names associated with the DataGridColumns in an IDictionary&lt;DataGridColumn, string&gt; as a dp on my page. Then I use a multibinding to bind to this dp, to the DataGridCell DataContext (i.e. the DataRowView) and to the DataGridColumn of the cell and lookup the data item in a converter. Nothing I'm proud of but it did the trick.<br>\r\n<br>\r\nHowever, any improvement is welcome, but I don't really understand what you mean with setting the binding on the column (the DataColumn or the DataGridColumn?). An example demonstrating what you mean would be greatly appreciated.<br>\r\n<br>\r\nThank you,<br>\r\nMattias<br>\r\n",
    "PostedDate": "2008-11-03T00:40:20.067-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "129630",
    "ThreadId": "37693",
    "Html": "The sample on this post, <a href=\"http://blogs.msdn.com/vinsibal/archive/2008/10/22/wpf-datagrid-and-the-wpftoolkit-have-released.aspx\">http://blogs.msdn.com/vinsibal/archive/2008/10/22/wpf-datagrid-and-the-wpftoolkit-have-released.aspx</a>, has an example of using a DataTable as the data source.  The columns are not dynamic but it should still give you an idea on how to declare the binding on the column.  It is not that difficult to take the sample and make the column generation dynamic.  Hope that helps.\r\n",
    "PostedDate": "2008-11-03T05:17:57.61-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]