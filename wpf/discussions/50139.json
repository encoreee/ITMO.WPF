[
  {
    "Id": "167840",
    "ThreadId": "50139",
    "Html": "I thought I'd cross-post an issue I've reported on the Prism codeplex site which can be found at: <a href=\"http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=50065\">http://compositewpf.codeplex.com/Thread/View.aspx?ThreadId=50065</a><br>\r\n----<br>\r\n<br>\r\n<div id=\"ctl00_ctl00_MasterContent_Content_PostRepeater_ctl00_BodyDiv\">\r\n<p>I'm experiencing a column sizing issue when attempting to display a user control containing a WPF Toolkit DataGrid within a region.  <br>\r\n<br>\r\nGiven a DataGrid with several columns, one of which has a Width of &quot;*&quot; (to consume the remaining space of the constrained grid), the DataGrid is displaying fine when shown by statically declaring it within a Window, or by dynamically adding it to a Window's root Grid control.  However, the DataGrid does not <em>appear</em> to display correctly when displayed within a registered region.  When displayed within a region, the column assigned the width of &quot;*&quot; consumes slightly more than the remaining column space thus triggering a horizontal scroll bar.<br>\r\n<br>\r\nAfter experiencing this in my own project, I took the DataGrid example available at <a href=\"http://windowsclient.net/downloads/folders/hands-on-labs/entry76491.aspx\"><span style=\"color:#3e62a6\">http://windowsclient.net/downloads/folders/hands-on-labs/entry76491.aspx</span></a> and converted it to display the DataGrid in a region and saw the same resizing issues.<br>\r\n<br>\r\nThe only way I was able to correctly display the DataGrid was by putting the markup in a resource dictionary and adding the retrieved control that way.  Obviosuly this is a bit kludgy.<br>\r\n<br>\r\nI can't say for sure whether the problem actually lies in the DataGrid or Prism's RegionManager code, but there definitely seems to be some issue using the two together.  Any ideas on what might be going on or how to overcome this?</p>\r\n<p>&nbsp;</p>\r\n</div>\r\n",
    "PostedDate": "2009-03-13T11:00:51.417-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "172558",
    "ThreadId": "50139",
    "Html": "Here is the response I got from the Composite WPF thread:<br>\r\n<br>\r\n-----<br>\r\n<br>\r\n<div id=\"ctl00_ctl00_MasterContent_Content_PostRepeater_ctl02_BodyDiv\">\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Hi Derek,</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">&nbsp;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">We\r\nhave been looking to reproduce your issue and you are right, this does\r\nhappen. Having done some digging, we have not been able to determine\r\nthe root cause yet, but we can tell you our believes based on our\r\nfindings:</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">The <strong>WPF</strong> <strong>DataGrid</strong>\r\nappears to calculate its size once. Then, when the UI is updated, say\r\nyou resize the window, it uses that previously established size to\r\nassign the new width/height to the columns and rows.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">It\r\nappears that when loading the grid (placed in a view) into a region in\r\nthe module initialize of your modules, the size that it will get is not\r\nyet determined, thus it <em>miscalculates</em> the width it should get. This makes the column assigned with the “*” width appear wider that it should.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">&nbsp;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><strong><span style=\"font-family:calibri\">Possible Workarounds:</span></strong></p>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:calibri\">·<span style=\"font-family:'times new roman';font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Add the <strong>GridView</strong> to the region after the application has been loaded. (tested)<strong></strong>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:calibri\">·<span style=\"font-family:'times new roman';font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Load the module that has the grid on demand after the application has been loaded. (tested)<strong> </strong>\r\n<p style=\"margin:0cm 0cm 0pt 36pt\"><span style=\"font-family:calibri\">·<span style=\"font-family:'times new roman';font-style:normal;font-variant:normal;font-weight:normal;font-size:7pt;line-height:normal\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Check how to update the WPF GridView’s code to calculate the size of the Grid so it has the real size of the view.<strong></strong>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong></strong></span></p>\r\n<p style=\"margin:0cm 0cm 0pt\"><span style=\"font-family:calibri\">Please let me know if this helps.</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\">&nbsp;</span></p>\r\n<p style=\"margin:0cm 0cm 0pt -0.6pt\"><span style=\"font-family:calibri\">Damian Schenkelman</span></p>\r\n<span style=\"font-size:11pt;font-family:'calibri','sans-serif'\"><a href=\"http://blogs.southworks.net/dschenkelman\"><span style=\"color:#0000ff\">http://blogs.southworks.net/dschenkelman</span></a></span></span></p>\r\n</span></p>\r\n</span></p>\r\n</div>\r\n<br>\r\n",
    "PostedDate": "2009-03-26T16:07:03.13-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]