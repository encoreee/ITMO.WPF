[
  {
    "Id": "247984",
    "ThreadId": "72619",
    "Html": "<p>Hi ,</p>\r\n<p>Recently i was going thru styles of WPF datagrid in Generic XAML.Surprisingly I found style key with&nbsp;<span style=\"font-family:Consolas, 'Courier New', Courier, monospace;color:#a31515;white-space:pre\">dg:DataGridComboBoxColumn+TextBlockComboBox.Does it mean tht While DatagridCombobox gets render will it be concatenation of DataGridComboBoxColumn and TextBlockComboBox</span></p>\r\n<p><span style=\"font-family:Consolas, 'Courier New', Courier, monospace;color:#a31515;white-space:pre\"> which results in different type control.</span></p>\r\n<p><span style=\"font-family:Consolas, 'Courier New', Courier, monospace;color:#a31515;white-space:pre\">Can any1 Please explain me about usage '+' inside style key.</span></p>\r\n<p><span style=\"font-family:Consolas, 'Courier New', Courier, monospace;color:#a31515;white-space:pre\"><br></span></p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre> &lt;Style x:Key=<span style=\"color:#A31515\">&quot;{x:Type dg:DataGridComboBoxColumn+TextBlockComboBox}&quot;</span> TargetType=<span style=\"color:#A31515\">&quot;{x:Type dg:DataGridComboBoxColumn+TextBlockComboBox}&quot;</span>&gt;\r\n    &lt;Setter Property=<span style=\"color:#A31515\">&quot;Template&quot;</span>&gt;\r\n      &lt;Setter.Value&gt;\r\n        &lt;ControlTemplate TargetType=<span style=\"color:#A31515\">&quot;{x:Type dg:DataGridComboBoxColumn+TextBlockComboBox}&quot;</span>&gt;\r\n          &lt;ContentPresenter Margin=<span style=\"color:#A31515\">&quot;1,1,1,1&quot;</span>\r\n                            Content=<span style=\"color:#A31515\">&quot;{TemplateBinding SelectionBoxItem}&quot;</span>\r\n                            ContentTemplate=<span style=\"color:#A31515\">&quot;{TemplateBinding SelectionBoxItemTemplate}&quot;</span>\r\n                            ContentTemplateSelector=<span style=\"color:#A31515\">&quot;{TemplateBinding ItemTemplateSelector}&quot;</span>\r\n                            ContentStringFormat=<span style=\"color:#A31515\">&quot;{TemplateBinding SelectionBoxItemStringFormat}&quot;</span>\r\n                            VerticalAlignment=<span style=\"color:#A31515\">&quot;{TemplateBinding VerticalContentAlignment}&quot;</span>\r\n                            HorizontalAlignment=<span style=\"color:#A31515\">&quot;{TemplateBinding HorizontalContentAlignment}&quot;</span>\r\n                            SnapsToDevicePixels=<span style=\"color:#A31515\">&quot;{TemplateBinding SnapsToDevicePixels}&quot;</span>\r\n                            IsHitTestVisible=<span style=\"color:#A31515\">&quot;false&quot;</span> /&gt;\r\n        &lt;/ControlTemplate&gt;\r\n      &lt;/Setter.Value&gt;\r\n    &lt;/Setter&gt;\r\n  &lt;/Style&gt;\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&lt;Style x:Key=&quot;{x:Type dg:DataGridComboBoxColumn+TextBlockComboBox}&quot; TargetType=&quot;{x:Type dg:DataGridComboBoxColumn+TextBlockComboBox}&quot;&gt;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp;&lt;Setter Property=&quot;Template&quot;&gt;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp;&lt;Setter.Value&gt;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&lt;ControlTemplate TargetType=&quot;{x:Type dg:DataGridComboBoxColumn+TextBlockComboBox}&quot;&gt;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;ContentPresenter Margin=&quot;1,1,1,1&quot;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Content=&quot;{TemplateBinding SelectionBoxItem}&quot;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ContentTemplate=&quot;{TemplateBinding SelectionBoxItemTemplate}&quot;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ContentTemplateSelector=&quot;{TemplateBinding ItemTemplateSelector}&quot;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ContentStringFormat=&quot;{TemplateBinding SelectionBoxItemStringFormat}&quot;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;VerticalAlignment=&quot;{TemplateBinding VerticalContentAlignment}&quot;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;HorizontalAlignment=&quot;{TemplateBinding HorizontalContentAlignment}&quot;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SnapsToDevicePixels=&quot;{TemplateBinding SnapsToDevicePixels}&quot;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;IsHitTestVisible=&quot;false&quot; /&gt;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&lt;/ControlTemplate&gt;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp; &nbsp;&lt;/Setter.Value&gt;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp; &nbsp;&lt;/Setter&gt;</div>\r\n<div id=\"_mcePaste\" style=\"left:-10000px;top:0px;width:1px;height:1px;overflow-x:hidden;overflow-y:hidden\">&nbsp;&nbsp;&lt;/Style&gt;</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-10-21T00:12:39.183-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "255998",
    "ThreadId": "72619",
    "Html": "<p>Bump.&nbsp; I am also having trouble importing the June 2009 release DataGrid\\Themes\\Generic.xaml due to&nbsp;</p>\r\n<p><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\">&lt;font size=&quot;2&quot; color=&quot;#ff0000&quot;&gt;&lt;font size=&quot;2&quot; color=&quot;#ff0000&quot;&gt;\r\n<p>dg</p>\r\n&lt;/font&gt;&lt;/font&gt;</span>&lt;font size=&quot;2&quot; color=&quot;#ff0000&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span></p>\r\n<p><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">:</span></span><span style=\"color:#ff0000;font-size:x-small\"><span style=\"color:#ff0000;font-size:x-small\">DataGridComboBoxColumn</span></span><span style=\"color:#0000ff;font-size:x-small\"><span style=\"color:#0000ff;font-size:x-small\">+TextBlockComboBox</span></span></p>\r\n<p><span style=\"color:#000000\">Can someone enlighten me on the syntax usage of the '+' operator?&nbsp; I am not able to compile with this in my current project.&nbsp; I am getting:</span></p>\r\n<p><span style=\"color:#000000\">&nbsp;</span>Error&nbsp;3&nbsp;Only public or internal classes can be used within markup. 'TextBlockComboBox' type is not public or internal.&nbsp;C:\\secretpathtomyfileinmyproject...\\ToolkitGridStyles.xaml&nbsp;319&nbsp;20&nbsp;CAMS.Client<br>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-11-11T07:49:29.443-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "256352",
    "ThreadId": "72619",
    "Html": "<p>Hi All,</p>\r\n<p>The '+' means inner class. TextBlockComboBox is a inner class DataGridComboBoxColumn. According to the source code inside the WPF Toolkit, the TextBlockComboBox is a workaround of the bug in Selector.</p>\r\n<p><span style=\"color:#008000;font-size:x-small\"><span style=\"color:#008000;font-size:x-small\">Selector has a bug regarding DataContext change and SelectedItem property,\r\n<p>&nbsp;</p>\r\n<p>where if the SelectedItem due to old DataContext is a valid item in ItemsSource</p>\r\n<p>but the SelectedItem due to new DataContext is not a valid item in ItemsSource,</p>\r\n<p>the SelectedIndex remains that of old context instead of changing to -1.</p>\r\n<p>This method is a workaround to that problem, since it is of high impact to DataGrid</p>\r\n</span></span></p>\r\n<p>Regards,</p>\r\n<p>Tony</p>",
    "PostedDate": "2009-11-12T07:43:20.817-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]