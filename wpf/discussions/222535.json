[
  {
    "Id": "476710",
    "ThreadId": "222535",
    "Html": "<p>Hi,</p>\r\n<p>I have a requirement to manage memory for WPF applications. Before I do that I had a few questions...</p>\r\n<p>1. Attached behaviors which hook the UI control events, leave the event handler references dangling even after the control is no longer usable on the UI? (such as a virtualised item of a item control)<br>2. Does specifying attached properties in Styles make any difference?<br>&nbsp;Triggers may be?</p>\r\n<p>3. When we use dockable contents (such as a TabItem) and close the dockable content after use, what is the guarantee that the content UI will be freed from the memory in timely manner?<br>4. Does .Net 4.0 has some betterments in tems of memory management of unusable UI contents?</p>\r\n<p>Now my observations are ...</p>\r\n<p>1. Attached behaviors do not unhook the event handlers automatically unless explicitly done. which means even if the ui control was not usable on the UI, it must remain in the memory. (plz correct me if I am wrong)<br>2. Weak references in attached behaviors fail to work in the case of template generated controls i.e. virtualised items from the itemscontrol.<br>3. Any unloading of the UI contents from any WPF container doesnt gurantee its successful removal from memory.<br>4. .Net 4.0 framework sets NamedObject as the datacontext to disconnected items (i.e. the virtualised items from itemscontrols) whereas .Net 3.5 framework keeps the data context as it is.</p>\r\n<p>So using the above information I tried doing memory profiling for 3 applications (.Net 3.5 app in VS 2008, .Net 3.5. app in VS2010 and .Net 4.0 app in VS 2010). All 3 have exactly same UI and code implemented.</p>\r\n<p>I see that even when I&nbsp;remove the hooked event handlers in my attached behavior by checking the changed data context as &quot;NamedObject&quot; (in the .Net 4.0 app in VS2010), my virtualised unusable items from a listbox continue to remain in the memory.</p>\r\n<p>The whole exercise has made me believe that WPF could be poor in memory management esp. attached behaviors on virtualised items.</p>\r\n<p>Plz enlighten me!</p>\r\n<p>Vinit Sankhe.</p>",
    "PostedDate": "2010-08-04T23:20:40.47-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]