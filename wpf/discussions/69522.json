[
  {
    "Id": "236602",
    "ThreadId": "69522",
    "Html": "<p>Hello!</p>\r\n<p>I use Linq To SQL to manage data in my database. I use WPF datagrid to display the data binded. I would like to bind data using ObjectDataProvider using the classes that are automatically generated by Linq To SQL class. I can perform the binding very well, but I don't know how to submit changes, inserts and deletions in my WPF datagrid back to my database.I would like to submit changes back to the database by a push of a button.</p>\r\n<p>Usualy when I perform databinding in code behind the control. There a datacontext is created on which submitChanges() can be called. Using XAML and objectDataProvider no such instance of datacontext of my Linq To SQL class is created. So I don't know what object should I call submitChanges() on??.</p>\r\n<p>Here is the XAML code that I have created os far:</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>ObjectDataProvider:<br><br>    &lt;xmlns:local=&quot;clr-namespace:LunchEye&quot;&gt;\r\n<br>      <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ObjectDataProvider</span> <span style=\"color:Red\">x:Key</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">scenarijiRegresiranja</span><span style=\"color:Black\">&quot;</span> \r\n                <span style=\"color:Red\">ObjectType</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{x:Type local:dcLunchEye}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">MethodName</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">GetTable</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n          <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ObjectDataProvider.MethodParameters</span><span style=\"color:Blue\">&gt;</span>\r\n            <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">x</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">Type</span> <span style=\"color:Red\">TypeName</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">local:dtScenarijRegre</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n        <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">ObjectDataProvider.MethodParameters</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">ObjectDataProvider</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n</p>\r\n<p>DataGrid I would like to perform binding on:</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>  <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">my</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DataGrid</span> <span style=\"color:Red\">Name</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">dgvScenariji</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Grid.Column</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">0</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Grid.Row</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">1</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Margin</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">10,0,10,10</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Background</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">White</span><span style=\"color:Black\">&quot;</span>  \r\n                         <span style=\"color:Red\">ItemsSource</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Source={StaticResource scenarijiRegresiranja}}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">AutoGenerateColumns</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">False</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n                <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">my</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DataGrid.Columns</span><span style=\"color:Blue\">&gt;</span>\r\n                    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">my</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DataGridTextColumn</span> <span style=\"color:Red\">Binding</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Path=idScenarijRegres}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">CanUserReorder</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">False</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">CanUserResize</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">False</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Header</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Id</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">IsReadOnly</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">True</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n                    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">my</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DataGridTextColumn</span> <span style=\"color:Red\">Binding</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Path=naziv}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">CanUserReorder</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">False</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">CanUserResize</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">True</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Header</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Naziv</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n                    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">my</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DataGridCheckBoxColumn</span> <span style=\"color:Red\">Binding</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Path=aktiven}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">CanUserReorder</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">False</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">CanUserSort</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">True</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Header</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Omogoƒçen</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n                    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">my</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DataGridTextColumn</span> <span style=\"color:Red\">Binding</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Path=opis}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Header</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">Opis</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Blue\">/&gt;</span>\r\n                <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">my</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DataGrid.Columns</span><span style=\"color:Blue\">&gt;</span>\r\n  <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">my</span><span style=\"color:Blue\">:</span><span style=\"color:#A31515\">DataGrid</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n</p>\r\n<p>&nbsp;</p>\r\n<p>Thank you for your help.</p>\r\n<p>&nbsp;</p>\r\n<p>Best Regards</p>\r\n<p>Jurij</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-09-20T08:30:36.19-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "244774",
    "ThreadId": "69522",
    "Html": "<p>In code-behind define two variable:</p>\r\n<p><span style=\"color:#2b91af\">ListCollectionView </span>defaultView;<br><span style=\"color:#2b91af\">LINtoSQLDataContext </span>dataContext;</p>\r\n<p>In constructor or Loaded event&nbsp;asign those variable i to related variable in xaml like this:</p>\r\n<p>defaultView = (<span style=\"color:#2b91af\">ListCollectionView</span>)<span style=\"color:#2b91af\">CollectionViewSource</span>.GetDefaultView(<span style=\"color:blue\">dgvScenariji</span>.ItemsSource);<br>dataContext = (<span style=\"color:#2b91af\">LINtoSQLDataContext</span>)(FindResource(<span style=\"color:#a31515\">&quot;<span style=\"color:blue\">scenarijiRegresiranja</span>&quot;</span>) <span style=\"color:blue\">as </span><span style=\"color:#2b91af\">ObjectDataProvider</span>).ObjectInstance;</p>\r\n<p>Add new item like the folliwing (Table is&nbsp;type of your lintosql table):</p>\r\n<p><span style=\"color:#2b91af\">Table </span>newItem = (<span style=\"color:#2b91af\">Table</span>)defaultView.AddNew();<br><span style=\"color:green\">&nbsp;</span>dataContext.Orders.InsertOnSubmit(newItem);</p>\r\n<p>Save back to database:</p>\r\n<p>defaultView.Refresh();<br>dataContext.SubmitChanges();</p>\r\n<p>Delete</p>\r\n<p>dataContext.Orders.DeleteOnSubmit((<span style=\"color:#2b91af\">Table</span>)defaultView.CurrentItem);<br>defaultView.Remove(defaultView.CurrentItem);<br><br><br><br><br></p>",
    "PostedDate": "2009-10-12T10:59:08.687-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "244922",
    "ThreadId": "69522",
    "Html": "<p>Hi</p>\r\n<p>What kind of object is <span style=\"color:#2b91af\">LINtoSQLDataContext <span style=\"color:#000000\">?</span></span></p>\r\n<p><span style=\"color:#2b91af\"><span style=\"color:#000000\">And what about a master-detail scenario (submiting changes to child records) ?</span></span></p>\r\n<p><span style=\"color:#2b91af\"><span style=\"color:#000000\">I can't figure out how to do it ?</span></span></p>\r\n<p><span style=\"color:#2b91af\"><span style=\"color:#000000\">Thank's</span></span></p>\r\n<p><span style=\"color:#2b91af\"><span style=\"color:#000000\">&nbsp;</span></span></p>\r\n<p><span style=\"color:#2b91af\">&nbsp;</span></p>",
    "PostedDate": "2009-10-12T23:23:57.447-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "245179",
    "ThreadId": "69522",
    "Html": "<p>@ Bhrnjica: Thank you for your reply! It was very helpful. It did clarify a few things and concepts to me.</p>\r\n<p>@ssandu: LinqToSQL is not an object. It&nbsp;creates a set of classes that map to the tables in your SQL server database. This way every row in each table of the database&nbsp;is represented by an object with propreties that correspond to the columns in the table. Also foreign key relationsships are taken into&nbsp; account through properties that return a list of objects. LinqToSQL makes data querying and database updating extremely easy. Ever since I discovered LinqToSQL I haven't written a single line of SQL code anymore.</p>\r\n<p>unfortunately I don't know about the master-detail scenario question, since I havn't done it yet. But I think that it shukd be easily done since it is very easy to extract list of orders that belong to a certain customer for example.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-10-13T11:17:54.163-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]