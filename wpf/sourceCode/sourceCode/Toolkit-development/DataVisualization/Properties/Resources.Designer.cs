//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Windows.Controls.DataVisualization.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("System.Windows.Controls.DataVisualization.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Changing the Chart&apos;s Axes property is not supported; changes to the collection should be made with its .Add/.Remove methods instead..
        /// </summary>
        internal static string Chart_Axes_SetterNotSupported {
            get {
                return ResourceManager.GetString("Chart_Axes_SetterNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Axis location cannot be changed to auto when hosted inside of a series host..
        /// </summary>
        internal static string Chart_AxisLocationChanged_CantBeChangedToAutoWhenHostedInsideOfASeriesHost {
            get {
                return ResourceManager.GetString("Chart_AxisLocationChanged_CantBeChangedToAutoWhenHostedInsideOfASeriesHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Changing the Chart&apos;s Series property is not supported; changes to the collection should be made with its .Add/.Remove methods instead..
        /// </summary>
        internal static string Chart_Series_SetterNotSupported {
            get {
                return ResourceManager.GetString("Chart_Series_SetterNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The content property must be set to a Chart object..
        /// </summary>
        internal static string DataPointSeriesDropTarget_set_Content_ContentMustBeAChart {
            get {
                return ResourceManager.GetString("DataPointSeriesDropTarget_set_Content_ContentMustBeAChart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Assigned dependent axis cannot be used. This may be due to an unset Orientation property for the axis or a type mismatch between the values being plotted and those supported by the axis..
        /// </summary>
        internal static string DataPointSeriesWithAxes_GetAxes_AssignedDependentAxisCannotBeUsed {
            get {
                return ResourceManager.GetString("DataPointSeriesWithAxes_GetAxes_AssignedDependentAxisCannotBeUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Assigned independent axis cannot be used. This may be due to an unset Orientation property for the axis..
        /// </summary>
        internal static string DataPointSeriesWithAxes_GetAxes_AssignedIndependentAxisCannotBeUsed {
            get {
                return ResourceManager.GetString("DataPointSeriesWithAxes_GetAxes_AssignedIndependentAxisCannotBeUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No suitable axis is available for plotting the dependent value..
        /// </summary>
        internal static string DataPointSeriesWithAxes_NoSuitableAxisAvailableForPlottingDependentValue {
            get {
                return ResourceManager.GetString("DataPointSeriesWithAxes_NoSuitableAxisAvailableForPlottingDependentValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This series does not support radial axes..
        /// </summary>
        internal static string DataPointSeriesWithAxes_ThisSeriesDoesNotSupportRadialAxes {
            get {
                return ResourceManager.GetString("DataPointSeriesWithAxes_ThisSeriesDoesNotSupportRadialAxes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot determine the size of an axis without an orientation..
        /// </summary>
        internal static string DisplayAxis_GetLength_CannotDetermineTheLengthOfAnAxisWithAnOrientationOfNone {
            get {
                return ResourceManager.GetString("DisplayAxis_GetLength_CannotDetermineTheLengthOfAnAxisWithAnOrientationOfNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Attempt to set Edge property to an invalid value..
        /// </summary>
        internal static string EdgePanel_OnEdgePropertyChanged {
            get {
                return ResourceManager.GetString("EdgePanel_OnEdgePropertyChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The DataRangeBinding property of the Interpolator must be bound to an IConvertible object..
        /// </summary>
        internal static string Interpolator_IncludeInRange_DataRangeBindingNotIConvertible {
            get {
                return ResourceManager.GetString("Interpolator_IncludeInRange_DataRangeBindingNotIConvertible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The maximum value must be larger than or equal to the minimum value..
        /// </summary>
        internal static string Range_ctor_MaximumValueMustBeLargerThanOrEqualToMinimumValue {
            get {
                return ResourceManager.GetString("Range_ctor_MaximumValueMustBeLargerThanOrEqualToMinimumValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &quot;Cannot read the Maximum of an empty range.&quot;.
        /// </summary>
        internal static string Range_get_Maximum_CannotReadTheMaximumOfAnEmptyRange {
            get {
                return ResourceManager.GetString("Range_get_Maximum_CannotReadTheMaximumOfAnEmptyRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &quot;Cannot read the Minimum of an empty range.&quot;.
        /// </summary>
        internal static string Range_get_Minimum_CannotReadTheMinimumOfAnEmptyRange {
            get {
                return ResourceManager.GetString("Range_get_Minimum_CannotReadTheMinimumOfAnEmptyRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на [{0},{1}].
        /// </summary>
        internal static string Range_ToString_Data {
            get {
                return ResourceManager.GetString("Range_ToString_Data", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No Data..
        /// </summary>
        internal static string Range_ToString_NoData {
            get {
                return ResourceManager.GetString("Range_ToString_NoData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The maximum value must be larger than or equal to the minimum value..
        /// </summary>
        internal static string RangeAxis_MaximumValueMustBeLargerThanOrEqualToMinimumValue {
            get {
                return ResourceManager.GetString("RangeAxis_MaximumValueMustBeLargerThanOrEqualToMinimumValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The minimum value must be smaller than or equal to the maximum value..
        /// </summary>
        internal static string RangeAxis_MinimumValueMustBeLargerThanOrEqualToMaximumValue {
            get {
                return ResourceManager.GetString("RangeAxis_MinimumValueMustBeLargerThanOrEqualToMaximumValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Collection is read-only..
        /// </summary>
        internal static string ReadOnlyObservableCollection_CollectionIsReadOnly {
            get {
                return ResourceManager.GetString("ReadOnlyObservableCollection_CollectionIsReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot reset a ResourceDictionaryEnumerator; reset the ResourceDictionaryDispenser instead..
        /// </summary>
        internal static string ResourceDictionaryEnumerator_CantResetEnumeratorResetDispenserInstead {
            get {
                return ResourceManager.GetString("ResourceDictionaryEnumerator_CantResetEnumeratorResetDispenserInstead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Series {0}.
        /// </summary>
        internal static string Series_OnGlobalSeriesIndexPropertyChanged_UntitledSeriesFormatString {
            get {
                return ResourceManager.GetString("Series_OnGlobalSeriesIndexPropertyChanged_UntitledSeriesFormatString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A series cannot be added to more than one series host..
        /// </summary>
        internal static string Series_SeriesHost_SeriesHostPropertyNotNull {
            get {
                return ResourceManager.GetString("Series_SeriesHost_SeriesHostPropertyNotNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid attempt to remove permanent axis from axis collection..
        /// </summary>
        internal static string SeriesHostAxesCollection_InvalidAttemptToRemovePermanentAxisFromSeriesHost {
            get {
                return ResourceManager.GetString("SeriesHostAxesCollection_InvalidAttemptToRemovePermanentAxisFromSeriesHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An axis cannot be removed from a series host when one or more hosted series is listening to it..
        /// </summary>
        internal static string SeriesHostAxesCollection_RemoveItem_AxisCannotBeRemovedFromASeriesHostWhenOneOrMoreSeriesAreListeningToIt {
            get {
                return ResourceManager.GetString("SeriesHostAxesCollection_RemoveItem_AxisCannotBeRemovedFromASeriesHostWhenOneOrMo" +
                        "reSeriesAreListeningToIt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Either ItemTemplate must be set or TreeMapItemDefinitionSelector must return a non-null template..
        /// </summary>
        internal static string TreeMap_BuildTreeMapTree_TemplateNotSet {
            get {
                return ResourceManager.GetString("TreeMap_BuildTreeMapTree_TemplateNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The value of PropertyBinding property of an interpolator cannot be null..
        /// </summary>
        internal static string TreeMap_CreateChildren_InterpolatorBindingNotSet {
            get {
                return ResourceManager.GetString("TreeMap_CreateChildren_InterpolatorBindingNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Changing the TreeMap&apos;s Interpolators Property is not supported; changes to the collection should be made with its .Add/.Remove methods instead..
        /// </summary>
        internal static string TreeMap_Interpolators_SetterNotSupported {
            get {
                return ResourceManager.GetString("TreeMap_Interpolators_SetterNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid attempt to insert a duplicate item..
        /// </summary>
        internal static string UniqueObservableCollection_InvalidAttemptToInsertADuplicateItem {
            get {
                return ResourceManager.GetString("UniqueObservableCollection_InvalidAttemptToInsertADuplicateItem", resourceCulture);
            }
        }
    }
}
