{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "ControlVerifier",
      "DisplayName": "ControlVerifier"
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "Attempting to test the 'Window' control will crash the Control Verifier app with the following message:\n \n---------------------------\n \n---------------------------\nAn unhandled exception occurred that may be caused by the Control under test. The app will shutdown now...\n \n \n \nException Message: Window must be the root of the tree. Cannot add Window as a child of Visual.\n \nException StackTrace:    at System.Windows.Window.OnAncestorChanged()\n \n   at System.Windows.FrameworkElement.OnAncestorChangedInternal(TreeChangeInfo parentTreeState)\n \n   at System.Windows.TreeWalkHelper.OnAncestorChanged(FrameworkElement fe, FrameworkContentElement fce, TreeChangeInfo info)\n \n   at System.Windows.TreeWalkHelper.OnAncestorChanged(DependencyObject d, TreeChangeInfo info)\n \n   at System.Windows.DescendentsWalker`1.StartWalk(DependencyObject startNode, Boolean skipStartNode)\n \n   at MS.Internal.PrePostDescendentsWalker`1.StartWalk(DependencyObject startNode, Boolean skipStartNode)\n \n   at System.Windows.TreeWalkHelper.InvalidateOnTreeChange(FrameworkElement fe, FrameworkContentElement fce, DependencyObject parent, Boolean isAddOperation)\n \n   at System.Windows.FrameworkElement.ChangeLogicalParent(DependencyObject newParent)\n \n   at MS.Internal.FrameworkObject.ChangeLogicalParent(DependencyObject newParent)\n \n   at System.Windows.FrameworkElement.AddLogicalChild(Object child)\n \n   at System.Windows.Controls.UIElementCollection.SetLogicalParent(UIElement element)\n \n   at System.Windows.Controls.UIElementCollection.AddInternal(UIElement element)\n \n   at System.Windows.Controls.UIElementCollection.Add(UIElement element)\n \n   at ControlVerifier.MainWindow.AddUIElementToTestSurface(UIElement uiElement)\n \n   at ControlVerifier.App.OnViewModelPropertyChanged(Object sender, PropertyChangedEventArgs e)\n \n   at System.ComponentModel.PropertyChangedEventHandler.Invoke(Object sender, PropertyChangedEventArgs e)\n \n   at ControlVerifier.ViewModelBase.OnPropertyChanged(String propertyName)\n \n   at ControlVerifier.ControlTestViewModel.set_RootElementUnderTest(UIElement value)\n \n   at ControlVerifier.ControlTestViewModel.SetElementToTest(UIElement element, Boolean isChildElement, Boolean setupViewModel)\n \n   at ControlVerifier.ControlTestViewModel.<get_ChooseControlCommand>b__0(Object param)\n \n   at ControlVerifier.DelegateCommand`1.Execute(T parameter)\n \n   at ControlVerifier.DelegateCommand`1.System.Windows.Input.ICommand.Execute(Object parameter)\n \n   at MS.Internal.Commands.CommandHelpers.CriticalExecuteCommandSource(ICommandSource commandSource, Boolean userInitiated)\n \n   at System.Windows.Controls.Primitives.ButtonBase.OnClick()\n \n   at System.Windows.Controls.Button.OnClick()\n \n   at System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(MouseButtonEventArgs e)\n \n   at System.Windows.UIElement.OnMouseLeftButtonUpThunk(Object sender, MouseButtonEventArgs e)\n \n   at System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)\n \n   at System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)\n \n   at System.Windows.RoutedEventHandlerInfo.InvokeHandler(Object target, RoutedEventArgs routedEventArgs)\n \n   at System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\n \n   at System.Windows.UIElement.ReRaiseEventAs(DependencyObject sender, RoutedEventArgs args, RoutedEvent newEvent)\n \n   at System.Windows.UIElement.CrackMouseButtonEventAndReRaiseEvent(DependencyObject sender, MouseButtonEventArgs e)\n \n   at System.Windows.UIElement.OnMouseUpThunk(Object sender, MouseButtonEventArgs e)\n \n   at System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)\n \n   at System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)\n \n   at System.Windows.RoutedEventHandlerInfo.InvokeHandler(Object target, RoutedEventArgs routedEventArgs)\n \n   at System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\n \n   at System.Windows.UIElement.RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)\n \n   at System.Windows.UIElement.RaiseEvent(RoutedEventArgs args, Boolean trusted)\n \n   at System.Windows.Input.InputManager.ProcessStagingArea()\n \n   at System.Windows.Input.InputManager.ProcessInput(InputEventArgs input)\n \n   at System.Windows.Input.InputProviderSite.ReportInput(InputReport inputReport)\n \n   at System.Windows.Interop.HwndMouseInputProvider.ReportInput(IntPtr hwnd, InputMode mode, Int32 timestamp, RawMouseActions actions, Int32 x, Int32 y, Int32 wheel)\n \n   at System.Windows.Interop.HwndMouseInputProvider.FilterMessage(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\n \n   at System.Windows.Interop.HwndSource.InputFilterMessage(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\n \n   at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\n \n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\n \n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Boolean isSingleParameter)\n \n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Boolean isSingleParameter, Delegate catchHandler)\n \n \n \n \n---------------------------\nOK   \n---------------------------",
    "LastUpdatedDate": "2017-11-27T11:31:26.34-08:00",
    "PlannedForRelease": "WPF Test Tools",
    "ReleaseVisibleToPublic": true,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2009-08-11T09:45:49.193-07:00",
    "Status": {
      "Name": "Active",
      "Id": 2
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Control Verifier 0.1 - Testing the 'Window' control causes app crash",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 2,
    "Id": 10436
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Same goes for selecting Tooltip to test",
      "PostedDate": "2009-08-11T09:46:32.31-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Thanks for reporting this; we're tracking it in our internal database and plan to fix the issue for our next release.\r\n\r\nWe really appreciate your feedback!  Please let us know as you hit other issues.\r\n\r\nAlexis",
      "PostedDate": "2009-09-01T16:05:05.943-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-09-01T16:06:33.507-07:00",
      "Id": -2147483648
    },
    {
      "Message": "I have the same crash for my own control...",
      "PostedDate": "2009-09-09T03:50:16.56-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-09-09T03:50:26.707-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:41:02.147-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2017-11-27T11:31:26.34-08:00",
      "Id": -2147483648
    }
  ]
}