{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "The functions GetTemplateRoot and GetTemplatedParent of the class VisualStateManager don't take the Window class in account. Here is a modified version.\n \n /// <summary>\n        ///     Returns the root element of an expanded template for a given control.\n        /// </summary>\n        private static FrameworkElement GetTemplateRoot(Control control)\n        {\n            UserControl userControl = control as UserControl;\n            if (userControl != null)\n            {\n                // If using a UserControl, the states will be specified on the\n                // root of the content instead of the root of the template.\n                return userControl.Content as FrameworkElement;\n            }\n            else\n            {\n                // If using a Window, the states will be specified on the\n                // root of the content instead of the root of the template.\n                Window win = control as Window;\n                if (win != null)\n                {\n                    return win.Content as FrameworkElement;\n                }\n                else if (VisualTreeHelper.GetChildrenCount(control) > 0)\n                {\n                    return VisualTreeHelper.GetChild(control, 0) as FrameworkElement;\n                }\n            }\n \n            return null;\n        }\n \n        private static Control GetTemplatedParent(FrameworkElement element)\n        {\n            // If the element has a templated parent, then return that.\n            DependencyObject templatedParent = element.TemplatedParent;\n            if (templatedParent != null)\n            {\n                return templatedParent as Control;\n            }\n \n            // If the element is the root of a UserControl, then it\n            // will not have a templated parent. It's Parent property\n            // should instead be used.\n            UserControl userControl = element.Parent as UserControl;\n            if (userControl != null)\n            {\n                return userControl;\n            }\n \n            // If the element is the root of a Window, then it\n            // will not have a templated parent. It's Parent property\n            // should instead be used.\n            Window window = element.Parent as Window;\n            if (window != null)\n            {\n                return window;\n            }\n            // No parent was found.\n            return null;\n        }",
    "LastUpdatedDate": "2013-02-21T18:40:45.08-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2010-02-17T08:02:44.607-08:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "VisualStateManager cannot be used on a Window",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 11822
  },
  "FileAttachments": [],
  "Comments": []
}