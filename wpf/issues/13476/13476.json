{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "Set up a window with a TextBox, AutoCompleteBox and non-focusable button which calls a function that moves focus to AutoCompleteBox. Doesn't work.",
    "LastUpdatedDate": "2013-12-16T00:00:33.037-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2010-06-07T18:18:48.73-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Impossible to focus AutoCompleteBox programmatically",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 13,
    "Id": 13476
  },
  "FileAttachments": [
    {
      "FileId": 4546,
      "FileName": "Autocomplete focus setting by code.png",
      "DownloadUrl": ".\\4546"
    },
    {
      "FileId": 4547,
      "FileName": "Autocomplete focus setting by code.png",
      "DownloadUrl": ".\\4547"
    }
  ],
  "Comments": [
    {
      "Message": "Hello!\r\nThat's really a big problem for us, too!\r\nI created the following extension method to set the focus for a WPF UIElement:\r\n\r\n    public static void DelayedFocus(this UIElement uiElement) {\r\n      uiElement.Dispatcher.BeginInvoke(\r\n      new Action(delegate {\r\n        uiElement.Focusable = true;\r\n        uiElement.Focus();\r\n        Keyboard.Focus(uiElement);\r\n      }),\r\n      DispatcherPriority.Render);\r\n    }\r\n\r\nIt's usage is simple:\r\n\r\n      myAutocompletebox.DelayedFocus();\r\n\r\nIt works pefect with any WPF Controls, but the AutoCompleteBox\r\nseems to set the focus to something like it border - please see the\r\nattached screenshot.\r\n\r\n\r\nPlease help - I try to find the problem since 4 days and I still don't unterstand the problem...\r\n\r\nThanks a lot in advance, kind regards, \r\nThomas",
      "PostedDate": "2010-06-08T05:51:21.47-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-06-08T05:51:22.623-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Hello!\r\nThat's really a big problem for us, too!\r\nI created the following extension method to set the focus for a WPF UIElement:\r\n\r\n    public static void DelayedFocus(this UIElement uiElement) {\r\n      uiElement.Dispatcher.BeginInvoke(\r\n      new Action(delegate {\r\n        uiElement.Focusable = true;\r\n        uiElement.Focus();\r\n        Keyboard.Focus(uiElement);\r\n      }),\r\n      DispatcherPriority.Render);\r\n    }\r\n\r\nIt's usage is simple:\r\n\r\n      myAutocompletebox.DelayedFocus();\r\n\r\nIt works pefect with any WPF Controls, but the AutoCompleteBox\r\nseems to set the focus to something like it border - please see the\r\nattached screenshot.\r\n\r\n\r\nPlease help - I try to find the problem since 4 days and I still don't unterstand the problem...\r\n\r\nThanks a lot in advance, kind regards, \r\nThomas",
      "PostedDate": "2010-06-08T05:51:23.213-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-06-08T05:52:29.59-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Hello again\r\n\r\n(Sorry for the double comment, codeplex did not stopped adding comment for a long time and so I pressed \"Add Comment\" again)\r\n\r\nI have a *****hack***** to solve this focus problem:\r\n\r\nin:\r\nWPF Toolkit\\February 2010 Release\\Source\\Input\\AutoCompleteBox\\System\\Windows\\Controls\\AutoCompleteBox.cs\r\nI changed OnGotFocus() [see code-comment]:\r\n\r\n    /// <summary>\r\n    /// Provides handling for the\r\n    /// <see cref=\"E:System.Windows.UIElement.GotFocus\" /> event.\r\n    /// </summary>\r\n    /// <param name=\"e\">A <see cref=\"T:System.Windows.RoutedEventArgs\" />\r\n    /// that contains the event data.</param>\r\n    protected override void OnGotFocus(RoutedEventArgs e) {\r\n      base.OnGotFocus(e);\r\n      FocusChanged(HasFocus());\r\n      TextBox.Focus(); // this line is new: force focus to the TextBox\r\n    }\r\n\r\nI have no idea if this hack has side effects - it works in my app.\r\n\r\nKind regards, Thomas\r\n",
      "PostedDate": "2010-06-08T06:18:56.203-07:00",
      "Id": -2147483648
    },
    {
      "Message": "I think the problem is that in the AutoCompleteBox's template, the actual edit is enclosed within an element that is focusable itself, so it kind of \"intercepts\" the focus. So either template has to be changed or do like we did - our custom focusing procedure is not only delayed, but also is traversing the children looking for the element that can be focused.",
      "PostedDate": "2010-06-08T07:59:20.667-07:00",
      "Id": -2147483648
    },
    {
      "Message": "You're probably right, saldoukhov, that there is an focusable element... but I was not able to find it.\r\nI assume that Source\\Input\\Themes\\Generic.xaml defines the template and there I have the follwing part:\r\n\r\n    <!--  input:AutoCompleteBox  -->\r\n    <Style TargetType=\"input:AutoCompleteBox\">\r\n    ...\r\n        <Setter Property=\"Template\">\r\n            <Setter.Value>\r\n                <ControlTemplate TargetType=\"input:AutoCompleteBox\">\r\n                    <Grid Opacity=\"{TemplateBinding Opacity}\" Focusable=\"False\">\r\n                        <TextBox ... />\r\n                        <Border ...\r\n\r\nI suspected the Border element, but I think I am wrong.\r\nDo you know which control takes the focus?\r\n\r\nKind regards, Thomas",
      "PostedDate": "2010-06-11T07:37:54.65-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-06-17T08:33:20.71-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-06-17T09:44:50.37-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-06-17T09:49:16.57-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-07-23T11:59:12.593-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Hi\r\n\r\nWe have this problem too and i think that why there isn't any answer for this?\r\n\r\nThanks\r\n",
      "PostedDate": "2010-08-28T04:26:22.357-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Hi\r\n\r\ni found a good way to sovle this problem (Temporary) \r\n\r\nvar textBox = autoCompleteBox.Template.FindName(\"Text\", aCommands) as TextBox;\r\nif (textBox != null) \r\n     textBox.Focus();\r\n\r\nEnjoy it.\r\n\r\n\r\n",
      "PostedDate": "2010-08-28T04:37:12.67-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-09-29T13:38:43.487-07:00",
      "Id": -2147483648
    },
    {
      "Message": "I have exactly the issue shown in the attached screen shots. I try setting the focus in XAML with the following code:\r\n\r\n<UserControl x:Class=\"SetACL_Studio.Views.EnterComputerNameView\"\r\n             xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n\t\t\t\t xmlns:local=\"clr-namespace:SetACL_Studio\"\r\n\t\t\t\t xmlns:strings=\"clr-namespace:SetACL_Studio.Resources\"\r\n\t\t\t\t xmlns:wpftoolkit=\"clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit\"\r\n\t\t\t\t FocusManager.FocusedElement=\"{Binding ElementName=Path}\">\r\n\r\n\t<Grid>\r\n\t\t\t<wpftoolkit:AutoCompleteBox\r\n\t\t\t\t\t\tx:Name=\"Path\"\r\n\t\t\t\t\t\tMargin=\"20 5 20 20\"\r\n\t\t\t\t\t\tMinWidth=\"200\"\r\n\t\t\t\t\t\tText=\"{Binding ComputerName, Mode=TwoWay}\" />\r\n\t</Grid>\r\n</UserControl>\r\n",
      "PostedDate": "2010-09-29T13:41:08.99-07:00",
      "Id": -2147483648
    },
    {
      "Message": "I have modified ara_prg's workaround for my use case by setting the focus correctly in a GotFocus event handler:\r\n\r\nprivate void Path_GotFocus(object sender, RoutedEventArgs e)\r\n{\r\n   AutoCompleteBox autoBox = sender as AutoCompleteBox;\r\n   if (autoBox == null)\r\n      return;\r\n\r\n   TextBox textBox = autoBox.Template.FindName(\"Text\", autoBox) as TextBox;\r\n   if (textBox != null)\r\n      textBox.Focus();\r\n}\r\n",
      "PostedDate": "2010-09-29T13:59:31.267-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-10-12T11:11:53.36-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2011-01-07T09:52:54.853-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2011-01-10T23:45:13.497-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Here is a simple workaround I've done:\r\n\r\n    <input:AutoCompleteBox Text=\"asdfasdfasdf\">\r\n      <input:AutoCompleteBox.TextBoxStyle>\r\n        <Style TargetType=\"TextBox\">\r\n          <Setter Property=\"FocusManager.FocusedElement\" Value=\"{Binding RelativeSource={RelativeSource Self}}\"/>\r\n        </Style>\r\n      </input:AutoCompleteBox.TextBoxStyle>\r\n    </input:AutoCompleteBox>\r\n\r\n\r\n",
      "PostedDate": "2011-01-10T23:45:44.617-08:00",
      "Id": -2147483648
    },
    {
      "Message": "    <input:AutoCompleteBox Text=\"asdfasdfasdf\">\r\n      <input:AutoCompleteBox.TextBoxStyle>\r\n        <Style TargetType=\"TextBox\">\r\n          <Setter Property=\"FocusManager.FocusedElement\" Value=\"{Binding RelativeSource={RelativeSource Self}}\"/>\r\n        </Style>\r\n      </input:AutoCompleteBox.TextBoxStyle>\r\n    </input:AutoCompleteBox>\r\n",
      "PostedDate": "2011-01-10T23:46:13.837-08:00",
      "Id": -2147483648
    },
    {
      "Message": "<input:AutoCompleteBox>\r\n  <input:AutoCompleteBox.TextBoxStyle>\r\n    <Style TargetType=\"TextBox\">\r\n      <Setter Property=\"FocusManager.FocusedElement\" Value=\"{Binding RelativeSource={RelativeSource Self}}\" />\r\n    </Style>\r\n  </input:AutoCompleteBox.TextBoxStyle>\r\n</input:AutoCompleteBox>",
      "PostedDate": "2011-01-13T22:29:22.953-08:00",
      "Id": -2147483648
    },
    {
      "Message": "<input:AutoCompleteBox>\r\n  <input:AutoCompleteBox.TextBoxStyle>\r\n    <Style TargetType=\"TextBox\">\r\n      <Setter Property=\"FocusManager.FocusedElement\" Value=\"{Binding RelativeSource={RelativeSource Self}}\" />\r\n    </Style>\r\n  </input:AutoCompleteBox.TextBoxStyle>\r\n</input:AutoCompleteBox>",
      "PostedDate": "2011-01-13T22:29:56.433-08:00",
      "Id": -2147483648
    },
    {
      "Message": "@weitzhandler:\r\n\r\n1) Do not post the same content multiple times.\r\n2) Your approach has the problem of showing a dotted focused line around the TextBox.",
      "PostedDate": "2011-01-14T01:10:22.15-08:00",
      "Id": -2147483648
    },
    {
      "Message": "@helgeklein:\r\n1) Sorry for posting it several times, that happened accidentally, I regret that I can't delete the duplicates\r\n2) I tested what I posted and it works as expected; no dashed border, just focuses properly\r\n",
      "PostedDate": "2011-01-17T23:28:47.333-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2012-06-29T08:54:10.537-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2012-08-01T08:30:13.703-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:40:30.683-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-12-16T00:00:33.037-08:00",
      "Id": -2147483648
    }
  ]
}