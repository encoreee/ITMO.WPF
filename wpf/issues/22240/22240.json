{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "I am writing a desktop application using WPF and the MVVM pattern with C#. I have a list of charts I need to have the user look through. I basically created a list of chart ViewModel objects, and an integer index that refers to the one being viewed. There are two commands, increment and decrement, which change the index, and I put the following code overriding the OnPropertyCanged event.\n\n            protected override void OnPropertyChanged(string propertyName)\n            {\n                base.OnPropertyChanged(propertyName);\n                switch (propertyName)\n                {\n                    case \"LoadPointIndex\":\n                        if (this.ResultsList.Any())\n                        {\n                            this.SelectedChart = this.Charts[this.LoadPointIndex];\n                            this.DecrementCommand.RaiseCanExecuteChanged();\n                            this.IncrementCommand.RaiseCanExecuteChanged();\n                        }\n                        break;\n                }\n            }\n\nThen I simply have the following code in my view\n\n    <view:Chart DataContext=\"{Binding SelectedeChart}\" />\n\nEach chart had an ObservableCollection of KeyValuePairs to bind to and it almost works fine. The problem is, sometimes when I increment or decrement from one view to the other a point \"sticks\". It is obviously left over from the other chart, I have checked the chart objects and they do not have this extra point on them, and usually if I try going to a different chart and coming back, the point disappears (but not always). \n\nI tried putting all of the ChartViewModels in an ObservableCollection, and binding a TabControl's ItemSource to the list, creating a tab for each chart... But I see exactly the same behavior! It is intermittent, but frequent.",
    "LastUpdatedDate": "2016-04-14T06:45:09.653-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "wpf",
    "ReportedDate": "2016-04-13T10:23:22.823-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "WPF Toolkit Chart not clearing all points when context is changed.",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 22240
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "What is the status of this? Is anyone working on it?",
      "PostedDate": "2016-04-14T06:45:09.653-07:00",
      "Id": -2147483648
    }
  ]
}