{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "Dear all\n \nI am using the datagrid from the toolkit. I am freezing the first three columns of the datagrid by setting the following:  FrozenColumnCount=\"3\". It's working fine, but I have three group headers, which do not get frozen while scrolling. Is there any way to freeze them too?\n \nThank you\n \nAngelo",
    "LastUpdatedDate": "2013-02-21T18:40:55.963-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2009-10-10T13:40:09.537-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Datagrid frozen columns and group header",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 2,
    "Id": 10741
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "It's a very serious problem with my project. Seem that no one has ever had the same problem before. Please inform me if you have any solution.",
      "PostedDate": "2009-10-29T21:55:39.23-07:00",
      "Id": -2147483648
    },
    {
      "Message": "It's a very serious problem with my project. Seem that no one has ever had the same problem before. Please inform me if you have any solution.",
      "PostedDate": "2009-10-29T21:55:49.983-07:00",
      "Id": -2147483648
    },
    {
      "Message": "I have solved it. I refer on http://stackoverflow.com/questions/250788/how-to-modify-expander-button-background-only-wpf And  create new expander template.",
      "PostedDate": "2009-12-10T04:37:55.203-08:00",
      "Id": -2147483648
    },
    {
      "Message": "=================================================\r\n<UserControl x:Class=\"SampleWpfDataGrid.GridItems\"\r\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n    xmlns:WpfToolkit=\"http://schemas.microsoft.com/wpf/2008/toolkit\">\r\n    <UserControl.Resources>\r\n        <ResourceDictionary>\r\n            <ResourceDictionary.MergedDictionaries>\r\n                <ResourceDictionary Source=\"Themes\\DataGrid.Generic.xaml\"/>\r\n            </ResourceDictionary.MergedDictionaries>\r\n\r\n            <CollectionViewSource x:Key=\"items\">\r\n                <CollectionViewSource.GroupDescriptions>\r\n                    <PropertyGroupDescription PropertyName=\"Group\"/>\r\n                </CollectionViewSource.GroupDescriptions>\r\n            </CollectionViewSource>\r\n\r\n            <!-- Groups background brush -->\r\n            <SolidColorBrush x:Key=\"GroubHeaderBackgroundBrush\" Color=\"#D0D2D3\"/>\r\n\r\n            <!-- Generic brushes -->\r\n            <SolidColorBrush x:Key=\"DefaultControlForegroundBrush\" Color=\"#FF10257F\"/>\r\n\r\n            <Style x:Key=\"GroupHeaderStyle\" TargetType=\"{x:Type GroupItem}\">\r\n                <Setter Property=\"Template\">\r\n                    <Setter.Value>\r\n                        <ControlTemplate TargetType=\"{x:Type GroupItem}\">\r\n                            <Expander IsExpanded=\"True\"\r\n                                      VerticalContentAlignment=\"Center\"   \r\n                                      Style=\"{DynamicResource newExpanderStyle}\"                                                                              \r\n                                      Background=\"{StaticResource GroubHeaderBackgroundBrush}\"\r\n                                      Foreground=\"{StaticResource DefaultControlForegroundBrush}\" MouseDown=\"Expander_MouseDown\">\r\n                                <Expander.Header>\r\n                                    <TextBlock Text=\"{Binding Name.Name}\" Margin=\"1\"\r\n                                               Background=\"{StaticResource GroubHeaderBackgroundBrush}\" \r\n                                               VerticalAlignment=\"Center\" />                                            \r\n                                </Expander.Header>\r\n                                <ItemsPresenter/>\r\n                            </Expander>\r\n\r\n                        </ControlTemplate>\r\n                    </Setter.Value>\r\n                </Setter>\r\n            </Style>\r\n\r\n            <LinearGradientBrush x:Key=\"NormalBrush\" EndPoint=\"0,1\" StartPoint=\"0,0\">\r\n                <GradientStop Color=\"#EEE\" Offset=\"0.0\"/>\r\n                <GradientStop Color=\"#CCC\" Offset=\"1.0\"/>\r\n            </LinearGradientBrush>\r\n            <LinearGradientBrush x:Key=\"NormalBorderBrush\" EndPoint=\"0,1\" StartPoint=\"0,0\">\r\n                <GradientStop Color=\"#CCC\" Offset=\"0.0\"/>\r\n                <GradientStop Color=\"#444\" Offset=\"1.0\"/>\r\n            </LinearGradientBrush>\r\n            <SolidColorBrush x:Key=\"GlyphBrush\" Color=\"#444\"/>\r\n            <LinearGradientBrush x:Key=\"MouseOverBrush\" EndPoint=\"0,1\" StartPoint=\"0,0\">\r\n                <GradientStop Color=\"#FFF\" Offset=\"0.0\"/>\r\n                <GradientStop Color=\"#AAA\" Offset=\"1.0\"/>\r\n            </LinearGradientBrush>\r\n            <LinearGradientBrush x:Key=\"PressedBrush\" EndPoint=\"0,1\" StartPoint=\"0,0\">\r\n                <GradientStop Color=\"#BBB\" Offset=\"0.0\"/>\r\n                <GradientStop Color=\"#EEE\" Offset=\"0.1\"/>\r\n                <GradientStop Color=\"#EEE\" Offset=\"0.9\"/>\r\n                <GradientStop Color=\"#FFF\" Offset=\"1.0\"/>\r\n            </LinearGradientBrush>\r\n\r\n            <ControlTemplate x:Key=\"newToggleButtonControlTemplate\" TargetType=\"{x:Type ToggleButton}\">\r\n                <Grid Background=\"{DynamicResource GroubHeaderBackgroundBrush}\">\r\n                    <Ellipse\r\n                    x:Name=\"Ellipse\"                    \r\n                    Margin=\"0,0,0,0\"\r\n                    Fill=\"Transparent\"\r\n                    Stroke=\"{DynamicResource NormalBorderBrush}\"\r\n                />\r\n                    <Path\r\n                    x:Name=\"Up_Arrow\"\r\n                    HorizontalAlignment=\"Center\"\r\n                    VerticalAlignment=\"Center\"\r\n                    Fill=\"{DynamicResource GlyphBrush}\"\r\n                    Data=\"M 0 0 L 4 4 L 8 0 Z\"\r\n                />\r\n                    <Path\r\n                    x:Name=\"Down_Arrow\"\r\n                    Visibility=\"Collapsed\"\r\n                    HorizontalAlignment=\"Center\"\r\n                    VerticalAlignment=\"Center\"\r\n                    Fill=\"{DynamicResource GlyphBrush}\"\r\n                    Data=\"M 0 4 L 4 0 L 8 4 Z\"\r\n                />\r\n                </Grid>\r\n                <ControlTemplate.Triggers>\r\n                    <Trigger Property=\"IsMouseOver\" Value=\"true\">\r\n                        <Setter Property=\"Fill\" Value=\"{DynamicResource MouseOverBrush}\" TargetName=\"Ellipse\"/>\r\n                        <Setter Property=\"Stroke\" Value=\"#AAD0E5\"  TargetName=\"Ellipse\"/>\r\n                    </Trigger>\r\n                    <Trigger Property=\"IsPressed\" Value=\"true\">\r\n                        <Setter Property=\"Fill\" Value=\"{DynamicResource PressedBrush}\" TargetName=\"Ellipse\"/>\r\n                        <Setter Property=\"Stroke\" Value=\"#AAD0E5\"  TargetName=\"Ellipse\"/>\r\n                    </Trigger>\r\n                    <Trigger Property=\"IsChecked\" Value=\"true\">\r\n                        <Setter Property=\"Visibility\" Value=\"Visible\" TargetName=\"Down_Arrow\"/>\r\n                        <Setter Property=\"Visibility\" Value=\"Collapsed\" TargetName=\"Up_Arrow\"/>\r\n                    </Trigger>\r\n                </ControlTemplate.Triggers>\r\n            </ControlTemplate>\r\n\r\n            <Style x:Key=\"newExpanderStyle\" TargetType=\"{x:Type Expander}\">\r\n                <Setter Property=\"Template\">\r\n                    <Setter.Value>\r\n                        <ControlTemplate TargetType=\"{x:Type Expander}\">\r\n                            <Grid>\r\n                                <Grid.RowDefinitions>\r\n                                    <RowDefinition Height=\"Auto\" />\r\n                                    <RowDefinition Height=\"*\" x:Name=\"ContentRow\"/>\r\n                                </Grid.RowDefinitions>\r\n                                <Border\r\n                                x:Name=\"Border\" Loaded=\"Border_Loaded\"\r\n                                Grid.Row=\"0\"\r\n                                Background=\"{StaticResource GroubHeaderBackgroundBrush}\"\r\n                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n                                CornerRadius=\"2,2,0,0\">\r\n                                    <Grid>\r\n                                        <Grid.ColumnDefinitions>\r\n                                            <ColumnDefinition Width=\"25\"/>\r\n                                            <ColumnDefinition Width=\"*\"/>\r\n                                        </Grid.ColumnDefinitions>\r\n                                        <ToggleButton\r\n                                        Template=\"{DynamicResource newToggleButtonControlTemplate}\"\r\n                                        Background=\"{TemplateBinding Background}\"\r\n                                        IsChecked=\"{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}\"\r\n                                       />\r\n                                        <ContentPresenter Grid.Column=\"1\" Margin=\"0\" \r\n                                                          Height=\"25\"\r\n                                                          RecognizesAccessKey=\"True\"                                                        \r\n                                                          ContentSource=\"Header\"                                                           \r\n                                                          />\r\n                                    </Grid>\r\n                                </Border>\r\n                                <Border\r\n                                        x:Name=\"ExpandSite\"\r\n                                        Grid.Row=\"1\"\r\n                                        Visibility=\"Collapsed\"\r\n                                        BorderThickness=\"1,0,1,1\"\r\n                                        CornerRadius=\"0,0,2,2\">\r\n                                    <ContentPresenter/>\r\n                                </Border>\r\n                            </Grid>\r\n                            <ControlTemplate.Triggers>\r\n                                <Trigger Property=\"IsExpanded\" Value=\"True\">\r\n                                    <Setter Property=\"Visibility\" Value=\"Visible\" TargetName=\"ExpandSite\"/>\r\n                                </Trigger>\r\n                                <Trigger Property=\"IsExpanded\" Value=\"False\">\r\n                                    <Setter Property=\"Visibility\" Value=\"Collapsed\" TargetName=\"ExpandSite\"/>\r\n                                </Trigger>\r\n                            </ControlTemplate.Triggers>\r\n                        </ControlTemplate>\r\n                    </Setter.Value>\r\n                </Setter>\r\n            </Style>\r\n\r\n        </ResourceDictionary>\r\n    </UserControl.Resources>\r\n\r\n    <WpfToolkit:DataGrid\r\n        ItemsSource=\"{Binding Source={StaticResource items}}\"\r\n        Grid.Row=\"1\" \r\n        FontFamily=\"Verdana\" FontSize=\"11\"\r\n        FrozenColumnCount =\"3\"\r\n        Margin=\"1\"\r\n        RowHeaderWidth = \"1\"                    \r\n        AutoGenerateColumns=\"False\"                     \r\n        CanUserAddRows=\"False\" \r\n        CanUserReorderColumns=\"False\" \r\n                     CanUserResizeColumns=\"False\" \r\n                    CanUserResizeRows=\"False\" \r\n                    CanUserSortColumns=\"False\" \r\n                    IsReadOnly=\"True\" \r\n                    SelectionMode=\"Single\"\r\n                    VerticalGridLinesBrush=\"Gray\"\r\n                    HorizontalGridLinesBrush=\"Gray\"\r\n                    IsTextSearchEnabled=\"True\" \r\n                    RowHeight=\"30\"\r\n                    SelectionUnit=\"Cell\"\r\n                    ClipToBounds=\"True\"\r\n                    Name=\"abc\" HorizontalAlignment=\"Left\" \r\n                    ScrollViewer.ScrollChanged=\"abc_ScrollChanged\"                 \r\n       >\r\n\r\n        <WpfToolkit:DataGrid.GroupStyle>\r\n            <GroupStyle ContainerStyle=\"{StaticResource GroupHeaderStyle}\">\r\n                <GroupStyle.HeaderTemplate>\r\n                    <DataTemplate>\r\n\r\n                    </DataTemplate>\r\n                </GroupStyle.HeaderTemplate>\r\n                <GroupStyle.Panel>\r\n                    <ItemsPanelTemplate>\r\n                        <WpfToolkit:DataGridRowsPresenter></WpfToolkit:DataGridRowsPresenter>\r\n                    </ItemsPanelTemplate>\r\n                </GroupStyle.Panel>\r\n            </GroupStyle>\r\n        </WpfToolkit:DataGrid.GroupStyle>\r\n\r\n        <WpfToolkit:DataGrid.Columns>\r\n            <WpfToolkit:DataGridTextColumn\r\n                Header=\"Name\" Width=\"100\"                \r\n\t            Binding=\"{Binding Path=Name}\"\r\n                 />\r\n        </WpfToolkit:DataGrid.Columns>\r\n\r\n    </WpfToolkit:DataGrid>\r\n\r\n</UserControl>\r\n===========================================================\r\n\r\npublic GridItems()\r\n\t\t{\r\n\t\t\tInitializeComponent();\r\n\r\n\t\t\tSetupData();\r\n\t\t}\r\n\r\n\t\tprivate void SetupData()\r\n\t\t{\r\n\t\t\tvar items = new ObservableCollection<ItemBase>();\r\n\r\n\t\t\tvar selfCare = new ItemBase(null, \"Self Care\");\r\n\t\t\titems.Add(new ItemBase(selfCare, \"1\"));\r\n\t\t\titems.Add(new ItemBase(selfCare, \"2\"));\r\n\t\t\titems.Add(new ItemBase(selfCare, \"3\"));\r\n\t\t\titems.Add(new ItemBase(selfCare, \"4\"));\r\n\r\n\t\t\tvar xyz = new ItemBase(null, \"zyz\");\r\n\t\t\titems.Add(new ItemBase(xyz, \"1\"));\r\n\t\t\titems.Add(new ItemBase(xyz, \"2\"));\r\n\t\t\titems.Add(new ItemBase(xyz, \"3\"));\r\n\t\t\titems.Add(new ItemBase(xyz, \"4\"));\r\n\r\n\t\t\tvar dataProvider = (CollectionViewSource)FindResource(\"items\");\r\n\t\t\tdataProvider.Source = items;\r\n\r\n\t\t\tLabelTextBoxColumn item;\r\n\t\t\tfor (int i = 0; i < 10; i++)\r\n\t\t\t{\r\n\t\t\t\titem = new LabelTextBoxColumn();\r\n\t\t\t\titem.Width = 100;\r\n\t\t\t\titem.Header = i.ToString();\r\n\t\t\t\tabc.Columns.Add(item);\r\n\t\t\t}\r\n\t\t\tabc.FrozenColumnCount = 3;\r\n\r\n\t\t}\r\n\r\nprivate void Expander_MouseDown(object sender, System.Windows.Input.MouseButtonEventArgs e)\r\n\t\t{\r\n\t\t\tExpander expander = sender as Expander;\r\n\t\t\tif (expander.IsExpanded)\r\n\t\t\t{\r\n\t\t\t\texpander.IsExpanded = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\texpander.IsExpanded = true;\r\n\t\t\t}\r\n\t\t}\t\t\r\n\r\nprivate Collection<Border> Borders = new Collection<Border>();\r\n\t\tprivate void Border_Loaded(object sender, RoutedEventArgs e)\r\n\t\t{\r\n\t\t\tBorder Border = sender as Border;\r\n\t\t\tif (!Borders.Contains(Border))\r\n\t\t\t{\r\n\t\t\t\tBorders.Add(Border);\r\n\t\t\t}\r\n\t\t}\r\nprivate void abc_ScrollChanged(object sender, ScrollChangedEventArgs e)\r\n\t\t{\t\t\t\r\n\t\t\tif (e.HorizontalChange != 0)\r\n\t\t\t{\r\n\t\t\t\tdouble value;\r\n\t\t\t\tThickness thickness;\r\n\r\n\t\t\t\tforeach (Border border in Borders)\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue = e.HorizontalChange + border.Margin.Left;\r\n\t\t\t\t\tthickness = new Thickness(value, border.Margin.Top, border.Margin.Right, border.Margin.Bottom);\r\n\t\t\t\t\tborder.Margin = thickness;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n",
      "PostedDate": "2009-12-10T05:51:30.083-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-09-24T01:47:40.617-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:40:55.963-08:00",
      "Id": -2147483648
    }
  ]
}