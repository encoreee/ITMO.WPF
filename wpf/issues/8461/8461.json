{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2009-02-18T11:19:21.927-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Any plan on doing a refactoring the get the ribbon more friendly to use under expression blend. I was not expecting to have the developer to fill out all the field found into the RibbonCommands (Text and images). I was more expecting to have the designer or the technical writer filling those informations (Text and images) using their respective application. Perhaps when doing so we lose the wysiwyg exrerince using rad tools like Blend or the localisation tools.",
    "LastUpdatedDate": "2013-05-16T05:31:14.393-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2008-12-08T13:26:40.237-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "RibbonCommands - ExpressionBlend",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 8461
  },
  "FileAttachments": [
    {
      "FileId": 2428,
      "FileName": "RibbonIssues.zip",
      "DownloadUrl": ".\\2428"
    }
  ],
  "Comments": [
    {
      "Message": "Hi, the CTP version of Ribbon does not include any design time work, so it may not function very well in Expression Blend or the Visual Studio Designer (Cider) at this time.  However, we do plan to have minimal design time support for V1 and are looking into adding a more full-featured design time experience in a future release.  Thank you!",
      "PostedDate": "2008-12-08T14:49:59.58-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Well under Expression Blend the only design time experience available is the ability to add some custom editor inside the property grid.\r\n \r\nSo my point was more related to the fact that the current architecture does not really encourage good design practice under expression blend. The commanding system inside the ribbon does not allow the designer to work in blend. So far the only way to achieve that is by adding the raw XAML commanding using a Text Editor.\r\n\r\nFrom my understanding there is no way that you will be able to get a better experience without doing a refactoring on the ribbon code;\r\n \r\nUsing commanding is a pretty neat feature when you’re only having Developer around the table. But on our scenario, I’m not expecting Dev to be responsible for Text, Design, Accelerator (Static one), and Images.\r\n\r\nEX:\r\n<DataTemplate x:Key=\"TheButtonTemplate2\" DataType=\"{x:Type r:RibbonButton}\" >\r\n<r:Ribbon >\r\n\t\t<r:RibbonTab>\r\n\t\t\t<r:RibbonGroup>\r\n\t\t\t\t<r:RibbonButton>\r\n\t\t\t\t\t<r:RibbonButton.Command>\r\n            \t\t\t\t<r:RibbonCommand LabelDescription=\"Description\" LabelTitle=\"Title\" LargeImageSource…>\r\n            \t\t\t\t</r:RibbonCommand>\r\n        \t\t\t\t</r:RibbonButton.Command>\r\n\t\t\t\t</r:RibbonButton>\r\n\t\t\t</r:RibbonGroup>\r\n\t\t</r:RibbonTab>\r\n</r:Ribbon>\r\n </DataTemplate>\r\n",
      "PostedDate": "2008-12-09T06:50:20.09-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Yes, we totally understand what you're saying and have recently decided to make a fundamental design change to RibbonCommands for exactly the reasons you mention.  In V1 of the Ribbon, we're getting rid of RibbonCommand and moving all of those properties (LabelTitle, SmallImageSource, etc.) back onto the individual controls.  This will allow you to use Styles (in Blend or straight in XAML) the same way we were advocating using RibbonCommand in the Resources of your app.",
      "PostedDate": "2008-12-09T12:51:38.533-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Thanks, you make my day.",
      "PostedDate": "2008-12-11T08:41:51.493-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Maybe another quick point, it will be great if you could address the shortcut key (Ex: Ctrl-C) compatibility issue or at least leave and open door to lets developer add this feature.\r\n\r\nAs found in Microsoft Office 2007 when a shortcut is available the user is able to view the Shortcut between parenthesis when the hint of the ribbon button is displayed, this may require the ability to override some ToolTipTitle properties witch is not the case for now.\r\n\r\n",
      "PostedDate": "2008-12-11T09:03:19.26-08:00",
      "Id": -2147483648
    },
    {
      "Message": "I'm not sure where there is a compatibility issue with shortcuts in the Ribbon - could you be more specific?  Displaying the shortcut in the Tooltip is enabled through the TooltipTitle property (currently on RibbonCommand, later will be on the control).  For example, in Word 2007 the Tooltip for the Copy button is titled \"Copy (Ctrl+C)\" and has a description of \"Copy the selection and put it on the clipboard.\"  In the WPF Ribbon, you'd achieve this by setting TooltipTitle=\"Copy (Ctrl+C)\" and TooltipDescription=\"Copy the selection and put it on the clipboard.\"  You should be able to designate shortcuts the same way you would in any other WPF application.",
      "PostedDate": "2008-12-11T10:56:52.54-08:00",
      "Id": -2147483648
    },
    {
      "Message": "I was speaking from a Design/Localization/Development perspective. Depending on your keyboard mapping (regional settings) and your OS language the shortcut key may have a different naming convention.\r\nEx: CTRL-F1 may become Maj.-F1 when using a French keyboard mapping (I mean the physical label on the keyboard need to match the ui one). Even if your application is still running in english.",
      "PostedDate": "2008-12-12T12:19:42.817-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2008-12-12T12:19:44.897-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Oups, you should replace CTRL-F1 by SHIFT-F1 to be more accurate.",
      "PostedDate": "2008-12-12T12:20:58.397-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Thanks for that feedback.  We haven't finished designing the shortcut feature (KeyTips) yet, but we'll certainly take that into account.  Thanks!",
      "PostedDate": "2008-12-15T08:33:51.197-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-02-18T11:19:21.927-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:41:40.167-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:31:14.393-07:00",
      "Id": -2147483648
    }
  ]
}