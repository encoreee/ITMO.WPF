{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "DatePicker",
      "DisplayName": "DatePicker"
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "Issue where the Watermark remains visible even when there is a date aparent in the control.\nDatePicker and ListView are bound to the same ObservableCollection source (with DateTime as property).\nIssue appears when 3 steps are done.\n1. add item to collection.\n2. select first item on ListView\n3. replace first item in collection, forcing the CollectionChanged event.\nÂ \nAttached reproduces the problem.  \"Add\" button to test.  \"Clear\" to reset collection.  (reference update required).",
    "LastUpdatedDate": "2013-02-21T18:41:20.8-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2009-04-16T23:09:40.067-07:00",
    "Status": {
      "Name": "Active",
      "Id": 2
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Binding with DatePicker, Watermark doesn't dissapear",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 3,
    "Id": 9785
  },
  "FileAttachments": [
    {
      "FileId": 2978,
      "FileName": "WpfApplication7-datepickertest.zip",
      "DownloadUrl": ".\\2978"
    }
  ],
  "Comments": [
    {
      "Message": "Thank you for reporting this issue.  We believe this is a bug and have filed a bug in our internal database to track this.  As a workaround, we noticed that if the binding is set after the collection has been populated with at least one data item, then the issue does not occur.\r\n\r\nThanks!\r\nSamantha",
      "PostedDate": "2009-04-28T13:42:14.17-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-04-28T13:42:15.887-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-05-03T07:37:35.73-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Some more information about this bug: The underlying issue here is that Selector reports a change in selection when the same element is replaced in the collection. The recommendation is to implement INotifyPropertyChanged instead of replacing the same item back into the collection.",
      "PostedDate": "2009-08-10T13:22:56.923-07:00",
      "Id": -2147483648
    },
    {
      "Message": "INotifyPropertyChanged was implemented at the outset and is used in the attached code.  Changing a single property however does not reflect a user's actions where a Date may be set, and a server side (SOA) action may replace the entire object.",
      "PostedDate": "2009-08-17T16:56:05.293-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:41:20.8-08:00",
      "Id": -2147483648
    }
  ]
}