{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "We discovered that when you change the Style (and ControlTemplate) of a DatePicker whose Popup has already been opened, and then try to open the DropDown of the new Style/Template, there is an unhandled ArgumentException that crashes the application.\n \nYou can reproduce the issue using the very simple application attached. It has been stripped down to the bare essentials, to ensure that no outside conditions could cause the issue.\n \nI also include the exception information, for reference purpose:\n \nSystem.ArgumentException was unhandled\n  Message=Must disconnect specified child from current parent Visual before attaching to new parent Visual.\n  Source=PresentationCore\n  StackTrace:\n       at System.Windows.Media.Visual.AddVisualChild(Visual child)\n       at System.Windows.Documents.NonLogicalAdornerDecorator.set_Child(UIElement value)\n       at System.Windows.Controls.Primitives.Popup.CreateWindow(Boolean asyncCall)\n       at System.Windows.Controls.Primitives.Popup.OnIsOpenChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\n       at System.Windows.DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs e)\n       at System.Windows.FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs e)\n       at System.Windows.DependencyObject.NotifyPropertyChange(DependencyPropertyChangedEventArgs args)\n       at System.Windows.DependencyObject.UpdateEffectiveValue(EntryIndex entryIndex, DependencyProperty dp, PropertyMetadata metadata, EffectiveValueEntry oldEntry, EffectiveValueEntry& newEntry, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType)\n       at System.Windows.DependencyObject.SetValueCommon(DependencyProperty dp, Object value, PropertyMetadata metadata, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType, Boolean isInternal)\n       at System.Windows.DependencyObject.SetValue(DependencyProperty dp, Object value)\n       at System.Windows.Controls.DatePicker.OnIsDropDownOpenChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\n       at System.Windows.DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs e)\n       at System.Windows.FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs e)\n       at System.Windows.DependencyObject.NotifyPropertyChange(DependencyPropertyChangedEventArgs args)\n       at System.Windows.DependencyObject.UpdateEffectiveValue(EntryIndex entryIndex, DependencyProperty dp, PropertyMetadata metadata, EffectiveValueEntry oldEntry, EffectiveValueEntry& newEntry, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType)\n       at System.Windows.DependencyObject.SetValueCommon(DependencyProperty dp, Object value, PropertyMetadata metadata, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType, Boolean isInternal)\n       at System.Windows.DependencyObject.SetCurrentValueInternal(DependencyProperty dp, Object value)\n       at System.Windows.Controls.DatePicker.TogglePopUp()\n       at System.Windows.Controls.DatePicker.DropDownButton_Click(Object sender, RoutedEventArgs e)\n       at System.Windows.RoutedEventHandlerInfo.InvokeHandler(Object target, RoutedEventArgs routedEventArgs)\n       at System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\n       at System.Windows.UIElement.RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)\n       at System.Windows.UIElement.RaiseEvent(RoutedEventArgs e)\n       at System.Windows.Controls.Primitives.ButtonBase.OnClick()\n       at System.Windows.Controls.Button.OnClick()\n       at System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(MouseButtonEventArgs e)\n       at System.Windows.UIElement.OnMouseLeftButtonUpThunk(Object sender, MouseButtonEventArgs e)\n       at System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)\n       at System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)\n       at System.Windows.RoutedEventHandlerInfo.InvokeHandler(Object target, RoutedEventArgs routedEventArgs)\n       at System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\n       at System.Windows.UIElement.ReRaiseEventAs(DependencyObject sender, RoutedEventArgs args, RoutedEvent newEvent)\n       at System.Windows.UIElement.OnMouseUpThunk(Object sender, MouseButtonEventArgs e)\n       at System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)\n       at System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)\n       at System.Windows.RoutedEventHandlerInfo.InvokeHandler(Object target, RoutedEventArgs routedEventArgs)\n       at System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\n       at System.Windows.UIElement.RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)\n       at System.Windows.UIElement.RaiseEvent(RoutedEventArgs args, Boolean trusted)\n       at System.Windows.Input.InputManager.ProcessStagingArea()\n       at System.Windows.Input.InputManager.ProcessInput(InputEventArgs input)\n       at System.Windows.Input.InputProviderSite.ReportInput(InputReport inputReport)\n       at System.Windows.Interop.HwndMouseInputProvider.ReportInput(IntPtr hwnd, InputMode mode, Int32 timestamp, RawMouseActions actions, Int32 x, Int32 y, Int32 wheel)\n       at System.Windows.Interop.HwndMouseInputProvider.FilterMessage(IntPtr hwnd, WindowMessage msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\n       at System.Windows.Interop.HwndSource.InputFilterMessage(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\n       at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\n       at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\n       at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\n       at MS.Internal.Threading.ExceptionFilterHelper.TryCatchWhen(Object source, Delegate method, Object args, Int32 numArgs, Delegate catchHandler)\n       at System.Windows.Threading.Dispatcher.InvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\n       at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\n       at MS.Win32.UnsafeNativeMethods.DispatchMessage(MSG& msg)\n       at System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)\n       at System.Windows.Threading.Dispatcher.PushFrame(DispatcherFrame frame)\n       at System.Windows.Threading.Dispatcher.Run()\n       at System.Windows.Application.RunDispatcher(Object ignore)\n       at System.Windows.Application.RunInternal(Window window)\n       at System.Windows.Application.Run(Window window)\n       at System.Windows.Application.Run()\n       at DatePickerThemeChange.App.Main() in D:\\Download\\DatePickerThemeChange(1)\\DatePickerThemeChange\\obj\\x86\\Debug\\App.g.cs:line 0\n       at System.AppDomain._nExecuteAssembly(RuntimeAssembly assembly, String[] args)\n       at System.AppDomain.ExecuteAssembly(String assemblyFile, Evidence assemblySecurity, String[] args)\n       at Microsoft.VisualStudio.HostingProcess.HostProc.RunUsersAssembly()\n       at System.Threading.ThreadHelper.ThreadStart_Context(Object state)\n       at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean ignoreSyncCtx)\n       at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\n       at System.Threading.ThreadHelper.ThreadStart()\n  InnerException:",
    "LastUpdatedDate": "2016-11-26T02:57:39.907-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2010-01-25T06:42:24.58-08:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "DatePicker: Crash when changing ControlTemplate",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 4,
    "Id": 11617
  },
  "FileAttachments": [
    {
      "FileId": 3761,
      "FileName": "DatePickerThemeChange.zip",
      "DownloadUrl": ".\\3761"
    }
  ],
  "Comments": [
    {
      "Message": "I am seeing this issue as well. Has anyone found a work around for this issue?",
      "PostedDate": "2011-12-06T07:14:19.737-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:40:45.94-08:00",
      "Id": -2147483648
    },
    {
      "Message": "When the DatePicker Popup opens the second time, WPF add the Calendar to the Popup - yet the Calendar has already been added... This is what causes the crash.\nA dirty workaround would be to add the following code to the OnApplyTemplate method:\n```\npublic override void OnApplyTemplate()\n        {\n           base.OnApplyTemplate();\nvar _popup = Template.FindName(\"PART_Popup\", this) as System.Windows.Controls.Primitives.Popup;\n            if (_popup != null)\n            {\n                var adorner = _popup.Child.FindVisualParent<System.Windows.Documents.AdornerDecorator>();\n                if (adorner != null)\n                {\n                    adorner.Child = null;\n                }\n            }\n}\n```",
      "PostedDate": "2014-10-29T03:30:52.72-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2016-11-26T01:27:56.433-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Thanks to bidy, and I improve and __fix__ his workaround. You can add EventSetter for Unload event to your Style.\r\n\r\n```C#\n        private void DatePickerUnloaded(object sender, RoutedEventArgs e)\n        {\n            DependencyObject child = ((Popup)((DatePicker)sender).Template.FindName(\"PART_Popup\", (FrameworkElement)sender))?.Child;\n            while (child != null && !(child is AdornerDecorator))\n                child = VisualTreeHelper.GetParent(child) ?? LogicalTreeHelper.GetParent(child);\n            if (((AdornerDecorator)child)?.Child is Calendar) ((AdornerDecorator)child).Child = null;\r\n\r\n        }\n```\nI implement it in my BrightSharp.WPF theme library.",
      "PostedDate": "2016-11-26T02:57:39.907-08:00",
      "Id": -2147483648
    }
  ]
}