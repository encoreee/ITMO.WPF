{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "DataGrid",
      "DisplayName": "DataGrid"
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "I want a sortable, read-only view of my data with no ability to add or remove rows.  To accomplish this I used the following (real app has more columns):\n \n<dg:DataGrid ItemsSource=\"{Binding Path=Users}\" AutoGenerateColumns=\"False\" CanUserAddRows=\"False\" CanUserDeleteRows=\"False\" >\n  <dg:DataGrid.Columns>\n    <dg:DataGridTemplateColumn Header=\"User Name\" SortMemberPath=\"UserName\" >\n      <dg:DataGridTemplateColumn.CellTemplate>\n        <DataTemplate>\n          <TextBlock Text=\"{Binding Path=UserName}\" />\n        </DataTemplate>\n      </dg:DataGridTemplateColumn.CellTemplate>\n    </dg:DataGridTemplateColumn>\n  </dg:DataGrid.Columns>\n</dg:DataGrid>\n \nThe problem is that the DataGrid does not respect the CanUserAddRows and CanUserDeleteRows properties and includes an extra row in the resulting DataGrid.  This extra row is always editable.  When the user edits one of the cells in the extra row, the DataGrid attempts to add another item to the collection.  Since I have set CanUserAddRows=\"False\" this violates an assertion (see attached image).  If I attempt to continue past the assertion, a null reference exception is thrown (see below), likely because I am now trying to edit an item that doesn't exist.  This extra row should not appear when CanUserAddRows is set to false.  The DataGrid is pretty much unusable until this is fixed :(\n \nException detail:\nSystem.NullReferenceException was unhandled by user code\n  Message=\"Object reference not set to an instance of an object.\"\n  Source=\"WPFToolkit\"\n  StackTrace:\n       at Microsoft.Windows.Controls.DataGrid.OnExecutedBeginEdit(ExecutedRoutedEventArgs e) in C:\\Source\\Azaleos\\ThirdPartyAssemblies\\DataGrid_CTP\\Toolkit-release\\DataGrid\\Microsoft\\Windows\\Controls\\DataGrid.cs:line 1575\n       at Microsoft.Windows.Controls.DataGrid.OnExecutedBeginEdit(Object sender, ExecutedRoutedEventArgs e) in C:\\Source\\Azaleos\\ThirdPartyAssemblies\\DataGrid_CTP\\Toolkit-release\\DataGrid\\Microsoft\\Windows\\Controls\\DataGrid.cs:line 1492\n       at System.Windows.Input.CommandBinding.OnExecuted(Object sender, ExecutedRoutedEventArgs e)\n       at System.Windows.Input.CommandManager.ExecuteCommandBinding(Object sender, ExecutedRoutedEventArgs e, CommandBinding commandBinding)\n       at System.Windows.Input.CommandManager.FindCommandBinding(CommandBindingCollection commandBindings, Object sender, RoutedEventArgs e, ICommand command, Boolean execute)\n       at System.Windows.Input.CommandManager.FindCommandBinding(Object sender, RoutedEventArgs e, ICommand command, Boolean execute)\n       at System.Windows.Input.CommandManager.OnExecuted(Object sender, ExecutedRoutedEventArgs e)\n       at System.Windows.UIElement.OnExecutedThunk(Object sender, ExecutedRoutedEventArgs e)\n       at System.Windows.Input.ExecutedRoutedEventArgs.InvokeEventHandler(Delegate genericHandler, Object target)\n       at System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)\n       at System.Windows.RoutedEventHandlerInfo.InvokeHandler(Object target, RoutedEventArgs routedEventArgs)\n       at System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\n       at System.Windows.UIElement.RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)\n       at System.Windows.UIElement.RaiseEvent(RoutedEventArgs args, Boolean trusted)\n       at System.Windows.Input.RoutedCommand.ExecuteImpl(Object parameter, IInputElement target, Boolean userInitiated)\n       at System.Windows.Input.RoutedCommand.Execute(Object parameter, IInputElement target)\n       at Microsoft.Windows.Controls.DataGrid.BeginEdit(RoutedEventArgs editingEventArgs) in C:\\Source\\Azaleos\\ThirdPartyAssemblies\\DataGrid_CTP\\Toolkit-release\\DataGrid\\Microsoft\\Windows\\Controls\\DataGrid.cs:line 2336\n       at Microsoft.Windows.Controls.DataGridCell.OnAnyMouseLeftButtonDown(MouseButtonEventArgs e) in C:\\Source\\Azaleos\\ThirdPartyAssemblies\\DataGrid_CTP\\Toolkit-release\\DataGrid\\Microsoft\\Windows\\Controls\\DataGridCell.cs:line 658\n       at Microsoft.Windows.Controls.DataGridCell.OnAnyMouseLeftButtonDownThunk(Object sender, MouseButtonEventArgs e) in C:\\Source\\Azaleos\\ThirdPartyAssemblies\\DataGrid_CTP\\Toolkit-release\\DataGrid\\Microsoft\\Windows\\Controls\\DataGridCell.cs:line 636\n       at System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)\n       at System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)\n       at System.Windows.RoutedEventHandlerInfo.InvokeHandler(Object target, RoutedEventArgs routedEventArgs)\n       at System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\n       at System.Windows.UIElement.ReRaiseEventAs(DependencyObject sender, RoutedEventArgs args, RoutedEvent newEvent)\n       at System.Windows.UIElement.CrackMouseButtonEventAndReRaiseEvent(DependencyObject sender, MouseButtonEventArgs e)\n       at System.Windows.UIElement.OnMouseDownThunk(Object sender, MouseButtonEventArgs e)\n       at System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)\n       at System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)\n       at System.Windows.RoutedEventHandlerInfo.InvokeHandler(Object target, RoutedEventArgs routedEventArgs)\n       at System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\n       at System.Windows.UIElement.RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)\n       at System.Windows.UIElement.RaiseEvent(RoutedEventArgs args, Boolean trusted)\n       at System.Windows.Input.InputManager.ProcessStagingArea()\n       at System.Windows.Input.InputManager.ProcessInput(InputEventArgs input)\n       at System.Windows.Input.InputProviderSite.ReportInput(InputReport inputReport)\n       at System.Windows.Interop.HwndMouseInputProvider.ReportInput(IntPtr hwnd, InputMode mode, Int32 timestamp, RawMouseActions actions, Int32 x, Int32 y, Int32 wheel)\n       at System.Windows.Interop.HwndMouseInputProvider.FilterMessage(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\n       at System.Windows.Interop.HwndSource.InputFilterMessage(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\n       at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\n       at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\n       at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Boolean isSingleParameter)\n       at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Boolean isSingleParameter, Delegate catchHandler)\n       at System.Windows.Threading.Dispatcher.WrappedInvoke(Delegate callback, Object args, Boolean isSingleParameter, Delegate catchHandler)\n       at System.Windows.Threading.Dispatcher.InvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Boolean isSingleParameter)\n       at System.Windows.Threading.Dispatcher.Invoke(DispatcherPriority priority, Delegate method, Object arg)\n       at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\n       at MS.Win32.UnsafeNativeMethods.DispatchMessage(MSG& msg)\n       at System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)\n       at System.Windows.Threading.Dispatcher.PushFrame(DispatcherFrame frame)\n       at System.Windows.Threading.Dispatcher.Run()\n       at System.Windows.Application.RunDispatcher(Object ignore)\n       at System.Windows.Application.StartDispatcherInBrowser(Object unused)\n  InnerException:",
    "LastUpdatedDate": "2013-06-14T00:35:37.293-07:00",
    "PlannedForRelease": "WPF Toolkit - October 2008 Release",
    "ReleaseVisibleToPublic": true,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2008-09-10T16:29:02.373-07:00",
    "Status": {
      "Name": "Resolved",
      "Id": 7
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "CanUserAddRows=\"False\" and CanUserDeleteRows=\"False\" are not respected and cause exceptions",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 7565
  },
  "FileAttachments": [
    {
      "FileId": 2102,
      "FileName": "assert.jpg",
      "DownloadUrl": ".\\2102"
    }
  ],
  "Comments": [
    {
      "Message": "Should have looked here first: http://www.codeplex.com/wpf/Thread/View.aspx?ThreadId=34005\r\nApparently is a known issue and will be fixed.",
      "PostedDate": "2008-09-10T16:41:13.067-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Yes, this will be fixed in v1.  Also, v1 will include a read-only feature which you can set to make the grid read-only.  Thanks!",
      "PostedDate": "2008-09-11T10:55:00.153-07:00",
      "Id": -2147483648
    },
    {
      "Message": "This was fixed in the October 2008 release.",
      "PostedDate": "2009-02-18T13:29:03.037-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-02-18T13:29:03.74-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:41:50.27-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:31:19.25-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:31:19.367-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-06-14T00:35:37.293-07:00",
      "Id": -2147483648
    }
  ]
}