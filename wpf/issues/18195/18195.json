{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "Pasting from my answer on StackOverflow [*] for a description of what looks like a bug and a proposed fix (the bug did cause commanding in my application to not work and the fix did fix it). Thank you for taking a look.\n \nIt follows from these two points:\n \n1. It is recommended that the implementers of ICommand.CanExecuteChanged hold only weak references to the handlers (see this answer).\n2. Consumers of ICommand.CanExecuteChanged should expect (1) and hence should hold strong references to the handlers they register with ICommand.CanExecuteChanged\n \nThe common implementations of RelayCommand and DelegateCommand abide by (1). The CommandReference implementation doesn't abide by (2) when it subscribes to newCommand.CanExecuteChanged. So the handler object is collected and after that CommandReference no longer gets any notifications that it was counting on.\n \nThe fix is to hold a strong ref to the handler in CommandReference:\n \n    private EventHandler _commandCanExecuteChangedHandler;\n    public event EventHandler CanExecuteChanged;\n \n    ...\n    if (oldCommand != null)\n    {\n        oldCommand.CanExecuteChanged -= commandReference._commandCanExecuteChangedHandler;\n    }\n    if (newCommand != null)\n    {\n        commandReference._commandCanExecuteChangedHandler = commandReference.Command_CanExecuteChanged;\n        newCommand.CanExecuteChanged += commandReference._commandCanExecuteChangedHandler;\n    }\n    ...\n \n    private void Command_CanExecuteChanged(object sender, EventArgs e)\n    {\n        if (CanExecuteChanged != null)\n            CanExecuteChanged(this, e);\n    }\n \n[*] http://stackoverflow.com/a/10924171/435522",
    "LastUpdatedDate": "2013-11-18T10:44:30.34-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2012-06-06T18:08:13.41-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "CommandReference does not hold strong reference to its handler for ICommand.CanExecuteChanged",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 2,
    "Id": 18195
  },
  "FileAttachments": [],
  "Comments": []
}