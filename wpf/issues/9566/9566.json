{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "This is by design. You can either use two instances of the binding instead of using the same instance, or you can set UpdateSourceTrigger to Explicit when you initialize the binding. That should prevent any further updates to the binding after it has been sealed.",
    "ClosedDate": "2009-03-24T13:18:37.373-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "I am getting a 'Binding cannot be changed after it has been used.' error with all of my DataGridCheckboxColumns after updating to the March Release.  This is with a simple PropertyPath + BindingMode.TwoWay binding.\nÂ \nMore Exception detail:\n   at System.Windows.Data.BindingBase.CheckSealed()\n   at System.Windows.Data.Binding.set_UpdateSourceTrigger(UpdateSourceTrigger value)\n   at Microsoft.Windows.Controls.DataGridHelper.EnsureTwoWayIfNotOneWay(BindingBase bindingBase)\n   at Microsoft.Windows.Controls.DataGridBoundColumn.get_Binding()\n   at Microsoft.Windows.Controls.DataGridBoundColumn.ApplyBinding(DependencyObject target, DependencyProperty property)\n   at Microsoft.Windows.Controls.DataGridCheckBoxColumn.GenerateCheckBox(Boolean isEditing, DataGridCell cell)\n   at Microsoft.Windows.Controls.DataGridCheckBoxColumn.GenerateElement(DataGridCell cell, Object dataItem)",
    "LastUpdatedDate": "2013-05-16T05:31:08.337-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2009-03-20T08:06:01.147-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "DataGridCheckboxColumn binding",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 2,
    "Id": 9566
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I dug into this just a little more... the problem is actually stemming from a CellStyle Setter I have that uses the same binding as the Checkbox column.  This same logic works fine if the column is a readonly textbox column.\r\n\r\n                Binding bind = new Binding()\r\n                {\r\n                    Path = new PropertyPath(\"MyPath\"),\r\n                    Mode = BindingMode.TwoWay\r\n                };\r\n                DataGridBoundColumn column = new DataGridCheckBoxColumn() as DataGridBoundColumn;\r\n                column.Binding = bind;\r\n                column.Header = \"MyHeader\";\r\n                column.CellStyle = new Style(typeof(DataGridCell), null);\r\n                column.CellStyle.Setters.Add(new Setter(TextBlock.ToolTipProperty, bind));\r\n",
      "PostedDate": "2009-03-20T08:16:35.087-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-03-23T00:34:39.427-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-03-24T13:18:37.373-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:41:26.03-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:31:08.337-07:00",
      "Id": -2147483648
    }
  ]
}