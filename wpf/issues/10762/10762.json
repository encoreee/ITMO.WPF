{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "I am required to extend the Datagrid and provide functionality which repopulates the datagrid based on the selection made by the user. I have attached my source code below. In this prototype I am reponding to the DataGrid's SelectionChanged event by reloading the data and then hardcoding a SelectedIndex of 2. Selecting any row but the 3rd leaves the grid blank, the selected item is not highlighted. Selecting the 3rd row highlights correctly, probably because the SelectionChanged event is not being fired? Any advice here?\n \n<Window x:Class=\"TestGrid.Window1\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    xmlns:Toolkit=\"clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit\"\n    Title=\"Window1\" Height=\"300\" Width=\"300\">\n    <Grid>\n        <StackPanel>\n            <Toolkit:DataGrid Name=\"MyGrid\" SelectionChanged=\"MyGrid_SelectionChanged\" ItemsSource=\"{Binding}\" SelectionUnit=\"FullRow\" IsReadOnly=\"True\" />\n        </StackPanel>\n    </Grid>\n</Window>\n \nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Windows;\nusing System.Windows.Controls;\nusing System.Windows.Data;\nusing System.Windows.Documents;\nusing System.Windows.Input;\nusing System.Windows.Media;\nusing System.Windows.Media.Imaging;\nusing System.Windows.Navigation;\nusing System.Windows.Shapes;\nusing System.Data;\n \nnamespace TestGrid\n{\n    /// <summary>\n    /// Interaction logic for Window1.xaml\n    /// </summary>\n    public partial class Window1 : Window\n    {\n        private bool ignoreIndexChange = false;\n \n        public Window1()\n        {\n            InitializeComponent();\n            LoadData();\n            MyGrid.SelectedIndex = 2;\n        }\n \n        private void LoadData()\n        {\n            DataTable dataTable = new DataTable();\n \n            for (int c = 0; c < 6; c++)\n            {\n                dataTable.Columns.Add(\"Column \" + c.ToString());\n            }\n \n            for (int c = 0; c < 6; c++)\n            {\n                string[] values = new string[6];\n                for (int d = 0; d < values.Length; d++)\n                {\n                    values[d] = \"Row \" + c.ToString() + \" Col \" + d.ToString();\n                }\n \n                dataTable.Rows.Add(values);\n            }\n           \n            MyGrid.DataContext = dataTable;\n        }\n \n        private void MyGrid_SelectionChanged(object sender, SelectionChangedEventArgs e)\n        {\n            if (!ignoreIndexChange)\n            {\n                try\n                {\n                    ignoreIndexChange = true;\n                    LoadData();\n                    MyGrid.SelectedIndex = 2;\n                }\n                finally\n                {\n                    ignoreIndexChange = false;\n                }               \n            }\n        }\n    }\n}",
    "LastUpdatedDate": "2013-02-21T18:40:55.237-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2009-10-14T07:40:55.1-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Datagrid not rendering selected item if repopulated when selection changes",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 10762
  },
  "FileAttachments": [],
  "Comments": []
}