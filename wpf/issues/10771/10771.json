{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "Folks,\n \nI'm currently using databinding to bind one of my text boxes with a DataView object in a WPF Window. The DataView Object is called \"_justificationView\" and it contains several columns among which I've got a column called \"unforecasted_explanation\" which is VarChar 500 in my database (thus, a string in the DataView object itself). \n \nIn XAML, I have made the following declaration:\n \n<TextBox Grid.Row=\"3\" Height=\"23\" Margin=\"34,0,130,14\" Name=\"tBUnforecastedExplanation\" Validation.ErrorTemplate=\"{StaticResource validationTemplate}\" Style=\"{StaticResource textStyleTextBox}\" VerticalAlignment=\"Bottom\" Grid.ColumnSpan=\"2\" Grid.Column=\"1\" DataContext=\"_justificationView\">\n           <TextBox.Text>\n                <Binding  Path=\"unforecasted_explanation\" UpdateSourceTrigger=\"LostFocus\" Mode=\"TwoWay\">\n                    <Binding.ValidationRules>\n                        <src:TextFieldsValidation></src:TextFieldsValidation>\n                    </Binding.ValidationRules>\n                </Binding>\n            </TextBox.Text>\n        </TextBox> \n \nThen, in the C# file (.cs) I am binding the TextBox to the DataView since I have already declared to which field in that DataView, my textbox should respond to (I know it's redundant to include DataContext property both in XAML and cs file, but I want to be absolutely certain that my TextBox is bound to my DataView object). Therefore, I wrote this line of code in my CS file:\n \n tBUnforecastedExplanation.DataContext = _justificationView;\n \nWhile above approach works well for all my other fields in my window, for this field, \"unforecasted explanation\",  it does not seem to work. This field is the very last one in my form that the user would enter (if the user follows a sequential top-to-bottom approach for filling up the form). The value is always NULL even though it does have text in it. As a matter of fact, when I am in debug mode, I can see that \"tBUnforecastedExplanation.Text\" has any random value (say \"onetwothree\") while the _justificationView does not carry any value (it's NULL) for \"unforecasted explanation\".\n \nIs this a bug with XAML / WPF and DataContext Properties for TextBoxes? It seems like the two DataView's and the TextBox's Text content do not synch up amongst each other from time to time. It's random...\nIs there a way to fix this issue?\n \nPlease let me know. I hope this isn't way more confusing than what it actually is. I appreciate any input.",
    "LastUpdatedDate": "2013-02-21T18:40:54.563-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2009-10-15T13:58:31.173-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Bug with DataContext Property of WPF TextBox Element - Data is not binding. Any suggestions?",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 10771
  },
  "FileAttachments": [],
  "Comments": []
}