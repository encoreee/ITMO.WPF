{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "Ribbon",
      "DisplayName": "Ribbon"
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "Hi,\n \nI've found a bug on the RibbonComboBox: it does not display the content of the RibbonComboBoxItem that is selected. An an example, try this:\n \n \n<r:RibbonTab Label=\"Themes\" >\n                <r:RibbonGroup>\n                    <r:RibbonLabel Content=\"Select a theme:\" />\n                    <r:RibbonComboBox x:Name=\"rcbThemes\"\n                                      Width=\"120\"\n                                      IsReadOnly=\"False\"\n                                      SelectedIndex=\"0\"\n                                      SelectionChanged=\"rcbThemes_SelectionChanged\">\n                        <r:RibbonComboBoxItem Content=\"Office2007Silver\" />\n                        <r:RibbonComboBoxItem Content=\"Office2007Black\" />\n                        <r:RibbonComboBoxItem Content=\"Office2007Blue\" />\n                    </r:RibbonComboBox>\n                </r:RibbonGroup>\n            </r:RibbonTab>\n \n \nIf you select a item in the combobox, it will not be show as the selected one on the combobox.\n \nHere is a workaround:\n \nin the file generic.xaml under the older Themes, find this line:\n \n<TextBox Name=\"PART_EditableTextBox\"\n \nand add the attribute: \n \nText=\"{TemplateBinding SelectionBoxItem}\"\n \nNow, the selected item will be displayed correctly :)\n \n \nHTH.\n \n \n \nThomas Lebrun\nMVP Client Application Development",
    "LastUpdatedDate": "2013-03-18T07:53:45.747-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2008-11-07T05:49:20.893-08:00",
    "Status": {
      "Name": "Active",
      "Id": 2
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "RibbonComboBox does not display the content of the selected RibbonComboBoxItem",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 6,
    "Id": 7981
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks for identifying this issue Thomas,\r\n\r\nI'm not clear on the workaround.  I don't have access to the source code for the ribboncontrols assembly.  Do I have to template the control completely and add the attribute to my template?  \r\n\r\nThanks,",
      "PostedDate": "2008-11-25T03:55:58.947-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2008-11-26T14:06:49.01-08:00",
      "Id": -2147483648
    },
    {
      "Message": "I'm not sure if this is the same issue, but I had a similar problem and setting the IsEditable property of the RibbonComboBox to true fixed it.  Still a bug though...",
      "PostedDate": "2008-11-26T14:10:33.447-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Hi Thomas,\r\n\r\nThanks for reporting the issue.  I can repro the problem.  I filed a bug to track this issue. \r\n\r\nWilliam\r\n",
      "PostedDate": "2008-12-01T08:07:27.23-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Hi all,\r\n\r\nI have the same problem, but I have found the workarround.\r\nIt's necessary to handle \"SelectionChanged\" event and write in the handler code like this:\r\n\r\n   RibbonComboBox1.Text = RibbonComboBox1.SelectedItem.Content.ToString()\r\n\r\nGood luck!",
      "PostedDate": "2008-12-05T14:37:56.507-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Or just bind the Text to self instead of handling SelectionChanged event: Text=\"{Binding RelativeSource={x:Static RelativeSource.Self}, Path=SelectedItem.Content}\"",
      "PostedDate": "2008-12-26T10:03:54.07-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-02-18T16:18:53.057-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-05-03T08:12:55.34-07:00",
      "Id": -2147483648
    },
    {
      "Message": "I am a little surprised that the RibbonComboBox can only accept texts, basically? What if I would want to add something more elaborate? Current topic for me is a combobox containing colors and one containing fonts. The latter used a DataTemplate to create a text describing the font name and having a preview on the right. While fonts also work without this detail, the color combobox seems impossible this way. I suppose I should use a Gallery for that, but... they are not there yet. \r\n\r\nBut aside from the specific usage I had in mind, the beauty of WPF usually is that I can put almost anything into Controls and use templating and styles to make it look however I desire. It is strange that the RibbonComboBox doesn't do it. (Of course, it might just be a bug or temporary thing.)",
      "PostedDate": "2009-10-22T08:00:13.313-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-02-25T05:54:33.097-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Hi Yem583,\r\nYou can create your own style for the RibbonComboBox with Blend.\r\n\r\nFabien Lavocat.",
      "PostedDate": "2010-02-25T05:55:34.477-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2011-09-14T23:55:33.253-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:41:45.717-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-03-18T07:53:45.747-07:00",
      "Id": -2147483648
    }
  ]
}