{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "System.ExecutionEngineException was unhandled Message=\"Exception of type 'System.ExecutionEngineException' was thrown.\" InnerException: \n \nA WPF view is bound to a viewmodel class. When the viewmodel class reloads a bindinglist from MySql database (using DataAdapter) and the bindinglist OnListChanged is called the exception is thrown and cannot be caught with try/catch nor does the exception show any info other than it is unhandled.\n \nWhen running a simple WPF form (using MVVM approach) I have combobox and lists bound to a BindingList held by the viewmodel. The viewmodel also holds a reference to the underlying model list(derived from BindingList). When the underlying model list is being reloaded the list changed event occurs and an ExecutionEngineException is thrown and the app ends. Their is no data to the exception.\n \nWhen I run tests using the viewmodel saving to or reloading from the original datasource no exception is thrown and everything works smoothly.\n \nAlso this process works smoothly in Winforms using a Presentation Model functioning similarly to WPF viewmodel approach.\n \nI searched many forums and found issues about arrays to lists, issues where the WeakEventManager could cause this , etc.. None of the hotfixes suggested or workarounds seem to work.\n \nI wonder if it is a thread issue as action on the model by viewmodel may be conflicting with the UI due to binding???",
    "LastUpdatedDate": "2013-02-21T18:40:15.317-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2011-02-06T13:17:19.77-08:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "System.ExecutionEngineException was unhandled",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 15254
  },
  "FileAttachments": [
    {
      "FileId": 5349,
      "FileName": "Debug_ExecutionEngineException.rtf",
      "DownloadUrl": ".\\5349"
    }
  ],
  "Comments": [
    {
      "Message": "In my original viewmodel I had created a BindingList<> to hold a reference to the model list. This viewmodel list was used for binding in the xaml. (see workaround) Whenever I reloaded the model list (sys.PurchaseOrderHeaders) I get the exception.\r\n         PurchaseOrderList = sys.PurchaseOrderHeaders;\r\n\r\nWhen I use an ObservableCollection instead of a BindingList, the problem does not occur.\r\n         PurchaseOrderList = new ObservableCollection<PurchaseOrderHeader>(sys.PurchaseOrderHeaders);\r\n\r\nor when I use a Bindinglist<> and create a new instance and load the items from the model list the problem also does not occur.\r\n            PurchaseOrderList = new BindingList<PurchaseOrderHeader>();\r\n            foreach (PurchaseOrderHeader item in sys.PurchaseOrderHeaders){ purchaseOrderList.Add(item); }\r\n\r\nThere appears to be a problem when a WPF view uses a BindingList to directly reference a model bindingList, external changes to the orginal list (i.e. reloading from the model system) result in the exception.",
      "PostedDate": "2011-02-09T08:40:06.777-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:40:15.317-08:00",
      "Id": -2147483648
    }
  ]
}