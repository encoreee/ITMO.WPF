{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "Hi,\n \nWhen setting the ItemsSource of the AutoCompleteBox (through the Populating event; possibly also when directly binding the ItemsSource to something in the DataContext), the behavior is highly incorrect/unreasonable, if the items you are binding to is e.g. a List of SearchResult objects (where SearchResult is a class of your own). The result is that no dropdown with completions is shown.\n \nBUT... this is only as long as the SearchResult objects don't implement a custom ToString() method. As soon as you implement a ToString() override, the dropdown is there... ?!?!?\n \nThis is odd, and different to how the Silverlight control works. The Silverlight control will call the default ToString() implemention (which normally just gives the fully qualified class name of the object), but the WPF one seems to do /something/ which is slightly unexpected... :-)\n \nHere is a simple code sample that shows the correct behavior when used in a Silverlight app:\n \n<UserControl xmlns:input=\"clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input\"  \n             x:Class=\"eCraft.Silverlight.Sample2.MainPage\"\n             xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" \n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" >\n    <Grid x:Name=\"LayoutRoot\">\n        <StackPanel HorizontalAlignment=\"Center\" Margin=\"10\">\n            <input:AutoCompleteBox \n                x:Name=\"SearchStringAutoCompleteBox\" Margin=\"10\"\n                Populating=\"SearchStringAutoCompleteBox_Populating\"\n                FilterMode=\"None\"/>\n            <Button Width=\"150\">\n                <TextBlock>Google Search</TextBlock>\n            </Button>\n        </StackPanel>\n    </Grid>\n</UserControl>\n \nAnd the code-behind:\n \nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Windows.Controls;\n \nnamespace eCraft.Silverlight.Sample2\n{\n    public class SearchResult\n    {\n        public string Keyword { get; set; }\n        public string Text { get; set; }\n \n        //public override string ToString()\n        //{\n        //    return Keyword + \" \" + Text;\n        //}\n    }\n \n    public partial class MainPage : UserControl\n    {\n        List<SearchResult> searchResults = new List<SearchResult>\n        {\n            new SearchResult { Keyword = \"Andorra\", Text = \"Country in Europe\" },\n            new SearchResult { Keyword = \"Australia\", Text = \"Country in Oceania\" },\n            new SearchResult { Keyword = \"China\", Text = \"Country in Asia\" }\n        };\n \n        public MainPage()\n        {\n            InitializeComponent();\n        }\n \n        void SearchStringAutoCompleteBox_Populating(object sender,\n            PopulatingEventArgs e)\n        {\n            PerformSearch(SearchStringAutoCompleteBox.Text);\n            e.Cancel = true;\n        }\n \n        // This method gets called when we receive the results from the Google Suggest search.\n        private void PopulateAutoCompleteBox(List<SearchResult> searchResults)\n        {\n            SearchStringAutoCompleteBox.ItemsSource = searchResults;\n            SearchStringAutoCompleteBox.PopulateComplete();\n        }\n \n        #region Helper methods\n \n        private void PerformSearch(string searchString)\n        {\n            var results = (from r in searchResults\n                           where r.Keyword.StartsWith(searchString, StringComparison.InvariantCultureIgnoreCase)\n                           select r).ToList();\n            PopulateAutoCompleteBox(results);\n        }\n \n        #endregion\n    }\n}",
    "LastUpdatedDate": "2013-02-21T18:40:43.913-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2010-03-01T00:22:45.82-08:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "AutoCompleteBox: different semantics than the Silverlight control when populating ItemsSource with a list of objects (ToString() NOT called)",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 11937
  },
  "FileAttachments": [],
  "Comments": []
}