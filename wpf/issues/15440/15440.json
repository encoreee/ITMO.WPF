{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "So far there is no ubiquitous solution in WPF and Silverlight for input masks, although many users require it. Developers end up writing their own implementation or using thrid party controls. This however doesn't translate well between different projects as there is no common standard. Microsoft has not provided additional functionality for WPF controls with .NET 4.0 in general and has not added input masks functionality in particular. \nOne might think that Microsoft is doing it on purpose so that third party companies may benefit from lack of features in WPF, while businesses have to suppliment their investments in WPF with additional tools and/or resources, which costs money.\nIt is a good reason to assume that most of the UI WinForms features should be transferred.  \nTherefore WPF is still not ready for a large class of business applications which are heavy on data entry.",
    "LastUpdatedDate": "2013-02-21T18:40:13.99-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2011-03-01T13:59:56.82-08:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Unable to apply Input Mask",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 15440
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "The Extended WPF Toolkit may have some controls that will help: http://wpftoolkit.codeplex.com/",
      "PostedDate": "2011-07-21T07:23:29.93-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:40:13.99-08:00",
      "Id": -2147483648
    }
  ]
}