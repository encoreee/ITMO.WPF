{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "When an ItemsControl is bound to an IList implementation, rather than an IEnumerable implementation, it will not enumerate the entire list, and instead only accesses the items required for display. Using this we can implement DataVirtualization as described here\n \nhttp://www.codeproject.com/KB/WPF/WpfDataVirtualization.aspx\n \nBut, when multiple rows are  to be selected DataGrid use IEnumerator to select those rows.\nI beleave that code is located in method  \n \nprivate void MakeFullRowSelection(...)\n \nAnyway, it would be much better to use items.IndexOf for small number of selected rows.\nThat would enable DataVirtualization for multiselect.\nThere is even a performance issue when selected rows are at the end of big list.",
    "LastUpdatedDate": "2013-02-21T18:40:33.967-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2010-05-18T12:51:03.15-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "DataGrid Data Virtualization",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 3,
    "Id": 13140
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Even with tables that aren't that large, having to enumerate the IList collection when clicking/dragging the mouse over row headers for the last rows in the table (for multi-select) is so slow it’s unusable.",
      "PostedDate": "2010-10-04T12:37:01.67-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2012-09-03T02:47:03.207-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:40:33.967-08:00",
      "Id": -2147483648
    }
  ]
}