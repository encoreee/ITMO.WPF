{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "This release 3.5.50211.1 will unselect all your selected rows when the grid or the parent control that holds the grid is disabled. DataGrid.IsEnabled=false;\nPrevious release 3.5.40320.1 did not have this issue.\n \nDesired behavior would be to leave the selected rows alone when the parent control or the grid itself are disabled.\n \nBelow is the sample xaml and code behind.\n \nXAML code:\n<Window x:Class=\"FocusTest.Window2\"\nxmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\nxmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\nxmlns:Toolkit=\"clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit\"\nTitle=\"Window1\" Height=\"300\" Width=\"300\" Loaded=\"Window_Loaded\">\n  <Grid>\n    <StackPanel>\n      <Toolkit:DataGrid x:Name=\"MyDataGrid\" ItemsSource=\"{Binding}\" />\n      <Button Margin=\"5\" Width=\"100\" Click=\"Button_Click\">Toggle</Button>\n    </StackPanel>\n  </Grid>\n</Window>\n \n \nCode Behind:\nusing System.Data;\nusing System.Windows;\n \nnamespace FocusTest\n{\n    /// <summary>\n    /// Interaction logic for Window2.xaml\n    /// </summary>\n    public partial class Window2 : Window\n    {\n        public Window2()\n        {\n            InitializeComponent();\n        }\n \n        private void LoadData()\n        {\n            DataTable dt = new DataTable();\n            for (int c = 1; c < 6; c++)\n            {\n                dt.Columns.Add(new DataColumn(string.Format(\"Column {0}\", c.ToString())));\n            }\n \n            for (int d = 1; d < 6; d++)\n            {\n                string[] values = new string[5];\n                for (int c = 0; c < 5; c++)\n                {\n                    values[c] = string.Format(\"Row {0} Column {1}\", d.ToString(), c.ToString());\n                }\n                dt.Rows.Add(values);\n            }\n            MyDataGrid.DataContext = dt;\n        }\n \n        private void Window_Loaded(object sender, RoutedEventArgs e)\n        {\n            LoadData();\n            MyDataGrid.SelectedIndex = 2;\n        }\n \n        private void Button_Click(object sender, RoutedEventArgs e)\n        {\n            MyDataGrid.IsEnabled = !MyDataGrid.IsEnabled;\n        }\n    }\n}",
    "LastUpdatedDate": "2013-02-21T18:40:43.39-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2010-03-02T10:17:48.267-08:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Datagird unselects all your rows when it is disabled.",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 7,
    "Id": 11988
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I can confirm this bug. If the data grid is enabled or disabled should have no effect on the selection.",
      "PostedDate": "2010-03-05T05:51:00.517-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-03-08T03:46:40.963-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-03-11T03:30:20.59-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-03-18T15:09:51.15-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Yes, it's very critical bug. We had to return to previous version of datagrid without workaround now.\r\nIsEnabled = false -> SelectedIndex = -1 -> lost binding = big problem...",
      "PostedDate": "2010-03-18T15:11:48.32-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-03-19T10:10:51.433-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-05-07T12:02:39.557-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:40:43.39-08:00",
      "Id": -2147483648
    }
  ]
}