{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "I'm getting an InvalidOperationException of \"'DeferRefresh' is not allowed during an AddNew or EditItem transaction\" when using a DataGrid in the RowDetails of another DataGrid.  Its a master detail scenario and when I click too quickly on anything after editing a child item the exception is thrown. \n \nWhen running the sample if you double-click on the open cell below \"Child Name\" and then quickly click on the Name column header above \"parent one\" the exception is thrown.\n \nI opened a thread here: http://wpf.codeplex.com/Thread/View.aspx?ThreadId=60762 but did not receive any feedback.",
    "LastUpdatedDate": "2013-02-27T03:40:20.697-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2009-08-26T07:50:06.867-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "DataGrid and 'DeferRefresh' is not allowed during an AddNew or EditItem transaction when quickly clicking",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 6,
    "Id": 10539
  },
  "FileAttachments": [
    {
      "FileId": 3317,
      "FileName": "example.zip",
      "DownloadUrl": ".\\3317"
    },
    {
      "FileId": 4869,
      "FileName": "DataGridRollbackOnUnfocusedBehaviour.cs",
      "DownloadUrl": ".\\4869"
    }
  ],
  "Comments": [
    {
      "Message": "This is very much related to editing rows in a sorted grid. You do not want the row to change its location while it is in edit mode. \r\nI tried to solve this problem using DeferRefresh, but I also get an exception. CurrentItem cannot be accessed during DeferRefresh.",
      "PostedDate": "2009-10-02T02:35:09.343-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-12-15T00:45:22.393-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-02-07T17:33:56.873-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-09-22T00:26:30.11-07:00",
      "Id": -2147483648
    },
    {
      "Message": "I'm using the WPF Toolkit's DataGrid in .NET 3.5SP1. I experienced the same issue, and solved the problem by canceling the pending changes on the DataGrid, just before those exceptions may occur, that is:\r\n- when the DataGrid loses focus (actually, keyboard focus), or\r\n- when its DataContext changes\r\n\r\nSo I built an attached behaviour (\"DataGridRollbackOnUnfocusedBehaviour\") that simply does this job.\r\n\r\nIt can be used easily in XAML in this way:\r\n \r\n\r\n<toolkit:DataGrid\r\n\tlocal:DataGridRollbackOnUnfocusedBehaviour.DataGridRollbackOnUnfocused=\"True\" />\r\n\r\n\r\nand the implementation of the behaviour is in the attached file.",
      "PostedDate": "2010-09-22T00:26:31.677-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:40:59.687-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-27T03:40:20.697-08:00",
      "Id": -2147483648
    }
  ]
}