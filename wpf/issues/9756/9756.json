{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2009-04-21T13:25:10.303-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "It seems odd that this bug would not have been flagged already, so maybe I'm doing something wrong, but it's very easy to reproduce this problem. In my production application, I've created a subclass of ObservableCollection, but when I set the grid's ItemsSource to an instance that has no items, I don't get a NewItemPlaceholder row and can't add any items to the collection. Here's some quick code to reproduce the problem...\n \n<!-- Code omitted -->\n<Window.Resources>\n    <local:Things x:Key=\"thingList\" />\n</Window.Resources>\n<Grid>\n    <toolkit:DataGrid ItemsSource=\"{StaticResource thingList}\" CanUserAddRows=\"True\" AutoGenerateColumns=\"False\">\n        <toolkit:DataGrid.Columns>\n            <toolkit:DataGridTextColumn Binding=\"{Binding One}\" Header=\"One\" />\n            <toolkit:DataGridTextColumn Binding=\"{Binding Two}\" Header=\"Two\" />\n        </toolkit:DataGrid.Columns>\n    </toolkit:DataGrid>\n</Grid>\n<!-- Code omitted -->\n \nThe C# code for the class \"Things\" looks like this:\npublic class Things : ObservableCollection<Thing>\n{\n    public Things()\n    {\n        //To demonstrate the bug, this line is commented out. If you run this application, no NewItemPlaceholder is available to add a new row.\n        //But if you comment this line in and run the app, you get this row, and below it a NewItemPlaceholder.\n        //this.Add(new Thing { One = \"One\", Two = \"Two\" });\n    }\n}\n \npublic class Thing\n{\n    public string One\n    {\n        get;\n        set;\n    }\n \n    public string Two\n    {\n        get;\n        set;\n    }\n}",
    "LastUpdatedDate": "2013-05-16T05:31:07.327-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2009-04-14T16:56:30.47-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Can't Add New Items to an Empty List",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 2,
    "Id": 9756
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "This is something many times referred in the discussions list, if I'm not mistaken...\r\n\r\nAlso very important for me :P...",
      "PostedDate": "2009-04-16T03:07:26.93-07:00",
      "Id": -2147483648
    },
    {
      "Message": "This is a known issue, and just a general limitation of the current implementation.",
      "PostedDate": "2009-04-21T13:24:51.77-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-04-21T13:25:10.303-07:00",
      "Id": -2147483648
    },
    {
      "Message": "OK; I left this issue alone for a while, but today I found a workaround for this here (see the comments section):\r\nhttp://blogs.msdn.com/vinsibal/archive/2008/10/01/overview-of-the-editing-features-in-the-wpf-datagrid.aspx\r\nThe key is basically to change\r\npublic class Things : ObservableCollection<Thing>\r\nto\r\npublic class Things<T> : ObservableCollection<T> where T : Thing, new()",
      "PostedDate": "2009-05-07T20:08:09.197-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:41:21.39-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:31:07.327-07:00",
      "Id": -2147483648
    }
  ]
}