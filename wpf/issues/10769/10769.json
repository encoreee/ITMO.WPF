{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "I have a datagrid create in codebehind with a DataGridComboBoxColumn. The DataGrid itemsource is a observableCollection created from a relationship entity.\n \nWhen the datagrid enter in editmode any change in the textcolumn works fine but any change in the combobox is undo. I try to trace this error and find that when you call CommitCellEdit in DataGridComboBoxColumn.cs the comboBox element have the right values  but after the UpdateSource the binding is not properly update.\n \nThis the code i'm using \n        \n static fundacionEntities Modelofundacion;\n        private static fundacionEntities GetEntity()\n        {\n \n            if (Modelofundacion == null)\n                Modelofundacion = new fundacionEntities();\n            return Modelofundacion;\n        }\n \npublic ObservableCollection<subtipo_actividad> ObtenerSubtiposActividad()\n        {\n            fundacionEntities Modelofundacion = GetEntity();\n            var subtipo_actividad_Query = from a in Modelofundacion.subtipo_actividad\n                                          .Include(\"tipo_actividad\")\n                                           select a;\n \n            return new ObservableCollection<subtipo_actividad>(subtipo_actividad_Query.ToList());\n        }\n \n \n        ObservableCollection<subtipo_actividad> m_SubtipoA = new ObservableCollection<subtipo_actividad>();\n        public ObservableCollection<subtipo_actividad> SubtipoActividad\n        {\n            get { return m_SubtipoA; }\n            set { m_SubtipoA = value; }\n        }\n \n public ObservableCollection<tipo_actividad> ObtenerTiposActividad()\n        {\n            fundacionEntities Modelofundacion = GetEntity();\n            IQueryable<tipo_actividad> tipo_actividad_Query = from a in Modelofundacion.tipo_actividad\n                                                              .Include(\"subtipo_actividad\")\n                                                              select a;\n            return new ObservableCollection<tipo_actividad> (tipo_actividad_Query.ToList());\n        }\nprivate void Load_Data()\n        {\n                        GridMantenimiento.AutoGenerateColumns = false;\n                        GridMantenimiento.Columns.Clear();\n                        ProyectoBL subTipoActividad = new ProyectoBL();\n                        /*crea la columna combobox subtipo de actividad*/\n                        DataGridComboBoxColumn TipoActividadcb = new DataGridComboBoxColumn();\n                        TipoActividadcb.CanUserSort = true;\n                        TipoActividadcb.DisplayMemberPath = \"descripcion\";\n                        TipoActividadcb.SelectedValuePath = \"cod_tipo_actividad\";\n                        TipoActividadcb.Header = \"Tipo Actividad\";\n                        TipoActividadcb.SortMemberPath = \"descripcion\";\n                        TipoActividadcb.SelectedValueBinding = new Binding(\"tipo_actividad.cod_tipo_actividad\");\n                        TipoActividadcb.ItemsSource = subTipoActividad.ObtenerTiposActividad();\n                        ////crea el binding de las columnas de texto\n                        Binding cod_subtipo_actividad = new Binding(\"cod_subtipo_actividad\");\n                        Binding descripcion = new Binding(\"descripcion\");\n                        //agrega las columnas al datagrid\n                        GridMantenimiento.Columns.Add(new DataGridTextColumn() { Binding = cod_subtipo_actividad, Header = \"Código subtipo de actividad\" });\n                        GridMantenimiento.Columns.Add(new DataGridTextColumn() { Binding = descripcion, Header = \"descripcion\", CanUserResize = true });\n                        GridMantenimiento.Columns.Add(TipoActividadcb);\n                        //hace visible el datagrid y agrega los elementos al mismo\n                        GridMantenimiento.Visibility = Visibility.Visible;\n                        SubtipoActividad = subTipoActividad.ObtenerSubtiposActividad();\n                        GridMantenimiento.ItemsSource = SubtipoActividad;\n \n}",
    "LastUpdatedDate": "2013-02-21T18:40:54.72-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2009-10-15T10:38:42.047-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "ComboBox DataGrid is not properly update",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 10769
  },
  "FileAttachments": [],
  "Comments": []
}