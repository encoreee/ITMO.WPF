{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "There should be a MaxLength property on the AutoCompleteBox",
    "LastUpdatedDate": "2013-02-21T18:40:42.003-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2010-03-10T20:50:07.493-08:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "AutoCompleteBox.MaxLength????",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 3,
    "Id": 12057
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Meanwhile:\r\n\r\nImports System.Reflection\r\n\r\nNamespace Components\r\n  Public Class TextBoxBehavior\r\n\r\n\r\n\r\n    Public Shared Function GetMaxLength(ByVal element As AutoCompleteBox) As Integer\r\n      If element Is Nothing Then\r\n        Throw New ArgumentNullException(\"element\")\r\n      End If\r\n\r\n      Return element.GetValue(MaxLengthProperty)\r\n    End Function\r\n\r\n    Public Shared Sub SetMaxLength(ByVal element As AutoCompleteBox, ByVal value As Integer)\r\n      If element Is Nothing Then\r\n        Throw New ArgumentNullException(\"element\")\r\n      End If\r\n\r\n      element.SetValue(MaxLengthProperty, value)\r\n    End Sub\r\n\r\n\r\n    Public Shared ReadOnly MaxLengthProperty As  _\r\n                           DependencyProperty = DependencyProperty.RegisterAttached(\"MaxLength\", _\r\n                           GetType(Integer), GetType(TextBoxBehavior), _\r\n                           New FrameworkPropertyMetadata(Integer.MaxValue, AddressOf AutoCompleteBox_MaxLengthChanged))\r\n\r\n    Private Shared Sub AutoCompleteBox_MaxLengthChanged(ByVal sender As Object, ByVal e As DependencyPropertyChangedEventArgs)\r\n      Dim acb = DirectCast(sender, AutoCompleteBox)\r\n\r\n      If acb.IsLoaded Then\r\n        Dim tb = acb.Template.FindName(\"Text\", acb)\r\n        tb.MaxLength = DirectCast(e.NewValue, Integer)\r\n      Else\r\n        acb.AddHandler(AutoCompleteBox.LoadedEvent, New RoutedEventHandler(AddressOf AutoCompleteBox_Loaded))\r\n      End If\r\n    End Sub\r\n\r\n    Private Shared Sub AutoCompleteBox_Loaded(ByVal sender As Object, ByVal e As RoutedEventArgs)\r\n      Dim acb = DirectCast(sender, AutoCompleteBox)\r\n      Dim ml = GetMaxLength(acb)\r\n      AutoCompleteBox_MaxLengthChanged(sender, New DependencyPropertyChangedEventArgs(TextBox.MaxLengthProperty, -1, ml))\r\n      acb.RemoveHandler(AutoCompleteBox.LoadedEvent, New RoutedEventHandler(AddressOf AutoCompleteBox_Loaded))\r\n    End Sub\r\n\r\n\r\n  End Class\r\n\r\nEnd Namespace",
      "PostedDate": "2010-03-11T18:31:29.657-08:00",
      "Id": -2147483648
    },
    {
      "Message": "I think this should be fixed simply by declaring the MaxLength dp on the AutoCompleteBox class, then in the control template xaml simply set the TextBox's MaxLength property to MaxLength=\"{TemplateBinding MaxLength}\".",
      "PostedDate": "2010-03-11T18:38:46.8-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2011-01-24T00:47:46.033-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2011-10-20T12:45:32.347-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:40:42.003-08:00",
      "Id": -2147483648
    }
  ]
}