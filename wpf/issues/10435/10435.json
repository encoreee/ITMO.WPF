{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "ControlVerifier",
      "DisplayName": "ControlVerifier"
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "When running the Control Verifier, if you click the 'Value' column in the Test Case datagrid, the application crashes with the following message:\n \n---------------------------\n \n---------------------------\nAn unhandled exception occurred that may be caused by the Control under test. The app will shutdown now...\n \n \n \nException Message: Failed to compare two elements in the array.\n \nException StackTrace:    at System.Array.SorterObjectArray.SwapIfGreaterWithItems(Int32 a, Int32 b)\n \n   at System.Array.SorterObjectArray.QuickSort(Int32 left, Int32 right)\n \n   at System.Array.Sort(Array keys, Array items, Int32 index, Int32 length, IComparer comparer)\n \n   at System.Collections.ArrayList.Sort(Int32 index, Int32 count, IComparer comparer)\n \n   at System.Collections.ArrayList.Sort(IComparer comparer)\n \n   at System.Windows.Data.ListCollectionView.PrepareLocalArray(IList list)\n \n   at System.Windows.Data.ListCollectionView.RefreshOverride()\n \n   at System.Windows.Data.CollectionView.RefreshInternal()\n \n   at System.Windows.Data.CollectionView.Refresh()\n \n   at System.Windows.Data.CollectionView.EndDefer()\n \n   at System.Windows.Data.CollectionView.DeferHelper.Dispose()\n \n   at System.Windows.Controls.ItemCollection.SetCollectionView(CollectionView view)\n \n   at System.Windows.Controls.ItemCollection.SetItemsSource(IEnumerable value)\n \n   at System.Windows.Controls.ItemsControl.OnItemsSourceChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\n \n   at System.Windows.DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs e)\n \n   at System.Windows.FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs e)\n \n   at System.Windows.DependencyObject.NotifyPropertyChange(DependencyPropertyChangedEventArgs args)\n \n   at System.Windows.DependencyObject.UpdateEffectiveValue(EntryIndex entryIndex, DependencyProperty dp, PropertyMetadata metadata, EffectiveValueEntry oldEntry, EffectiveValueEntry& newEntry, Boolean coerceWithDeferredReference, OperationType operationType)\n \n   at System.Windows.DependencyObject.InvalidateProperty(DependencyProperty dp)\n \n   at System.Windows.Data.BindingExpression.Invalidate(Boolean isASubPropertyChange)\n \n   at System.Windows.Data.BindingExpression.TransferValue(Object newValue, Boolean isASubPropertyChange)\n \n   at System.Windows.Data.BindingExpression.Activate(Object item)\n \n   at System.Windows.Data.BindingExpression.OnDataContextChanged(DependencyObject contextElement)\n \n   at System.Windows.Data.BindingExpression.HandlePropertyInvalidation(DependencyObject d, DependencyPropertyChangedEventArgs args)\n \n   at System.Windows.Data.BindingExpression.OnPropertyInvalidation(DependencyObject d, DependencyPropertyChangedEventArgs args)\n \n   at System.Windows.DependentList.InvalidateDependents(DependencyObject source, DependencyPropertyChangedEventArgs sourceArgs)\n \n   at System.Windows.DependencyObject.NotifyPropertyChange(DependencyPropertyChangedEventArgs args)\n \n   at System.Windows.DependencyObject.UpdateEffectiveValue(EntryIndex entryIndex, DependencyProperty dp, PropertyMetadata metadata, EffectiveValueEntry oldEntry, EffectiveValueEntry& newEntry, Boolean coerceWithDeferredReference, OperationType operationType)\n \n   at System.Windows.TreeWalkHelper.OnInheritablePropertyChanged(DependencyObject d, InheritablePropertyChangeInfo info)\n \n   at System.Windows.DescendentsWalker`1._VisitNode(DependencyObject d)\n \n   at System.Windows.DescendentsWalker`1.VisitNode(FrameworkElement fe)\n \n   at System.Windows.DescendentsWalker`1.VisitNode(DependencyObject d)\n \n   at System.Windows.DescendentsWalker`1.WalkLogicalChildren(FrameworkElement feParent, FrameworkContentElement fceParent, IEnumerator logicalChildren)\n \n   at System.Windows.DescendentsWalker`1.WalkFrameworkElementLogicalThenVisualChildren(FrameworkElement feParent, Boolean hasLogicalChildren)\n \n   at System.Windows.DescendentsWalker`1.IterateChildren(DependencyObject d)\n \n   at System.Windows.DescendentsWalker`1._VisitNode(DependencyObject d)\n \n   at System.Windows.DescendentsWalker`1.VisitNode(FrameworkElement fe)\n \n   at System.Windows.DescendentsWalker`1.VisitNode(DependencyObject d)\n \n   at System.Windows.DescendentsWalker`1.WalkLogicalChildren(FrameworkElement feParent, FrameworkContentElement fceParent, IEnumerator logicalChildren)\n \n   at System.Windows.DescendentsWalker`1.WalkFrameworkElementLogicalThenVisualChildren(FrameworkElement feParent, Boolean hasLogicalChildren)\n \n   at System.Windows.DescendentsWalker`1.IterateChildren(DependencyObject d)\n \n   at System.Windows.DescendentsWalker`1.StartWalk(DependencyObject startNode, Boolean skipStartNode)\n \n   at System.Windows.TreeWalkHelper.InvalidateOnInheritablePropertyChange(FrameworkElement fe, FrameworkContentElement fce, InheritablePropertyChangeInfo info, Boolean skipStartNode)\n \n   at System.Windows.FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs e)\n \n   at System.Windows.DependencyObject.NotifyPropertyChange(DependencyPropertyChangedEventArgs args)\n \n   at System.Windows.DependencyObject.UpdateEffectiveValue(EntryIndex entryIndex, DependencyProperty dp, PropertyMetadata metadata, EffectiveValueEntry oldEntry, EffectiveValueEntry& newEntry, Boolean coerceWithDeferredReference, OperationType operationType)\n \n   at System.Windows.DependencyObject.InvalidateProperty(DependencyProperty dp)\n \n   at System.Windows.Data.BindingExpression.Invalidate(Boolean isASubPropertyChange)\n \n   at System.Windows.Data.BindingExpression.TransferValue(Object newValue, Boolean isASubPropertyChange)\n \n   at System.Windows.Data.BindingExpression.ScheduleTransfer(Boolean isASubPropertyChange)\n \n   at MS.Internal.Data.ClrBindingWorker.NewValueAvailable(Boolean dependencySourcesChanged, Boolean initialValue, Boolean isASubPropertyChange)\n \n   at MS.Internal.Data.PropertyPathWorker.UpdateSourceValueState(Int32 k, ICollectionView collectionView, Object newValue, Boolean isASubPropertyChange)\n \n   at MS.Internal.Data.ClrBindingWorker.OnSourcePropertyChanged(Object o, String propName)\n \n   at MS.Internal.Data.PropertyPathWorker.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type managerType, Object sender, EventArgs e)\n \n   at System.Windows.WeakEventManager.DeliverEventToList(Object sender, EventArgs args, ListenerList list)\n \n   at System.ComponentModel.PropertyChangedEventManager.OnPropertyChanged(Object sender, PropertyChangedEventArgs args)\n \n   at System.ComponentModel.PropertyChangedEventHandler.Invoke(Object sender, PropertyChangedEventArgs e)\n \n   at ControlVerifier.ViewModelBase.OnPropertyChanged(String propertyName)\n \n   at ControlVerifier.TestCaseManagerViewModel.set_CurrentTestCase(TestInfoViewModel value)\n \n   at ControlVerifier.TestCaseTreeItemViewModel.set_IsSelected(Boolean value)\n \n   at ControlVerifier.TestCaseTreeViewViewModel.CreateTestCases()\n \n   at ControlVerifier.TestCaseManagerViewModel.SetupViewModel(ControlTestViewModel controlTestViewModel)\n \n   at ControlVerifier.ControlTestViewModel.SetupViewModel(UIElement element)\n \n   at ControlVerifier.ControlTestViewModel.SetElementToTest(UIElement element, Boolean isChildElement, Boolean setupViewModel)\n \n   at ControlVerifier.ControlTestViewModel.<get_ChooseControlCommand>b__0(Object param)\n \n   at ControlVerifier.DelegateCommand`1.Execute(T parameter)\n \n   at ControlVerifier.DelegateCommand`1.System.Windows.Input.ICommand.Execute(Object parameter)\n \n   at MS.Internal.Commands.CommandHelpers.CriticalExecuteCommandSource(ICommandSource commandSource, Boolean userInitiated)\n \n   at System.Windows.Controls.Primitives.ButtonBase.OnClick()\n \n   at System.Windows.Controls.Button.OnClick()\n \n   at System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(MouseButtonEventArgs e)\n \n   at System.Windows.UIElement.OnMouseLeftButtonUpThunk(Object sender, MouseButtonEventArgs e)\n \n   at System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)\n \n   at System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)\n \n   at System.Windows.RoutedEventHandlerInfo.InvokeHandler(Object target, RoutedEventArgs routedEventArgs)\n \n   at System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\n \n   at System.Windows.UIElement.ReRaiseEventAs(DependencyObject sender, RoutedEventArgs args, RoutedEvent newEvent)\n \n   at System.Windows.UIElement.CrackMouseButtonEventAndReRaiseEvent(DependencyObject sender, MouseButtonEventArgs e)\n \n   at System.Windows.UIElement.OnMouseUpThunk(Object sender, MouseButtonEventArgs e)\n \n   at System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(Delegate genericHandler, Object genericTarget)\n \n   at System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)\n \n   at System.Windows.RoutedEventHandlerInfo.InvokeHandler(Object target, RoutedEventArgs routedEventArgs)\n \n   at System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\n \n   at System.Windows.UIElement.RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)\n \n   at System.Windows.UIElement.RaiseEvent(RoutedEventArgs args, Boolean trusted)\n \n   at System.Windows.Input.InputManager.ProcessStagingArea()\n \n   at System.Windows.Input.InputManager.ProcessInput(InputEventArgs input)\n \n   at System.Windows.Input.InputProviderSite.ReportInput(InputReport inputReport)\n \n   at System.Windows.Interop.HwndMouseInputProvider.ReportInput(IntPtr hwnd, InputMode mode, Int32 timestamp, RawMouseActions actions, Int32 x, Int32 y, Int32 wheel)\n \n   at System.Windows.Interop.HwndMouseInputProvider.FilterMessage(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\n \n   at System.Windows.Interop.HwndSource.InputFilterMessage(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\n \n   at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\n \n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\n \n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Boolean isSingleParameter)\n \n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Boolean isSingleParameter, Delegate catchHandler)\n \n \n \nException Message: Object must be the same type as the enum. The type passed in was 'System.String'; the enum type was 'ControlVerifier.TestLibrary.TestType'.\n \nException StackTrace:    at System.Enum.CompareTo(Object target)\n \n   at System.Collections.Comparer.Compare(Object a, Object b)\n \n   at MS.Internal.Data.SortFieldComparer.Compare(Object o1, Object o2)\n \n   at System.Array.SorterObjectArray.SwapIfGreaterWithItems(Int32 a, Int32 b)\n \n \n \n \n---------------------------\nOK   \n---------------------------",
    "LastUpdatedDate": "2017-11-27T11:31:26.127-08:00",
    "PlannedForRelease": "WPF Test Tools",
    "ReleaseVisibleToPublic": true,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2009-08-11T09:43:19.16-07:00",
    "Status": {
      "Name": "Active",
      "Id": 2
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Control Verifier 0.1 - Sorting on Value column in Test Case datagrid causes crash.",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 10435
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Thanks a lot for reporting this!  We plan to have this fixed in our next release.",
      "PostedDate": "2009-09-01T16:08:22.68-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:41:02.32-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2017-11-27T11:31:26.127-08:00",
      "Id": -2147483648
    }
  ]
}