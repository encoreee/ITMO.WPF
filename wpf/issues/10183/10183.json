{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Closed - By Design",
    "ClosedDate": "2009-06-30T13:41:05.81-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Have a DataGrid bound to an ObservableCollection of custom objects. The objects should implement the INotifyPropertyChanged interface. If you have the grid sorted, and if you update the value of a field programatically, which happens to be sorted on, the value is updated correctly on the grid, but the sorting does not update based on the new value.\n \nI believe this is because the grid does not update the sorting on PropertyChanged event of its items? You can make it update the sort by firing a CollectionChanged event or Doing a refresh on the view from the collection. But these don't seem to be very efficient. The grid should, on propertychanged, check if the change is on a sorted column and if so update the sorting automatically...\n \nAttachment:\n I am attaching a modified version of the DataGrid sample obtained from here:\n http://blogs.msdn.com/vinsibal/archive/2008/10/22/wpf-datagrid-and-the-wpftoolkit-have-released.aspx\nI have added an update button. On clicking it will update \"George Washinton\"'s surname to Anderson. Now if I have the grid sorted descendingly on surname, so that Washington is second from top, and then click the update button, George Washington's name updates correctly to George Anderson. But he remains second from top and the grid still shows the surname column to be sorted descendingly.\n \nBijesh",
    "LastUpdatedDate": "2013-05-16T05:31:05.087-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2009-06-23T21:46:51.173-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "DataGrid: Sort does not refresh when data is modified.",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 10183
  },
  "FileAttachments": [
    {
      "FileId": 3161,
      "FileName": "DataGrid_V1_Sample.zip",
      "DownloadUrl": ".\\3161"
    },
    {
      "FileId": 3162,
      "FileName": "DatagridBugScreenshot.JPG",
      "DownloadUrl": ".\\3162"
    }
  ],
  "Comments": [
    {
      "Message": "Attaching the screenshot also separately.",
      "PostedDate": "2009-06-23T21:50:52.797-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-06-23T21:50:54.423-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Hey Bijeshnath, I dont think we support the re-sort on runtime update of data object from outside the ItemsControl(DataGrid in this case). You can do it yourself by calling Items.Refresh() on DataGrid whenever you update the object. I dont think we do this because it would be too expensive.",
      "PostedDate": "2009-06-26T13:41:32.04-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Hi Vamsee, I have to say I am very surprised at that response. Are you saying that a databound grid would not automatically re-sort when the data changes? That would not really be a databound grid then. As you can see from my screenshot the grid is clearly displaying wrong information (showing the sorted icon, but data is not really sorted). So I Have no choice but to refresh. If the refresh needs to be done anyways, why not have the grid do it automatically. If you are saying that is too expensive then I think it rules out the MS DataGrid as an option for our project.\r\nSo can you please confirm what you have said?",
      "PostedDate": "2009-06-30T05:08:28.78-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Hi Bijeshnath,\r\n\r\nYes, what Vamsee said is correct.  As Vamsee explained, it is very expensive for the DataGrid to listen to the PropertyChanged event for every value displayed in the DataGrid.  Though this makes sense for your scenario, for many others it does not.  For example, if you have a million items in your DataGrid, even if they are virtualized, we would still have to listen to PropertyChanged for each of those items, which could result in a pretty decent performance hit.  If you are using the sort feature as you are, then yes, we agree that it seems weird that you have to refresh yourself.  However, for many scenarios, this particular issue of the sort not refreshing does not apply, but having slower performance would be an obstacle.  That is why we did not implement this by default.\r\n\r\nThank you,\r\nSamantha",
      "PostedDate": "2009-06-30T13:40:35.467-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-06-30T13:41:05.81-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Hi Samantha,\r\nThanks for the confirmation. I understand it is a design choice, but can it be considered asa feature request. Obvisouly not everyone might want it, but I feel many would. It would be good to have this as an optional feature. Plus the implementation would need to be optimised for performance (Obviously I don't want to force a full refresh on every property update. Also doing it separately would result in a double refresh, as the databound grid would refresh once to udpate the data, and then would have to be refreshed again to update the sorting)\r\n\r\nAs it is , we are close to disregarding the MS Grid as the performance we have seen so far is surprisingly poor\r\n\r\nBijesh",
      "PostedDate": "2009-06-30T20:53:37.907-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Hi Bijesh,\r\n\r\nYes, we can consider this a feature request.  I've recorded it on an internal database and we will consider this for a future release.\r\n\r\nThanks!\r\nSamantha",
      "PostedDate": "2009-07-01T10:45:04.66-07:00",
      "Id": -2147483648
    },
    {
      "Message": "I think it's very strange that the DataGrid isn't implemented so it can be re-sorted. As Bijeshnath wrote it's not very user friendly to show an unsorted column with a sorted arrow in the header. I hope you implement this as I think many users would like the grid to be re-sorted when values in the sorted column is updated.  ",
      "PostedDate": "2009-09-03T00:42:08.74-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:41:10.69-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:31:05.087-07:00",
      "Id": -2147483648
    }
  ]
}