{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2009-08-25T13:59:01.87-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "My converter doesn't receive the correct cell when I scroll down. I'm using the June version of DataGrid. Is my binding incorrect or is there a bug?\n \nThis is my column def:\n<WpfToolkit:DataGrid.Columns>                \n                <WpfToolkit:DataGridTextColumn Header=\"Name According To Converter\" Binding=\"{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type WpfToolkit:DataGridCell}},Mode=OneWay, Converter={StaticResource ItemToNameConverter}}\" Width=\"*\" />\n            </WpfToolkit:DataGrid.Columns>\n \nAnd this is my converter:\npublic class ItemToNameConverter : IValueConverter\n    {\n        public object Convert(object value, System.Type targetType, object parameter, System.Globalization.CultureInfo culture)\n        {\n            DataGridCell cell = value as DataGridCell;\n            if (cell == null)\n                return false;\n            GridItem item = cell.DataContext as GridItem;\n            if (item == null)\n                return string.Empty;\n            else return item.Name;\n        }\n}\n \nEnclosed a demo project.",
    "LastUpdatedDate": "2013-05-16T05:31:04.333-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2009-08-16T04:01:50.34-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Converter and cells don't walk synchronised when scrollbar is needed",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 10460
  },
  "FileAttachments": [
    {
      "FileId": 3269,
      "FileName": "DataGridBug.rar",
      "DownloadUrl": ".\\3269"
    }
  ],
  "Comments": [
    {
      "Message": "As far as i understand the combination of your binding and convertor is the same as 'Binding={Binding Name}' because cell's DataContext is used for this binding too. Also because of Virtualization it is not good idea to bind to container rather than data (meaning dont bind to DataGridCell, bind to its DataContext).",
      "PostedDate": "2009-08-18T14:00:39.153-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Thanks VamseeP,\r\n\r\nThe name part was just for demonstration purposes. Basically my converter was a bit more complicated.\r\n\r\nBut thanks for your remark. That did the trick. When I use:\r\n<WpfToolkit:DataGridTextColumn Binding=\"{Binding Path=DataContext,Mode=OneWay, Converter={StaticResource ItemToNameConverter}}\" />",
      "PostedDate": "2009-08-19T12:42:08.8-07:00",
      "Id": -2147483648
    },
    {
      "Message": "<WpfToolkit:DataGridTextColumn Binding=\"{Binding Path=DataContext,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type WpfToolkit:DataGridCell}}, Mode=OneWay, Converter={StaticResource ItemToNameConverter}}\" />",
      "PostedDate": "2009-08-19T13:05:53.127-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-08-25T13:59:01.87-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:41:01.067-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:31:04.333-07:00",
      "Id": -2147483648
    }
  ]
}