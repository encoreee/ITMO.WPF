{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "I am getting following error for my chart:\n<chartingToolkit:Chart x:Name=\"chartTechDashBoard\" Title=\"Tech DashBoard - Column Chart\" Grid.Column=\"2\" Grid.Row=\"5\" >\n                <chartingToolkit:Chart.Series>\n                    <chartingToolkit:ColumnSeries x:Name=\"columnSeries\"  \n                                                ItemsSource=\"{Binding Path=TechDashBoardChartData}\"     \n                                                DependentValuePath=\"DataName\"\n                                                IndependentValuePath=\"DataId\"                                               \n                                                Title=\"Column\">\n                    </chartingToolkit:ColumnSeries>\n                </chartingToolkit:Chart.Series>\n            </chartingToolkit:Chart>\nÂ \nError:\nSystem.NullReferenceException: Object reference not set to an instance of an object.\n   at System.Windows.Controls.DataVisualization.Charting.ColumnSeries.<>c__DisplayClass8.<GetAxes>b__4() in C:\\dd\\WPF_1\\src\\wpf\\src\\ControlsPack\\WPFToolkit\\DataVisualization\\Charting\\Series\\ColumnSeries.cs:line 47\n   at System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.GetAxes(DataPoint firstDataPoint, Func`2 independentAxisPredicate, Func`1 independentAxisFactory, Func`2 dependentAxisPredicate, Func`1 dependentAxisFactory) in C:\\dd\\WPF_1\\src\\wpf\\src\\ControlsPack\\WPFToolkit\\DataVisualization\\Charting\\Series\\DataPointSeriesWithAxes.cs:line 482\n   at System.Windows.Controls.DataVisualization.Charting.ColumnSeries.GetAxes(DataPoint firstDataPoint) in C:\\dd\\WPF_1\\src\\wpf\\src\\ControlsPack\\WPFToolkit\\DataVisualization\\Charting\\Series\\ColumnSeries.cs:line 35\n   at System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.GetAxes() in C:\\dd\\WPF_1\\src\\wpf\\src\\ControlsPack\\WPFToolkit\\DataVisualization\\Charting\\Series\\DataPointSeriesWithAxes.cs:line 394\n   at System.Windows.Controls.DataVisualization.Charting.DataPointSeriesWithAxes.OnDataPointsChanged(IList`1 newDataPoints, IList`1 oldDataPoints) in C:\\dd\\WPF_1\\src\\wpf\\src\\ControlsPack\\WPFToolkit\\DataVisualization\\Charting\\Series\\DataPointSeriesWithAxes.cs:line 319\n   at System.Windows.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.OnDataPointsChanged(IList`1 newDataPoints, IList`1 oldDataPoints) in C:\\dd\\WPF_1\\src\\wpf\\src\\ControlsPack\\WPFToolkit\\DataVisualization\\Charting\\Series\\DataPointSingleSeriesWithAxes.cs:line 277\n   at System.Windows.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1.OnDataPointsChanged(IList`1 newDataPoints, IList`1 oldDataPoints) in C:\\dd\\WPF_1\\src\\wpf\\src\\ControlsPack\\WPFToolkit\\DataVisualization\\Charting\\Series\\ColumnBarBaseSeries.cs:line 219\n   at System.Windows.Controls.DataVisualization.Charting.DataPointSeries.LoadDataPoints(IEnumerable newItems, IEnumerable oldItems) in C:\\dd\\WPF_1\\src\\wpf\\src\\ControlsPack\\WPFToolkit\\DataVisualization\\Charting\\Series\\DataPointSeries.cs:line 826\n   at System.Windows.Controls.DataVisualization.Charting.DataPointSeries.Refresh() in C:\\dd\\WPF_1\\src\\wpf\\src\\ControlsPack\\WPFToolkit\\DataVisualization\\Charting\\Series\\DataPointSeries.cs:line 994\n   at System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnItemsSourceChanged(IEnumerable oldValue, IEnumerable newValue) in C:\\dd\\WPF_1\\src\\wpf\\src\\ControlsPack\\WPFToolkit\\DataVisualization\\Charting\\Series\\DataPointSeries.cs:line 232\n   at System.Windows.Controls.DataVisualization.Charting.DataPointSeries.OnItemsSourceChanged(DependencyObject o, DependencyPropertyChangedEventArgs e) in C:\\dd\\WPF_1\\src\\wpf\\src\\ControlsPack\\WPFToolkit\\DataVisualization\\Charting\\Series\\DataPointSeries.cs:line 197\n   at System.Windows.DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs e)\n   at System.Windows.FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs e)\n   at System.Windows.DependencyObject.NotifyPropertyChange(DependencyPropertyChangedEventArgs args)\n   at System.Windows.DependencyObject.UpdateEffectiveValue(EntryIndex entryIndex, DependencyProperty dp, PropertyMetadata metadata, EffectiveValueEntry oldEntry, EffectiveValueEntry& newEntry, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType)\n   at System.Windows.DependencyObject.InvalidateProperty(DependencyProperty dp)\n   at System.Windows.Data.BindingExpressionBase.Invalidate(Boolean isASubPropertyChange)\n   at System.Windows.Data.BindingExpression.TransferValue(Object newValue, Boolean isASubPropertyChange)\n   at System.Windows.Data.BindingExpression.ScheduleTransfer(Boolean isASubPropertyChange)\n   at MS.Internal.Data.ClrBindingWorker.NewValueAvailable(Boolean dependencySourcesChanged, Boolean initialValue, Boolean isASubPropertyChange)\n   at MS.Internal.Data.PropertyPathWorker.UpdateSourceValueState(Int32 k, ICollectionView collectionView, Object newValue, Boolean isASubPropertyChange)\n   at MS.Internal.Data.ClrBindingWorker.OnSourcePropertyChanged(Object o, String propName)\n   at MS.Internal.Data.PropertyPathWorker.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type managerType, Object sender, EventArgs e)\n   at System.Windows.WeakEventManager.DeliverEventToList(Object sender, EventArgs args, ListenerList list)\n   at System.ComponentModel.PropertyChangedEventManager.OnPropertyChanged(Object sender, PropertyChangedEventArgs args)\n   at Cytogenetics_CQA.ViewModel.ViewModelBase.OnPropertyChanged(String propertyName) in C:\\Case Quality Assessment\\Cytogenetics_CQA\\Cytogenetics_CQA\\ViewModel\\ViewModelBase.cs:line 48\n   at Cytogenetics_CQA.ViewModel.TechDashBoardViewModel.set_TechDashBoardChartData(List`1 value) in C:\\Case Quality Assessment\\Cytogenetics_CQA\\Cytogenetics_CQA\\ViewModel\\TechDashBoardViewModel.cs:line 156\n   at Cytogenetics_CQA.ViewModel.TechDashBoardViewModel.PopulateTechData() in C:\\Case Quality Assessment\\Cytogenetics_CQA\\Cytogenetics_CQA\\ViewModel\\TechDashBoardViewModel.cs:line 254",
    "LastUpdatedDate": "2013-02-21T18:40:08.533-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "wpf",
    "ReportedDate": "2011-10-05T10:27:57.603-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "null reference error in chartingToolkit:ColumnSeries for dependent and independent values",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 16689
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "This might be related to http://wpf.codeplex.com/workitem/14255 at least on my case",
      "PostedDate": "2012-04-09T20:52:50.67-07:00",
      "Id": -2147483648
    },
    {
      "Message": "I've also hit this issue.\r\nThe bug is below. Basically ActualIndependentAxis is null and the else block fails.  :-\r\n\r\nprotected Range<UnitValue> GetCategoryRange(object category)\r\n{\r\n            ICategoryAxis categoryAxis = ActualIndependentAxis as CategoryAxis;\r\n            if (categoryAxis != null)\r\n            {\r\n                return categoryAxis.GetPlotAreaCoordinateRange(category);\r\n            }\r\n            else\r\n            {\r\n                UnitValue unitValue = ActualIndependentAxis.GetPlotAreaCoordinate(category);\r\n\r\n...\r\n...\r\n",
      "PostedDate": "2012-05-03T06:50:26.49-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T18:40:08.533-08:00",
      "Id": -2147483648
    }
  ]
}